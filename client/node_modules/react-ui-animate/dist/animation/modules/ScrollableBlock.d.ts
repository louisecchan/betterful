import * as React from 'react';
import { UseAnimatedValueConfig, ValueType } from '../useAnimatedValue';
interface ScrollableBlockProps {
    children?: (animation: {
        value: ValueType;
    }) => React.ReactNode;
    direction?: 'single' | 'both';
    threshold?: number;
    animationConfig?: UseAnimatedValueConfig;
}
/**
 * ScrollableBlock - Higher order component to handle the entrance or exit animation
 * of a component when it enters or exit the viewport. Accepts child as a function with
 * `AnimatedValue` as its first argument which can be interpolated on input range [0, 1]
 * @prop { function } children - child as a function with `AnimatedValue` as its first argument.
 * @prop { 'single' | 'both' } direction - single applies animation on enter once, both applies on enter and exit.
 * @prop { number } threshold - should be in range 0 to 1 which equivalent to `IntersectionObserver` threshold.
 * @prop { UseAnimatedValueConfig } animationConfig - Animation config
 */
export declare const ScrollableBlock: (props: ScrollableBlockProps) => JSX.Element;
export {};
