declare type GenericEventType = {
    velocityX: number;
    velocityY: number;
    directionX: number;
    directionY: number;
};
export declare type DragEventType = {
    args: Array<number | undefined>;
    down: boolean;
    movementX: number;
    movementY: number;
    offsetX: number;
    offsetY: number;
    distanceX: number;
    distanceY: number;
    cancel: () => void;
} & GenericEventType;
export declare type MouseMoveEventType = {
    args: Array<number | undefined>;
    event: MouseEvent;
    target: EventTarget | undefined | null;
    isMoving: boolean;
    mouseX: number;
    mouseY: number;
} & GenericEventType;
export declare type ScrollEventType = {
    isScrolling: boolean;
    scrollX: number;
    scrollY: number;
} & GenericEventType;
export declare type WheelEventType = {
    target: HTMLElement | undefined | null;
    isWheeling: boolean;
    movementX: number;
    movementY: number;
    offsetX: number;
    offsetY: number;
    deltaX: number;
    deltaY: number;
} & GenericEventType;
export declare type UseDragConfig = {
    initial?: () => {
        movementX: number;
        movementY: number;
    };
};
export declare type Vector2 = {
    x: number;
    y: number;
};
export {};
