{"ast":null,"code":"var _jsxFileName = \"/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote \\uD83C\\uDF0E/Options/Coding/Projects/shop/client/src/components/Slider/Slider.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst delay = 2500;\nfunction Slideshow() {\n  _s();\n  const [index, setIndex] = React.useState(0);\n  const timeoutRef = React.useRef(null);\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n  React.useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex(prevIndex => prevIndex === colors.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshowSlider\",\n      style: {\n        transform: `translate3d(${-index * 100}%, 0, 0)`\n      },\n      children: colors.map((backgroundColor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide\",\n        style: {\n          backgroundColor\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshowDots\",\n      children: colors.map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `slideshowDot${index === idx ? \" active\" : \"\"}`,\n        onClick: () => {\n          setIndex(idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Slideshow, \"bhtDMAuiTWjY/oCsgWcgDfz/cnA=\");\n_c = Slideshow;\nexport default Slider;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","colors","delay","Slideshow","_s","index","setIndex","timeoutRef","resetTimeout","current","clearTimeout","setTimeout","prevIndex","length","className","children","style","transform","map","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_","idx","onClick","_c","Slider","$RefreshReg$"],"sources":["/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote ðŸŒŽ/Options/Coding/Projects/shop/client/src/components/Slider/Slider.jsx"],"sourcesContent":["import React from \"react\";\nimport { useState, useEffect, useRef } from \"react\";\n\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst delay = 2500;\n\nfunction Slideshow() {\n  const [index, setIndex] = React.useState(0);\n  const timeoutRef = React.useRef(null);\n\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n\n  React.useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(\n      () =>\n        setIndex((prevIndex) =>\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\n        ),\n      delay\n    );\n\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n\n  return (\n    <div className=\"slideshow\">\n      <div\n        className=\"slideshowSlider\"\n        style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\n      >\n        {colors.map((backgroundColor, index) => (\n          <div className=\"slide\" key={index} style={{ backgroundColor }}></div>\n        ))}\n      </div>\n\n      <div className=\"slideshowDots\">\n        {colors.map((_, idx) => (\n          <div\n            key={idx}\n            className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\n            onClick={() => {\n              setIndex(idx);\n            }}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Slider;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAChD,MAAMC,KAAK,GAAG,IAAI;AAElB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMW,UAAU,GAAGZ,KAAK,CAACG,MAAM,CAAC,IAAI,CAAC;EAErC,SAASU,YAAYA,CAAA,EAAG;IACtB,IAAID,UAAU,CAACE,OAAO,EAAE;MACtBC,YAAY,CAACH,UAAU,CAACE,OAAO,CAAC;IAClC;EACF;EAEAd,KAAK,CAACE,SAAS,CAAC,MAAM;IACpBW,YAAY,EAAE;IACdD,UAAU,CAACE,OAAO,GAAGE,UAAU,CAC7B,MACEL,QAAQ,CAAEM,SAAS,IACjBA,SAAS,KAAKX,MAAM,CAACY,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CAAC,CACpD,EACHV,KAAK,CACN;IAED,OAAO,MAAM;MACXM,YAAY,EAAE;IAChB,CAAC;EACH,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBf,OAAA;MACEc,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QAAEC,SAAS,EAAG,eAAc,CAACZ,KAAK,GAAG,GAAI;MAAU,CAAE;MAAAU,QAAA,EAE3Dd,MAAM,CAACiB,GAAG,CAAC,CAACC,eAAe,EAAEd,KAAK,kBACjCL,OAAA;QAAKc,SAAS,EAAC,OAAO;QAAaE,KAAK,EAAE;UAAEG;QAAgB;MAAE,GAAlCd,KAAK;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eAENvB,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3Bd,MAAM,CAACiB,GAAG,CAAC,CAACM,CAAC,EAAEC,GAAG,kBACjBzB,OAAA;QAEEc,SAAS,EAAG,eAAcT,KAAK,KAAKoB,GAAG,GAAG,SAAS,GAAG,EAAG,EAAE;QAC3DC,OAAO,EAAEA,CAAA,KAAM;UACbpB,QAAQ,CAACmB,GAAG,CAAC;QACf;MAAE,GAJGA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAMX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACnB,EAAA,CAjDQD,SAAS;AAAAwB,EAAA,GAATxB,SAAS;AAmDlB,eAAeyB,MAAM;AAAC,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}