{"ast":null,"code":"import _slicedToArray from\"/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote \\uD83C\\uDF0E/Options/Coding/Projects/shop/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useEffect,useState}from\"react\";var useScreenSize=function useScreenSize(){var _useState=useState(true),_useState2=_slicedToArray(_useState,2),isDesktopView=_useState2[0],setDesktopView=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),screenWidth=_useState4[0],setScreenWidth=_useState4[1];useEffect(function(){if(typeof window!==\"undefined\"){var handleResize=function handleResize(){setScreenWidth(window.innerWidth);};window.addEventListener(\"resize\",handleResize);handleResize();return function(){return window.removeEventListener(\"resize\",handleResize);};}},[]);useEffect(function(){if(screenWidth>=1024){setDesktopView(true);}else{setDesktopView(false);}},[screenWidth]);return{isDesktopView:isDesktopView};};export default useScreenSize;","map":{"version":3,"names":["useEffect","useState","useScreenSize","_useState","_useState2","_slicedToArray","isDesktopView","setDesktopView","_useState3","_useState4","screenWidth","setScreenWidth","window","handleResize","innerWidth","addEventListener","removeEventListener"],"sources":["/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote ðŸŒŽ/Options/Coding/Projects/shop/client/src/hooks/useScreenSize.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useScreenSize = () => {\n  const [isDesktopView, setDesktopView] = useState(true);\n  const [screenWidth, setScreenWidth] = useState(0);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      const handleResize = () => {\n        setScreenWidth(window.innerWidth);\n      };\n\n      window.addEventListener(\"resize\", handleResize);\n\n      handleResize();\n\n      return () => window.removeEventListener(\"resize\", handleResize);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (screenWidth >= 1024) {\n      setDesktopView(true);\n    } else {\n      setDesktopView(false);\n    }\n  }, [screenWidth]);\n\n  return {\n    isDesktopView,\n  };\n};\n\nexport default useScreenSize;\n"],"mappings":"mOAAA,OAASA,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAE3C,GAAM,CAAAC,aAAa,CAAG,QAAhB,CAAAA,aAAaA,CAAA,CAAS,CAC1B,IAAAC,SAAA,CAAwCF,QAAQ,CAAC,IAAI,CAAC,CAAAG,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA/CG,aAAa,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IACpC,IAAAI,UAAA,CAAsCP,QAAQ,CAAC,CAAC,CAAC,CAAAQ,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA1CE,WAAW,CAAAD,UAAA,IAAEE,cAAc,CAAAF,UAAA,IAElCT,SAAS,CAAC,UAAM,CACd,GAAI,MAAO,CAAAY,MAAM,GAAK,WAAW,CAAE,CACjC,GAAM,CAAAC,YAAY,CAAG,QAAf,CAAAA,YAAYA,CAAA,CAAS,CACzBF,cAAc,CAACC,MAAM,CAACE,UAAU,CAAC,CACnC,CAAC,CAEDF,MAAM,CAACG,gBAAgB,CAAC,QAAQ,CAAEF,YAAY,CAAC,CAE/CA,YAAY,EAAE,CAEd,MAAO,kBAAM,CAAAD,MAAM,CAACI,mBAAmB,CAAC,QAAQ,CAAEH,YAAY,CAAC,GACjE,CACF,CAAC,CAAE,EAAE,CAAC,CAENb,SAAS,CAAC,UAAM,CACd,GAAIU,WAAW,EAAI,IAAI,CAAE,CACvBH,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,IAAM,CACLA,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,CAAE,CAACG,WAAW,CAAC,CAAC,CAEjB,MAAO,CACLJ,aAAa,CAAbA,aACF,CAAC,CACH,CAAC,CAED,cAAe,CAAAJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}