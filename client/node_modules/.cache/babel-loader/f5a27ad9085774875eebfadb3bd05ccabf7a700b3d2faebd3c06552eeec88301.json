{"ast":null,"code":"Object.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar React = require('react');\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {\n    'default': e\n  };\n}\nvar React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n\n/**\r\n * Base Animation class\r\n */\nclass Animation {\n  _debounceOnEnd(result) {\n    const onEnd = this._onEnd;\n    const onRest = this._onRest;\n    this._onEnd = null;\n    this._onRest = null;\n    onRest && onRest(result);\n    onEnd && onEnd(result);\n  }\n  stop() {}\n}\nconst RequestAnimationFrame = {\n  current: cb => global.requestAnimationFrame(cb),\n  inject(injected) {\n    RequestAnimationFrame.current = injected;\n  }\n};\nconst CancelAnimationFrame = {\n  current: id => global.cancelAnimationFrame(id),\n  inject(injected) {\n    CancelAnimationFrame.current = injected;\n  }\n};\n\n/**\r\n * Class implementing spring based animation\r\n */\nclass SpringAnimation extends Animation {\n  constructor(_ref) {\n    let {\n      initialPosition,\n      config\n    } = _ref;\n    var _a, _b, _c, _d, _e, _f;\n    super();\n    this._overshootClamping = false;\n    this._initialVelocity = 0;\n    this._lastVelocity = 0;\n    this._startPosition = initialPosition;\n    this._position = this._startPosition;\n    this._restDisplacementThreshold = (_a = config === null || config === void 0 ? void 0 : config.restDistance) !== null && _a !== void 0 ? _a : 0.001;\n    this._restSpeedThreshold = (_b = config === null || config === void 0 ? void 0 : config.restDistance) !== null && _b !== void 0 ? _b : 0.001;\n    this._mass = (_c = config === null || config === void 0 ? void 0 : config.mass) !== null && _c !== void 0 ? _c : 1;\n    this._tension = (_d = config === null || config === void 0 ? void 0 : config.tension) !== null && _d !== void 0 ? _d : 170;\n    this._friction = (_e = config === null || config === void 0 ? void 0 : config.friction) !== null && _e !== void 0 ? _e : 26;\n    this._delay = (_f = config === null || config === void 0 ? void 0 : config.delay) !== null && _f !== void 0 ? _f : 0;\n    this._onRest = config === null || config === void 0 ? void 0 : config.onRest;\n    this._onChange = config === null || config === void 0 ? void 0 : config.onChange;\n  }\n  onChange(value) {\n    this._onFrame(value);\n    if (this._lastPosition !== value) {\n      if (this._onChange) {\n        this._onChange(value);\n      }\n    }\n    this._lastPosition = value;\n  }\n  onUpdate() {\n    var now = Date.now();\n    const deltaTime = Math.min(now - this._lastTime, 64);\n    this._lastTime = now;\n    const c = this._friction;\n    const m = this._mass;\n    const k = this._tension;\n    const v0 = -this._lastVelocity;\n    const x0 = this._toValue - this._position;\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1 - Math.pow(zeta, 2)); // exponential decay\n    const t = deltaTime / 1000;\n    const sin1 = Math.sin(omega1 * t);\n    const cos1 = Math.cos(omega1 * t);\n    // under damped\n    const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\n    const underDampedFrag1 = underDampedEnvelope * (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\n    const underDampedPosition = this._toValue - underDampedFrag1;\n    // This looks crazy -- it's actually just the derivative of the oscillation function\n    const underDampedVelocity = zeta * omega0 * underDampedFrag1 - underDampedEnvelope * (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\n    // critically damped\n    const criticallyDampedEnvelope = Math.exp(-omega0 * t);\n    const criticallyDampedPosition = this._toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\n    const criticallyDampedVelocity = criticallyDampedEnvelope * (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\n    this.onChange(this._position);\n    const isOvershooting = () => {\n      if (this._overshootClamping && this._tension !== 0) {\n        return this._position < this._toValue ? this._position > this._toValue : this._position < this._toValue;\n      } else {\n        return false;\n      }\n    };\n    const isVelocity = Math.abs(this._lastVelocity) < this._restSpeedThreshold;\n    const isDisplacement = this._tension === 0 || Math.abs(this._toValue - this._position) < this._restDisplacementThreshold;\n    if (zeta < 1) {\n      this._position = underDampedPosition;\n      this._lastVelocity = underDampedVelocity;\n    } else {\n      this._position = criticallyDampedPosition;\n      this._lastVelocity = criticallyDampedVelocity;\n    }\n    if (isOvershooting() || isVelocity && isDisplacement) {\n      if (this._tension !== 0) {\n        this._lastVelocity = 0;\n        this._position = this._toValue;\n        this.onChange(this._position);\n      }\n      // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\n      this._lastTime = 0;\n      this._debounceOnEnd({\n        finished: true,\n        value: this._toValue\n      });\n      return;\n    }\n    this._animationFrame = RequestAnimationFrame.current(this.onUpdate.bind(this));\n  }\n  stop() {\n    this._active = false;\n    clearTimeout(this._timeout);\n    CancelAnimationFrame.current(this._animationFrame);\n    this._debounceOnEnd({\n      finished: false,\n      value: this._position\n    });\n  }\n  // Set value\n  set(toValue) {\n    this.stop();\n    this._position = toValue;\n    this._lastTime = 0;\n    this._lastVelocity = 0;\n    this.onChange(toValue);\n  }\n  start(_ref2) {\n    let {\n      toValue,\n      onFrame,\n      previousAnimation,\n      onEnd\n    } = _ref2;\n    const onStart = () => {\n      this._onFrame = onFrame;\n      this._active = true;\n      this._toValue = toValue;\n      this._onEnd = onEnd;\n      const now = Date.now();\n      if (previousAnimation instanceof SpringAnimation) {\n        this._lastVelocity = previousAnimation._lastVelocity || this._lastVelocity || 0;\n        this._lastTime = previousAnimation._lastTime || now;\n      } else {\n        this._lastTime = now;\n      }\n      this._animationFrame = RequestAnimationFrame.current(this.onUpdate.bind(this));\n    };\n    if (this._delay !== 0) {\n      this._timeout = setTimeout(() => onStart(), this._delay);\n    } else {\n      onStart();\n    }\n  }\n}\n\n/**\r\n * https://github.com/gre/bezier-easing\r\n * BezierEasing - use bezier curve for transition easing function\r\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n */\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\nvar NEWTON_ITERATIONS = 4;\nvar NEWTON_MIN_SLOPE = 0.001;\nvar SUBDIVISION_PRECISION = 0.0000001;\nvar SUBDIVISION_MAX_ITERATIONS = 10;\nvar kSplineTableSize = 11;\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\nvar float32ArraySupported = typeof Float32Array === \"function\";\nfunction A(aA1, aA2) {\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n}\nfunction B(aA1, aA2) {\n  return 3.0 * aA2 - 6.0 * aA1;\n}\nfunction C(aA1) {\n  return 3.0 * aA1;\n}\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nfunction calcBezier(aT, aA1, aA2) {\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n}\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\nfunction getSlope(aT, aA1, aA2) {\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n}\nfunction binarySubdivide(aX, aA, aB, mX1, mX2) {\n  var currentX,\n    currentT,\n    i = 0;\n  do {\n    currentT = aA + (aB - aA) / 2.0;\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\n    if (currentX > 0.0) {\n      aB = currentT;\n    } else {\n      aA = currentT;\n    }\n  } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\n  return currentT;\n}\nfunction newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\n    if (currentSlope === 0.0) {\n      return aGuessT;\n    }\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n    aGuessT -= currentX / currentSlope;\n  }\n  return aGuessT;\n}\nfunction LinearEasing(x) {\n  return x;\n}\nfunction bezier(mX1, mY1, mX2, mY2) {\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\n    throw new Error(\"bezier x values must be in [0, 1] range\");\n  }\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n  // Precompute samples table\n  var sampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n  function getTForX(aX) {\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n    for (; currentSample !== lastSample && sampleValues[currentSample] <= aX; ++currentSample) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n    // Interpolate to provide an initial guess for t\n    var dist = (aX - sampleValues[currentSample]) / (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\n    }\n  }\n  return function BezierEasing(x) {\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0 || x === 1) {\n      return x;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n}\n\n/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\n/**\r\n * This class implements common easing functions. The math is pretty obscure,\r\n * but this cool website has nice visual illustrations of what they represent:\r\n * http://xaedes.de/dev/transitions/\r\n */\nclass Easing {\n  static step0(n) {\n    return n > 0 ? 1 : 0;\n  }\n  static step1(n) {\n    return n >= 1 ? 1 : 0;\n  }\n  static linear(t) {\n    return t;\n  }\n  static ease(t) {\n    return ease(t);\n  }\n  static quad(t) {\n    return t * t;\n  }\n  static cubic(t) {\n    return t * t * t;\n  }\n  static poly(n) {\n    return t => Math.pow(t, n);\n  }\n  static sin(t) {\n    return 1 - Math.cos(t * Math.PI / 2);\n  }\n  static circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  static exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  /**\r\n   * A simple elastic interaction, similar to a spring.  Default bounciness\r\n   * is 1, which overshoots a little bit once.  0 bounciness doesn't overshoot\r\n   * at all, and bounciness of N > 1 will overshoot about N times.\r\n   *\r\n   * Wolfram Plots:\r\n   *\r\n   *   http://tiny.cc/elastic_b_1 (default bounciness = 1)\r\n   *   http://tiny.cc/elastic_b_3 (bounciness = 3)\r\n   */\n  static elastic() {\n    let bounciness = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var p = bounciness * Math.PI;\n    return t => 1 - Math.pow(Math.cos(t * Math.PI / 2), 3) * Math.cos(t * p);\n  }\n  static back(s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return t => t * t * ((s + 1) * t - s);\n  }\n  static bounce(t) {\n    if (t < 1 / 2.75) {\n      return 7.5625 * t * t;\n    }\n    if (t < 2 / 2.75) {\n      t -= 1.5 / 2.75;\n      return 7.5625 * t * t + 0.75;\n    }\n    if (t < 2.5 / 2.75) {\n      t -= 2.25 / 2.75;\n      return 7.5625 * t * t + 0.9375;\n    }\n    t -= 2.625 / 2.75;\n    return 7.5625 * t * t + 0.984375;\n  }\n  static bezier(x1, y1, x2, y2) {\n    return bezier(x1, y1, x2, y2);\n  }\n  static in(easing) {\n    return easing;\n  }\n  /**\r\n   * Runs an easing function backwards.\r\n   */\n  static out(easing) {\n    return t => 1 - easing(1 - t);\n  }\n  /**\r\n   * Makes any easing function symmetrical.\r\n   */\n  static inOut(easing) {\n    return t => {\n      if (t < 0.5) {\n        return easing(t * 2) / 2;\n      }\n      return 1 - easing((1 - t) * 2) / 2;\n    };\n  }\n}\nvar ease = Easing.bezier(0.42, 0, 1, 1);\n\n/**\r\n * Class implementing timing based animation\r\n */\nclass TimingAnimation extends Animation {\n  constructor(_ref3) {\n    let {\n      initialPosition,\n      config\n    } = _ref3;\n    var _a, _b, _c;\n    super();\n    this._fromValue = initialPosition;\n    this._position = this._fromValue;\n    this._easing = (_a = config === null || config === void 0 ? void 0 : config.easing) !== null && _a !== void 0 ? _a : Easing.linear;\n    this._duration = (_b = config === null || config === void 0 ? void 0 : config.duration) !== null && _b !== void 0 ? _b : 500;\n    this._tempDuration = this._duration;\n    // Modifiers\n    // here immediate acts like duration: 0\n    if (config === null || config === void 0 ? void 0 : config.immediate) {\n      this._duration = 0;\n    }\n    this._delay = (_c = config === null || config === void 0 ? void 0 : config.delay) !== null && _c !== void 0 ? _c : 0;\n    this._onRest = config === null || config === void 0 ? void 0 : config.onRest;\n    this._onChange = config === null || config === void 0 ? void 0 : config.onChange;\n  }\n  onChange(value) {\n    this._onFrame(value);\n    if (this._lastPosition !== value) {\n      if (this._onChange) {\n        this._onChange(value);\n      }\n    }\n    this._lastPosition = value;\n  }\n  onUpdate() {\n    const now = Date.now();\n    const runTime = now - this._startTime;\n    if (runTime >= this._duration) {\n      this._startTime = 0;\n      this._position = this._toValue;\n      this.onChange(this._position);\n      this._debounceOnEnd({\n        finished: true,\n        value: this._position\n      });\n      return;\n    }\n    const progress = this._easing(runTime / this._duration);\n    this._position = this._fromValue + (this._toValue - this._fromValue) * progress;\n    this.onChange(this._position);\n    this._animationFrame = RequestAnimationFrame.current(this.onUpdate.bind(this));\n  }\n  stop() {\n    this._active = false;\n    clearTimeout(this._timeout);\n    CancelAnimationFrame.current(this._animationFrame);\n    this._debounceOnEnd({\n      finished: false,\n      value: this._position\n    });\n  }\n  // Set value\n  set(toValue) {\n    this.stop();\n    this._position = toValue;\n    this.onChange(toValue);\n  }\n  start(_ref4) {\n    let {\n      toValue,\n      onFrame,\n      previousAnimation,\n      onEnd\n    } = _ref4;\n    const onStart = () => {\n      this._onFrame = onFrame;\n      this._active = true;\n      this._onEnd = onEnd;\n      this._toValue = toValue;\n      if (previousAnimation && previousAnimation instanceof TimingAnimation && previousAnimation._toValue === toValue && previousAnimation._startTime) {\n        this._startTime = previousAnimation._startTime;\n        this._fromValue = previousAnimation._fromValue;\n      } else {\n        const now = Date.now();\n        this._startTime = now;\n        this._fromValue = this._position;\n      }\n      this._animationFrame = RequestAnimationFrame.current(this.onUpdate.bind(this));\n    };\n    if (this._delay !== 0) {\n      this._timeout = setTimeout(() => onStart(), this._delay);\n    } else {\n      onStart();\n    }\n  }\n}\nconst COLOR_NUMBER_REGEX = /[+-]?\\d+(\\.\\d+)?|[\\s]?\\.\\d+|#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})/gi;\nconst HEX_NAME_COLOR = /#[a-f\\d]{3,}|transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|burntsienna|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen/gi;\n// Named colors\nconst colorNames = {\n  transparent: \"#00000000\",\n  aliceblue: \"#f0f8ffff\",\n  antiquewhite: \"#faebd7ff\",\n  aqua: \"#00ffffff\",\n  aquamarine: \"#7fffd4ff\",\n  azure: \"#f0ffffff\",\n  beige: \"#f5f5dcff\",\n  bisque: \"#ffe4c4ff\",\n  black: \"#000000ff\",\n  blanchedalmond: \"#ffebcdff\",\n  blue: \"#0000ffff\",\n  blueviolet: \"#8a2be2ff\",\n  brown: \"#a52a2aff\",\n  burlywood: \"#deb887ff\",\n  burntsienna: \"#ea7e5dff\",\n  cadetblue: \"#5f9ea0ff\",\n  chartreuse: \"#7fff00ff\",\n  chocolate: \"#d2691eff\",\n  coral: \"#ff7f50ff\",\n  cornflowerblue: \"#6495edff\",\n  cornsilk: \"#fff8dcff\",\n  crimson: \"#dc143cff\",\n  cyan: \"#00ffffff\",\n  darkblue: \"#00008bff\",\n  darkcyan: \"#008b8bff\",\n  darkgoldenrod: \"#b8860bff\",\n  darkgray: \"#a9a9a9ff\",\n  darkgreen: \"#006400ff\",\n  darkgrey: \"#a9a9a9ff\",\n  darkkhaki: \"#bdb76bff\",\n  darkmagenta: \"#8b008bff\",\n  darkolivegreen: \"#556b2fff\",\n  darkorange: \"#ff8c00ff\",\n  darkorchid: \"#9932ccff\",\n  darkred: \"#8b0000ff\",\n  darksalmon: \"#e9967aff\",\n  darkseagreen: \"#8fbc8fff\",\n  darkslateblue: \"#483d8bff\",\n  darkslategray: \"#2f4f4fff\",\n  darkslategrey: \"#2f4f4fff\",\n  darkturquoise: \"#00ced1ff\",\n  darkviolet: \"#9400d3ff\",\n  deeppink: \"#ff1493ff\",\n  deepskyblue: \"#00bfffff\",\n  dimgray: \"#696969ff\",\n  dimgrey: \"#696969ff\",\n  dodgerblue: \"#1e90ffff\",\n  firebrick: \"#b22222ff\",\n  floralwhite: \"#fffaf0ff\",\n  forestgreen: \"#228b22ff\",\n  fuchsia: \"#ff00ffff\",\n  gainsboro: \"#dcdcdcff\",\n  ghostwhite: \"#f8f8ffff\",\n  gold: \"#ffd700ff\",\n  goldenrod: \"#daa520ff\",\n  gray: \"#808080ff\",\n  green: \"#008000ff\",\n  greenyellow: \"#adff2fff\",\n  grey: \"#808080ff\",\n  honeydew: \"#f0fff0ff\",\n  hotpink: \"#ff69b4ff\",\n  indianred: \"#cd5c5cff\",\n  indigo: \"#4b0082ff\",\n  ivory: \"#fffff0ff\",\n  khaki: \"#f0e68cff\",\n  lavender: \"#e6e6faff\",\n  lavenderblush: \"#fff0f5ff\",\n  lawngreen: \"#7cfc00ff\",\n  lemonchiffon: \"#fffacdff\",\n  lightblue: \"#add8e6ff\",\n  lightcoral: \"#f08080ff\",\n  lightcyan: \"#e0ffffff\",\n  lightgoldenrodyellow: \"#fafad2ff\",\n  lightgray: \"#d3d3d3ff\",\n  lightgreen: \"#90ee90ff\",\n  lightgrey: \"#d3d3d3ff\",\n  lightpink: \"#ffb6c1ff\",\n  lightsalmon: \"#ffa07aff\",\n  lightseagreen: \"#20b2aaff\",\n  lightskyblue: \"#87cefaff\",\n  lightslategray: \"#778899ff\",\n  lightslategrey: \"#778899ff\",\n  lightsteelblue: \"#b0c4deff\",\n  lightyellow: \"#ffffe0ff\",\n  lime: \"#00ff00ff\",\n  limegreen: \"#32cd32ff\",\n  linen: \"#faf0e6ff\",\n  magenta: \"#ff00ffff\",\n  maroon: \"#800000ff\",\n  mediumaquamarine: \"#66cdaaff\",\n  mediumblue: \"#0000cdff\",\n  mediumorchid: \"#ba55d3ff\",\n  mediumpurple: \"#9370dbff\",\n  mediumseagreen: \"#3cb371ff\",\n  mediumslateblue: \"#7b68eeff\",\n  mediumspringgreen: \"#00fa9aff\",\n  mediumturquoise: \"#48d1ccff\",\n  mediumvioletred: \"#c71585ff\",\n  midnightblue: \"#191970ff\",\n  mintcream: \"#f5fffaff\",\n  mistyrose: \"#ffe4e1ff\",\n  moccasin: \"#ffe4b5ff\",\n  navajowhite: \"#ffdeadff\",\n  navy: \"#000080ff\",\n  oldlace: \"#fdf5e6ff\",\n  olive: \"#808000ff\",\n  olivedrab: \"#6b8e23ff\",\n  orange: \"#ffa500ff\",\n  orangered: \"#ff4500ff\",\n  orchid: \"#da70d6ff\",\n  palegoldenrod: \"#eee8aaff\",\n  palegreen: \"#98fb98ff\",\n  paleturquoise: \"#afeeeeff\",\n  palevioletred: \"#db7093ff\",\n  papayawhip: \"#ffefd5ff\",\n  peachpuff: \"#ffdab9ff\",\n  peru: \"#cd853fff\",\n  pink: \"#ffc0cbff\",\n  plum: \"#dda0ddff\",\n  powderblue: \"#b0e0e6ff\",\n  purple: \"#800080ff\",\n  rebeccapurple: \"#663399ff\",\n  red: \"#ff0000ff\",\n  rosybrown: \"#bc8f8fff\",\n  royalblue: \"#4169e1ff\",\n  saddlebrown: \"#8b4513ff\",\n  salmon: \"#fa8072ff\",\n  sandybrown: \"#f4a460ff\",\n  seagreen: \"#2e8b57ff\",\n  seashell: \"#fff5eeff\",\n  sienna: \"#a0522dff\",\n  silver: \"#c0c0c0ff\",\n  skyblue: \"#87ceebff\",\n  slateblue: \"#6a5acdff\",\n  slategray: \"#708090ff\",\n  slategrey: \"#708090ff\",\n  snow: \"#fffafaff\",\n  springgreen: \"#00ff7fff\",\n  steelblue: \"#4682b4ff\",\n  tan: \"#d2b48cff\",\n  teal: \"#008080ff\",\n  thistle: \"#d8bfd8ff\",\n  tomato: \"#ff6347ff\",\n  turquoise: \"#40e0d0ff\",\n  violet: \"#ee82eeff\",\n  wheat: \"#f5deb3ff\",\n  white: \"#ffffffff\",\n  whitesmoke: \"#f5f5f5ff\",\n  yellow: \"#ffff00ff\",\n  yellowgreen: \"#9acd32ff\"\n};\nfunction conv3to6(hex) {\n  const regex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\n  return hex.replace(regex, function (_, r, g, b) {\n    return \"#\" + r + r + g + g + b + b;\n  });\n}\nfunction conv6to8(hex) {\n  if (hex.length === 7) {\n    return hex + \"FF\";\n  }\n  return hex;\n}\nfunction hexToRgba(hex) {\n  const hex6 = conv3to6(hex);\n  const hex8 = conv6to8(hex6);\n  const hexRgba = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex8);\n  return {\n    r: parseInt(hexRgba[1], 16),\n    g: parseInt(hexRgba[2], 16),\n    b: parseInt(hexRgba[3], 16),\n    a: parseInt(hexRgba[4], 16) / 255\n  };\n}\nfunction rgbaToHex(rgba) {\n  const {\n    r,\n    g,\n    b,\n    a\n  } = rgba;\n  const hexR = (r | 1 << 8).toString(16).slice(1);\n  const hexG = (g | 1 << 8).toString(16).slice(1);\n  const hexB = (b | 1 << 8).toString(16).slice(1);\n  const hexA = (a * 255 | 1 << 8).toString(16).slice(1);\n  return \"#\" + hexR + hexG + hexB + hexA;\n}\n\n/**\r\n * isTransitionValue to check the value is TransitionValue or not\r\n * @param value - any\r\n * @returns - boolean\r\n */\nconst isTransitionValue = value => {\n  return typeof value === 'object' && Object.prototype.hasOwnProperty.call(value, '_subscribe');\n};\n\n/**\r\n * Function to get the array of animatable objects\r\n * @param propertyType - which property type \"props\" or \"style\"\r\n */\nfunction getAnimatableObject(propertyType, propertiesObject) {\n  return Object.keys(propertiesObject).reduce(function (acc, styleProp) {\n    const value = propertiesObject[styleProp];\n    if (isTransitionValue(value)) {\n      const {\n        _value\n      } = value;\n      return [...acc, Object.assign({\n        propertyType,\n        property: styleProp,\n        animatable: !(typeof _value === 'string')\n      }, value)];\n    }\n    return acc;\n  }, []);\n}\n\n/**\r\n * style keys which can be accepted by animated component\r\n */\nconst styleTrasformKeys = ['perspective', 'translate', 'translateX', 'translateY', 'translateZ', 'scale', 'scaleX', 'scaleY', 'scaleZ', 'rotate', 'rotateX', 'rotateY', 'rotateZ', 'skew', 'skewX', 'skewY'];\nfunction splitCSSValueAndUnit(value) {\n  const valueMatch = value.match(/(-)?(\\d+.)?\\d+/g);\n  const unitMatch = value.match(/px|rem|em|ex|%|cm|mm|in|pt|pc|ch|vh|vw|vmin|vmax/);\n  return {\n    value: Number(valueMatch),\n    unit: unitMatch && unitMatch[0]\n  };\n}\n// get unit of transform style property\nfunction getValueUnit(property, value) {\n  let unit;\n  const splitValue = splitCSSValueAndUnit(String(value)).value;\n  const splitUnit = splitCSSValueAndUnit(String(value)).unit;\n  // if string value is passed with unit then split it\n  if (splitUnit) {\n    return {\n      value: splitValue,\n      unit: splitUnit\n    };\n  }\n  if (property.indexOf('translate') !== -1 || property.indexOf('perspective') !== -1) {\n    unit = 'px';\n  } else if (property.indexOf('scale') !== -1) {\n    unit = '';\n  } else if (property.indexOf('rotate') !== -1 || property.indexOf('skew') !== -1) {\n    unit = 'deg';\n  }\n  return {\n    value,\n    unit\n  };\n}\nfunction getTransformValueWithUnits(property, value) {\n  const valueUnit = getValueUnit(property, value);\n  if (property.indexOf('X') !== -1 || property.indexOf('Y') !== -1 || property.indexOf('Z') !== -1 || property.indexOf('perspective') !== -1 || property.indexOf('rotate') !== -1 || property.indexOf('skew') !== -1) {\n    // axis value\n    return `${property}(${valueUnit.value}${valueUnit.unit})`;\n  } else if (property.indexOf('translate') !== -1 || property.indexOf('scale') !== -1) {\n    // two parameter value\n    return `${property}(${valueUnit.value}${valueUnit.unit}, ${valueUnit.value}${valueUnit.unit})`;\n  } else {\n    throw new Error(`Error! Property '${property}' cannot be transformed`);\n  }\n}\n/**\r\n * getTransform function returns transform string from style object\r\n */\nfunction getTransform(style) {\n  const styleKeys = Object.keys(style);\n  return styleKeys.map(function (styleProp) {\n    const value = style[styleProp];\n    return getTransformValueWithUnits(styleProp, value);\n  }).reduce(function (transform, value) {\n    return transform += ` ${value}`;\n  }, '').trim();\n}\n\n/**\r\n * getNonAnimatableStyle function returns the non-animatable style object\r\n * @param style - CSSProperties\r\n * @returns - non-animatable CSSProperties\r\n */\nfunction getNonAnimatableStyle(style, transformObjectRef) {\n  const stylesWithoutTransforms = Object.keys(style).reduce((resultObject, styleProp) => {\n    const value = style[styleProp];\n    // skips all the subscribers here\n    // only get non-animatable styles\n    if (isTransitionValue(value)) {\n      return resultObject;\n    } else if (styleTrasformKeys.indexOf(styleProp) !== -1) {\n      // if not subscriber, then check styleTransformKeys\n      // add it to transformPropertiesObjectRef\n      transformObjectRef.current[styleProp] = value;\n      return resultObject;\n    }\n    return Object.assign(Object.assign({}, resultObject), {\n      [styleProp]: value\n    });\n  }, {});\n  const transformStyle = {};\n  if (Object.keys(transformObjectRef.current).length > 0) {\n    transformStyle.transform = getTransform(transformObjectRef.current);\n  }\n  // combined transform and non-transform styles\n  const combinedStyle = Object.assign(Object.assign({}, transformStyle), stylesWithoutTransforms);\n  return combinedStyle;\n}\n\n/**\r\n * Function to get clean props object without any subscribers\r\n */\nconst getCleanProps = props => {\n  const cleanProps = Object.assign({}, props);\n  if (cleanProps.style) {\n    delete cleanProps.style;\n  }\n  Object.keys(cleanProps).forEach(prop => {\n    if (isTransitionValue(cleanProps[prop])) {\n      delete cleanProps[prop];\n    }\n  });\n  return cleanProps;\n};\nconst tags = ['a', 'abbr', 'acronym', 'address', 'applet', 'area', 'article', 'aside', 'audio', 'b', 'base', 'basefont', 'bdi', 'bdo', 'bgsound', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'circle', 'cite', 'clipPath', 'code', 'col', 'colgroup', 'command', 'content', 'data', 'datalist', 'dd', 'defs', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'ellipse', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'foreignObject', 'form', 'frame', 'frameset', 'g', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'iframe', 'image', 'img', 'input', 'ins', 'isindex', 'kbd', 'keygen', 'label', 'legend', 'li', 'line', 'linearGradient', 'link', 'listing', 'main', 'map', 'mark', 'marquee', 'mask', 'math', 'menu', 'menuitem', 'meta', 'meter', 'multicol', 'nav', 'nextid', 'nobr', 'noembed', 'noframes', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'path', 'pattern', 'picture', 'plaintext', 'polygon', 'polyline', 'pre', 'progress', 'q', 'radialGradient', 'rb', 'rbc', 'rect', 'rp', 'rt', 'rtc', 'ruby', 's', 'samp', 'script', 'section', 'select', 'shadow', 'slot', 'small', 'source', 'spacer', 'span', 'stop', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'svg', 'table', 'tbody', 'td', 'template', 'text', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'tspan', 'tt', 'u', 'ul', 'var', 'video', 'wbr', 'xmp'];\nconst unitlessStyleProps = ['borderImageOutset', 'borderImageSlice', 'borderImageWidth', 'fontWeight', 'lineHeight', 'opacity', 'orphans', 'tabSize', 'widows', 'zIndex', 'zoom',\n// SVG-related properties\n'fillOpacity', 'floodOpacity', 'stopOpacity', 'strokeDasharray', 'strokeDashoffset', 'strokeMiterlimit', 'strokeOpacity', 'strokeWidth',\n// prefixed\n'animationIterationCount', 'boxFlex', 'boxFlexGroup', 'boxOrdinalGroup', 'columnCount', 'flex', 'flexGrow', 'flexPositive', 'flexShrink', 'flexNegative', 'flexOrder', 'gridRow', 'gridColumn', 'order', 'lineClamp'];\n\n/**\r\n * getCssValue() function to get css value with unit or without unit\r\n * it is only for style property - it cannot be used with transform keys\r\n * @param property - style property\r\n * @param value - style value\r\n * @returns - value with unit or without unit\r\n */\nfunction getCssValue(property, value) {\n  let cssValue;\n  if (typeof value === \"number\") {\n    if (unitlessStyleProps.indexOf(property) !== -1) {\n      cssValue = value;\n    } else {\n      cssValue = value + \"px\";\n    }\n  } else {\n    cssValue = value;\n  }\n  return cssValue;\n}\n\n/**\r\n * isDefined to check the value is defined or not\r\n * @param value - any\r\n * @returns - boolean\r\n */\nconst isDefined = value => {\n  return value !== null && value !== undefined;\n};\n\n/**\r\n * Function to convert camel case to dashed case\r\n * eg: backgroundColor -> background-color\r\n *\r\n * @param str\r\n */\nfunction camelToDash(str) {\n  if (str != str.toLowerCase()) {\n    str = str.replace(/[A-Z]/g, m => '-' + m.toLowerCase());\n  }\n  return str;\n}\nconst _internalInterpolate = (val, arr, extrapolateLeft, extrapolateRight) => {\n  const [inputMin, inputMax, outputMin, outputMax] = arr;\n  let result = val;\n  // EXTRAPOLATE\n  if (result < inputMin) {\n    if (extrapolateLeft === 'identity') {\n      return result;\n    } else if (extrapolateLeft === 'clamp') {\n      result = inputMin;\n    } else ;\n  }\n  if (result > inputMax) {\n    if (extrapolateRight === 'identity') {\n      return result;\n    } else if (extrapolateRight === 'clamp') {\n      result = inputMax;\n    } else ;\n  }\n  if (outputMin === outputMax) {\n    return outputMin;\n  }\n  if (inputMin === inputMax) {\n    if (val <= inputMin) {\n      return outputMin;\n    }\n    return outputMax;\n  }\n  // Input Range\n  if (inputMin === -Infinity) {\n    result = -result;\n  } else if (inputMax === Infinity) {\n    result = result - inputMin;\n  } else {\n    result = (result - inputMin) / (inputMax - inputMin);\n  }\n  // Output Range\n  if (outputMin === -Infinity) {\n    result = -result;\n  } else if (outputMax === Infinity) {\n    result = result + outputMin;\n  } else {\n    result = result * (outputMax - outputMin) + outputMin;\n  }\n  return result;\n};\nconst _getNarrowedInputArray = function (x, input, output) {\n  const length = input.length;\n  let narrowedInput = [];\n  // Boundaries\n  if (x < input[0]) {\n    narrowedInput = [input[0], input[1], output[0], output[1]];\n  } else if (x > input[length - 1]) {\n    narrowedInput = [input[length - 2], input[length - 1], output[length - 2], output[length - 1]];\n  }\n  // Narrow the input and output ranges\n  for (let i = 1; i < length; ++i) {\n    if (x <= input[i]) {\n      narrowedInput = [input[i - 1], input[i], output[i - 1], output[i]];\n      break;\n    }\n  }\n  return narrowedInput;\n};\nconst _getColorInterpolate = (value, narrowedInput) => {\n  const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\n  const outputMinProcessed = hexToRgba(outputMin);\n  const outputMaxProcessed = hexToRgba(outputMax);\n  const red = _internalInterpolate(value, [inputMin, inputMax, outputMinProcessed.r, outputMaxProcessed.r], 'clamp', 'clamp');\n  const green = _internalInterpolate(value, [inputMin, inputMax, outputMinProcessed.g, outputMaxProcessed.g], 'clamp', 'clamp');\n  const blue = _internalInterpolate(value, [inputMin, inputMax, outputMinProcessed.b, outputMaxProcessed.b], 'clamp', 'clamp');\n  const alpha = _internalInterpolate(value, [inputMin, inputMax, outputMinProcessed.a, outputMaxProcessed.a], 'clamp', 'clamp');\n  return rgbaToHex({\n    r: red,\n    g: green,\n    b: blue,\n    a: alpha\n  });\n};\nconst _getArrayInterpolate = (value, narrowedInput, _extrapolateLeft, _extrapolateRight) => {\n  const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\n  if (outputMin.length === outputMax.length) {\n    return outputMin.map((val, index) => {\n      if (typeof val === 'string') {\n        // IF IT IS STRING THEN IT MUST BE HEX COLOR\n        return _getColorInterpolate(value, [inputMin, inputMax, val, outputMax[index]]);\n      } else {\n        return _internalInterpolate(value, [inputMin, inputMax, val, outputMax[index]], _extrapolateLeft, _extrapolateRight);\n      }\n    });\n  } else {\n    throw new Error(\"Array length doesn't match\");\n  }\n};\nconst _getTemplateString = str => {\n  return str.replace(COLOR_NUMBER_REGEX, function (match) {\n    if (match.indexOf(' ') === 0) {\n      return ' $';\n    }\n    return '$';\n  });\n};\nconst _getParsedStringArray = str => {\n  return str.match(COLOR_NUMBER_REGEX).map(v => {\n    if (v.indexOf('#') !== -1) {\n      return v;\n    } else {\n      return Number(v);\n    }\n  });\n};\n/**\r\n * Function returns if the template of two strings are matched\r\n * i.e. they can be interpolated\r\n * @param str1 - first string\r\n * @param str2 - second string\r\n * @returns boolean indicating two strings matched or not\r\n */\nconst stringMatched = (str1, str2) => {\n  return _getTemplateString(str1).trim().replace(/\\s/g, '').length === _getTemplateString(str2).trim().replace(/\\s/g, '').length;\n};\n/**\r\n * Function which proccess the\r\n * hexadecimal colors to its proper formats\r\n * @param str - string\r\n * @returns hex color string\r\n */\nconst getProcessedColor = str => {\n  return str.replace(HEX_NAME_COLOR, function (match) {\n    if (match.indexOf('#') !== -1) {\n      return rgbaToHex(hexToRgba(match));\n    } else if (Object.prototype.hasOwnProperty.call(colorNames, match)) {\n      return colorNames[match];\n    } else {\n      throw new Error('String cannot be parsed!');\n    }\n  });\n};\n/**\r\n * interpolateNumbers to interpolate the numeric value\r\n * @param value - number\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n * @returns - number | string\r\n */\nfunction interpolateNumbers(value, inputRange, outputRange, extrapolateConfig) {\n  const extrapolate = extrapolateConfig === null || extrapolateConfig === void 0 ? void 0 : extrapolateConfig.extrapolate;\n  const extrapolateLeft = extrapolateConfig === null || extrapolateConfig === void 0 ? void 0 : extrapolateConfig.extrapolateLeft;\n  const extrapolateRight = extrapolateConfig === null || extrapolateConfig === void 0 ? void 0 : extrapolateConfig.extrapolateRight;\n  const narrowedInput = _getNarrowedInputArray(value, inputRange, outputRange);\n  let _extrapolateLeft = 'extend';\n  if (extrapolateLeft !== undefined) {\n    _extrapolateLeft = extrapolateLeft;\n  } else if (extrapolate !== undefined) {\n    _extrapolateLeft = extrapolate;\n  }\n  let _extrapolateRight = 'extend';\n  if (extrapolateRight !== undefined) {\n    _extrapolateRight = extrapolateRight;\n  } else if (extrapolate !== undefined) {\n    _extrapolateRight = extrapolate;\n  }\n  if (outputRange.length) {\n    if (typeof outputRange[0] === 'number') {\n      return _internalInterpolate(value, narrowedInput, _extrapolateLeft, _extrapolateRight);\n    } else if (Array.isArray(outputRange[0])) {\n      return _getArrayInterpolate(value, narrowedInput, _extrapolateLeft, _extrapolateRight);\n    } else {\n      const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\n      const processedOutputMin = getProcessedColor(outputMin);\n      const processedOutputMax = getProcessedColor(outputMax);\n      let templateString = _getTemplateString(processedOutputMin);\n      if (stringMatched(processedOutputMin, processedOutputMax)) {\n        const outputMinParsed = _getParsedStringArray(processedOutputMin);\n        const outputMaxParsed = _getParsedStringArray(processedOutputMax);\n        const result = _getArrayInterpolate(value, [inputMin, inputMax, outputMinParsed, outputMaxParsed], _extrapolateLeft, _extrapolateRight);\n        for (const v of result) templateString = templateString.replace('$', v);\n        return templateString;\n      } else {\n        throw new Error(\"Output range doesn't match string format!\");\n      }\n    }\n  } else {\n    throw new Error('Output range cannot be Empty');\n  }\n}\n/**\r\n * interpolateTransitionValue to interpolating TransitionValue type value\r\n * @param value\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n * @returns TransitionValue\r\n */\nconst interpolateTransitionValue = (value, inputRange, outputRange, extrapolateConfig) => {\n  return Object.assign(Object.assign({}, value), {\n    isInterpolation: true,\n    interpolationConfig: {\n      inputRange,\n      outputRange,\n      extrapolateConfig\n    }\n  });\n};\n/**\r\n * interpolate function to interpolate both transition\r\n * as well as numerical value\r\n * @param value\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n */\nconst interpolate = (value, inputRange, outputRange, extrapolateConfig) => {\n  if (isTransitionValue(value)) {\n    return interpolateTransitionValue(value, inputRange, outputRange, extrapolateConfig);\n  } else if (typeof value === 'number') {\n    return interpolateNumbers(value, inputRange, outputRange, extrapolateConfig);\n  } else {\n    throw new Error(`'${typeof value}' cannot be interpolated!`);\n  }\n};\n\n// Combine multiple refs\nfunction combineRefs() {\n  for (var _len = arguments.length, refs = new Array(_len), _key = 0; _key < _len; _key++) {\n    refs[_key] = arguments[_key];\n  }\n  return function applyRef(element) {\n    refs.forEach(ref => {\n      if (!ref) {\n        return;\n      }\n      if (typeof ref === \"function\") {\n        ref(element);\n        return;\n      }\n      if (\"current\" in ref) {\n        // @ts-ignore\n        ref.current = element;\n      }\n    });\n  };\n}\n\n/**\r\n * Higher order component to make any component animatable\r\n * @param WrapperComponent\r\n */\nfunction makeAnimatedComponent(WrapperComponent) {\n  function Wrapper(props, forwardRef) {\n    const ref = React__default[\"default\"].useRef(null);\n    // for transforms, we add all the transform keys in transformPropertiesObjectRef and\n    // use getTransform() function to get transform string.\n    // we make sure that the non-animatable transforms to be present in\n    // transformPropertiesObjectRef , non-animatable transform from first paint\n    // are overridden if it is not added.\n    const transformPropertiesObjectRef = React__default[\"default\"].useRef({});\n    // generates the array of animation object\n    const animations = React__default[\"default\"].useMemo(() => {\n      var _a;\n      const animatableStyles = getAnimatableObject('style', (_a = props.style) !== null && _a !== void 0 ? _a : Object.create({}));\n      const animatableProps = getAnimatableObject('props', props !== null && props !== void 0 ? props : Object.create({}));\n      return [...animatableStyles, ...animatableProps];\n    }, [props]);\n    /**\r\n     * Update non-animated style if style changes...\r\n     * here useLayoutEffect is used so that the changes is reflected\r\n     * as soon as possible\r\n     */\n    React__default[\"default\"].useLayoutEffect(() => {\n      if (!props.style) {\n        return;\n      }\n      const nonAnimatableStyle = getNonAnimatableStyle(props.style, transformPropertiesObjectRef);\n      Object.keys(nonAnimatableStyle).forEach(styleProp => {\n        const value = nonAnimatableStyle[styleProp];\n        if (ref.current) {\n          ref.current.style[styleProp] = getCssValue(styleProp, value);\n        }\n      });\n    }, [props.style]);\n    React__default[\"default\"].useLayoutEffect(() => {\n      animations.forEach(props => {\n        const {\n          _subscribe,\n          _value,\n          _config,\n          _currentValue,\n          propertyType,\n          property,\n          animatable\n        } = props;\n        // store animations here\n        let animation = null;\n        if (!ref.current) {\n          return;\n        }\n        // whether or not the property is one of transform keys\n        const isTransform = styleTrasformKeys.indexOf(property) !== -1;\n        // called every frame to update new transform values\n        // getTransform function returns the valid transform string\n        const getTransformValue = value => {\n          transformPropertiesObjectRef.current[property] = value;\n          return getTransform(transformPropertiesObjectRef.current);\n        };\n        // to apply animation values to a ref node\n        const applyAnimationValues = value => {\n          if (ref.current) {\n            if (propertyType === 'style') {\n              // set animation to style\n              if (isTransform) {\n                ref.current.style.transform = getTransformValue(value);\n              } else {\n                ref.current.style[property] = getCssValue(property, value);\n              }\n            } else if (propertyType === 'props') {\n              // set animation to property\n              ref.current.setAttribute(camelToDash(property), value);\n            }\n          }\n        };\n        const onFrame = value => {\n          _currentValue.current = value;\n          // for interpolation we check isInterpolation boolean\n          // which is injected from interpolate function\n          if (props.isInterpolation) {\n            const {\n              interpolationConfig\n            } = props;\n            const interpolatedValue = interpolateNumbers(value, interpolationConfig.inputRange, interpolationConfig.outputRange, interpolationConfig.extrapolateConfig);\n            // interpolate it first and\n            // apply animation to ref node\n            applyAnimationValues(interpolatedValue);\n          } else {\n            // if it is FluidValue, we dont have to interpolate it\n            // just apply animation value\n            applyAnimationValues(value);\n          }\n        };\n        /**\r\n         * Function to initialize dynamic animations according to config\r\n         * \"spring\" or \"timing\" based animations are\r\n         * determined by the config duration\r\n         */\n        const defineAnimation = (value, config) => {\n          const animationConfig = Object.assign(Object.assign({}, _config), config);\n          let type;\n          /**\r\n           * Here duration key determines the type of animation\r\n           * spring config are overridden by duration\r\n           */\n          if (isDefined(animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.duration) || (animationConfig === null || animationConfig === void 0 ? void 0 : animationConfig.immediate)) {\n            type = 'timing';\n          } else {\n            type = 'spring';\n          }\n          if (type === 'spring') {\n            animation = new SpringAnimation({\n              initialPosition: value,\n              config: animationConfig\n            });\n          } else if (type === 'timing') {\n            animation = new TimingAnimation({\n              initialPosition: value,\n              config: animationConfig\n            });\n          }\n        };\n        const onUpdate = (value, callback) => {\n          const {\n            toValue,\n            config\n          } = value;\n          if (animatable) {\n            const previousAnimation = animation;\n            // animatable\n            if (previousAnimation._toValue !== toValue) {\n              /**\r\n               * stopping animation here would affect in whole\r\n               * animation pattern, requestAnimationFrame instance\r\n               * is created on frequent calls like mousemove\r\n               * it flushes current running requestAnimationFrame\r\n               */\n              animation.stop();\n              // re-define animation here with different configuration\n              // used for dynamic animation\n              defineAnimation(previousAnimation._position, config);\n              // invoke onStart function\n              (config === null || config === void 0 ? void 0 : config.onStart) && config.onStart(previousAnimation._position);\n              // start animations here by start api\n              animation.start({\n                toValue,\n                onFrame,\n                previousAnimation,\n                onEnd: callback\n              });\n            }\n          } else {\n            // non-animatable\n            if (typeof toValue === typeof _value) {\n              if (ref.current) {\n                ref.current.style[property] = getCssValue(property, toValue);\n              }\n            } else {\n              throw new Error('Cannot set different types of animation values');\n            }\n          }\n        };\n        // called initially to paint the frame with initial value '_value'\n        onFrame(_value);\n        if (animatable) {\n          // define type of animation to paint the first frame with initial value '_value'\n          defineAnimation(_value);\n        }\n        _subscribe(onUpdate, property, Date.now());\n      });\n      return () => {};\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n    return React__default[\"default\"].createElement(WrapperComponent, Object.assign(Object.assign({}, getCleanProps(props)), {\n      ref: combineRefs(ref, forwardRef)\n    }));\n  }\n  return React__default[\"default\"].forwardRef(Wrapper);\n}\nconst animated = {};\ntags.forEach(element => {\n  animated[element] = makeAnimatedComponent(element);\n});\nclass TransitionValue {\n  constructor(initialValue, config) {\n    this._subscriptions = new Map();\n    this._subscribe = (onUpdate, property, uuid) => {\n      this._subscriptions.set({\n        uuid,\n        property\n      }, onUpdate);\n      return () => {\n        this._subscriptions.delete({\n          uuid,\n          property\n        });\n      };\n    };\n    this._value = initialValue;\n    this._currentValue = {\n      current: initialValue\n    };\n    this._config = config;\n    this.get = () => this._currentValue.current;\n  }\n  /**\r\n   * Animates from initial value to updated value, determines the transition type `multistage`\r\n   * or `singlestage` according to updatedValue\r\n   */\n  setValue(updatedValue, callback) {\n    /** Multistage transition */\n    if (typeof updatedValue === 'function') {\n      updatedValue(nextValue => {\n        const multiStagePromise = new Promise(resolve => {\n          for (const subscriptionKey of this._subscriptions.keys()) {\n            const updater = this._subscriptions.get(subscriptionKey);\n            if (updater) {\n              updater(nextValue, function (result) {\n                if (result.finished) {\n                  resolve(nextValue);\n                }\n                if (callback) {\n                  callback(result);\n                }\n              });\n            }\n          }\n        });\n        return multiStagePromise;\n      });\n      return;\n    }\n    /** Singlestage transition */\n    for (const subscriptionKey of this._subscriptions.keys()) {\n      const updater = this._subscriptions.get(subscriptionKey);\n      updater && updater(updatedValue, callback);\n    }\n  }\n}\n\n/**\r\n * Transition hook\r\n *\r\n * @param initialValue - initial value\r\n * @param config - the config object for `TransitionValue`\r\n */\nfunction useTransition(initialValue, config) {\n  const isInitial = React__default[\"default\"].useRef(true);\n  const transition = React__default[\"default\"].useRef(new TransitionValue(initialValue, config)).current;\n  /**\r\n   * trigger animation on argument change\r\n   * doesn't fire the setValue method on initial render\r\n   */\n  React__default[\"default\"].useEffect(() => {\n    if (!isInitial.current) {\n      transition.setValue({\n        toValue: initialValue,\n        config\n      });\n    }\n    isInitial.current = false;\n  }, [initialValue]);\n  return [transition, transition.setValue.bind(transition)];\n}\n\n/**\r\n * Mount hook\r\n * applies mounting and unmounting of a component according to state change\r\n * applying transitions\r\n *\r\n * @param state - boolean indicating mount state of a component\r\n * @param config - the config object `UseMountConfig`\r\n */\nfunction useMount(state, config) {\n  const initial = React__default[\"default\"].useRef(true);\n  const [mounted, setMounted] = React__default[\"default\"].useState(state);\n  const {\n    from,\n    enter,\n    exit,\n    config: innerConfig,\n    enterConfig,\n    exitConfig\n  } = React__default[\"default\"].useRef(config).current;\n  const [animation, setAnimation] = useTransition(from, innerConfig);\n  React__default[\"default\"].useEffect(() => {\n    if (state) {\n      initial.current = true;\n      setMounted(true);\n    } else {\n      initial.current = false;\n      setAnimation(typeof exit === 'number' ? {\n        toValue: exit,\n        config: exitConfig\n      } : exit, function (_ref5) {\n        let {\n          finished\n        } = _ref5;\n        if (finished) {\n          setMounted(false);\n        }\n      });\n    }\n  }, [state]);\n  React__default[\"default\"].useEffect(() => {\n    if (mounted && initial.current) {\n      setAnimation(typeof enter === 'number' ? {\n        toValue: enter,\n        config: enterConfig\n      } : enter);\n    }\n  }, [mounted, initial.current]);\n  return function (callback) {\n    return callback(animation, mounted);\n  };\n}\nexports.Easing = Easing;\nexports.TransitionValue = TransitionValue;\nexports.animated = animated;\nexports.interpolate = interpolate;\nexports.interpolateNumbers = interpolateNumbers;\nexports.interpolateTransitionValue = interpolateTransitionValue;\nexports.isTransitionValue = isTransitionValue;\nexports.makeAnimatedComponent = makeAnimatedComponent;\nexports.useMount = useMount;\nexports.useTransition = useTransition;","map":{"version":3,"names":["Animation","_debounceOnEnd","result","onEnd","_onEnd","onRest","_onRest","stop","RequestAnimationFrame","current","cb","global","requestAnimationFrame","inject","injected","CancelAnimationFrame","id","cancelAnimationFrame","SpringAnimation","constructor","_ref","initialPosition","config","_overshootClamping","_initialVelocity","_lastVelocity","_startPosition","_position","_restDisplacementThreshold","_a","restDistance","_restSpeedThreshold","_b","_mass","_c","mass","_tension","_d","tension","_friction","_e","friction","_delay","_f","delay","_onChange","onChange","value","_onFrame","_lastPosition","onUpdate","now","Date","deltaTime","Math","min","_lastTime","c","m","k","v0","x0","_toValue","zeta","sqrt","omega0","omega1","pow","t","sin1","sin","cos1","cos","underDampedEnvelope","exp","underDampedFrag1","underDampedPosition","underDampedVelocity","criticallyDampedEnvelope","criticallyDampedPosition","criticallyDampedVelocity","isOvershooting","isVelocity","abs","isDisplacement","finished","_animationFrame","bind","_active","clearTimeout","_timeout","set","toValue","start","_ref2","onFrame","previousAnimation","onStart","setTimeout","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","Float32Array","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","mX1","mX2","currentX","currentT","i","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","bezier","mY1","mY2","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","BezierEasing","Easing","step0","n","step1","linear","ease","quad","cubic","poly","PI","circle","elastic","bounciness","arguments","length","undefined","p","back","s","bounce","x1","y1","x2","y2","in","easing","out","inOut","TimingAnimation","_ref3","_fromValue","_easing","_duration","duration","_tempDuration","immediate","runTime","_startTime","progress","_ref4","COLOR_NUMBER_REGEX","HEX_NAME_COLOR","colorNames","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","conv3to6","hex","regex","replace","_","r","g","b","conv6to8","hexToRgba","hex6","hex8","hexRgba","exec","parseInt","a","rgbaToHex","rgba","hexR","toString","slice","hexG","hexB","hexA","isTransitionValue","Object","prototype","hasOwnProperty","call","getAnimatableObject","propertyType","propertiesObject","keys","reduce","acc","styleProp","_value","assign","property","animatable","styleTrasformKeys","splitCSSValueAndUnit","valueMatch","match","unitMatch","Number","unit","getValueUnit","splitValue","String","splitUnit","indexOf","getTransformValueWithUnits","valueUnit","getTransform","style","styleKeys","map","transform","trim","getNonAnimatableStyle","transformObjectRef","stylesWithoutTransforms","resultObject","transformStyle","combinedStyle","getCleanProps","props","cleanProps","forEach","prop","tags","unitlessStyleProps","getCssValue","cssValue","isDefined","camelToDash","str","toLowerCase","_internalInterpolate","val","arr","extrapolateLeft","extrapolateRight","inputMin","inputMax","outputMin","outputMax","Infinity","_getNarrowedInputArray","input","output","narrowedInput","_getColorInterpolate","outputMinProcessed","outputMaxProcessed","alpha","_getArrayInterpolate","_extrapolateLeft","_extrapolateRight","index","_getTemplateString","_getParsedStringArray","v","stringMatched","str1","str2","getProcessedColor","interpolateNumbers","inputRange","outputRange","extrapolateConfig","extrapolate","isArray","processedOutputMin","processedOutputMax","templateString","outputMinParsed","outputMaxParsed","interpolateTransitionValue","isInterpolation","interpolationConfig","interpolate","combineRefs","_len","refs","_key","applyRef","element","ref","makeAnimatedComponent","WrapperComponent","Wrapper","forwardRef","React__default","useRef","transformPropertiesObjectRef","animations","useMemo","animatableStyles","create","animatableProps","useLayoutEffect","nonAnimatableStyle","_subscribe","_config","_currentValue","animation","isTransform","getTransformValue","applyAnimationValues","setAttribute","interpolatedValue","defineAnimation","animationConfig","type","callback","createElement","animated","TransitionValue","initialValue","_subscriptions","Map","uuid","delete","get","setValue","updatedValue","nextValue","multiStagePromise","Promise","resolve","subscriptionKey","updater","useTransition","isInitial","transition","useEffect","useMount","state","initial","mounted","setMounted","useState","from","enter","exit","innerConfig","enterConfig","exitConfig","setAnimation","_ref5"],"sources":["/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/animation/Animation.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/animation/RequestAnimationFrame.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/animation/SpringAnimation.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/easing/Bezier.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/easing/Easing.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/animation/TimingAnimation.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/interpolation/Colors.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/isTransitionValue.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/getAnimatableObject.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/TransformStyles.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/getNonAnimatableStyle.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/getCleanProps.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/Tags.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/getCssValue.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/isDefined.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/functions/camelToDash.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/interpolation/Interpolation.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/combineRefs.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/animated.tsx","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/animation/TransitionValue.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/useTransition.ts","/Users/chanchinghei/Library/Mobile Documents/com~apple~CloudDocs/Documents/Work/Fully Remote 🌎/Options/Coding/Projects/shop/client/node_modules/@raidipesh78/re-motion/src/react/useMount.ts"],"sourcesContent":["import { ResultType } from '../types';\r\n\r\n/**\r\n * Base Animation class\r\n */\r\nexport class Animation {\r\n  _active: boolean;\r\n  _onEnd: any;\r\n  /**\r\n   * it is necessary to add _onRest function as well\r\n   * because _onEnd is always re-assigned with onUpdate callback\r\n   * so that _onRest function is not fired, so we have to duplicate it\r\n   */\r\n  _onRest?: any;\r\n\r\n  _debounceOnEnd(result: ResultType) {\r\n    const onEnd = this._onEnd;\r\n    const onRest = this._onRest;\r\n    this._onEnd = null;\r\n    this._onRest = null;\r\n\r\n    onRest && onRest(result);\r\n    onEnd && onEnd(result);\r\n  }\r\n\r\n  stop() {}\r\n}\r\n","export const RequestAnimationFrame = {\r\n  current: (cb: any) => global.requestAnimationFrame(cb),\r\n  inject(injected: any) {\r\n    RequestAnimationFrame.current = injected;\r\n  },\r\n};\r\n\r\nexport const CancelAnimationFrame = {\r\n  current: (id: any) => global.cancelAnimationFrame(id),\r\n  inject(injected: any) {\r\n    CancelAnimationFrame.current = injected;\r\n  },\r\n};\r\n","import { Animation } from './Animation';\r\nimport {\r\n  RequestAnimationFrame,\r\n  CancelAnimationFrame,\r\n} from './RequestAnimationFrame';\r\nimport type { TransitionValueConfig, ResultType } from '../types';\r\n\r\n/**\r\n * Class implementing spring based animation\r\n */\r\nexport class SpringAnimation extends Animation {\r\n  _overshootClamping: boolean;\r\n  _restDisplacementThreshold: number;\r\n  _restSpeedThreshold: number;\r\n  _initialVelocity?: number;\r\n  _lastVelocity: number;\r\n  _startPosition: number;\r\n  _lastPosition: number;\r\n  _position: number;\r\n  _fromValue: number;\r\n  _toValue: any;\r\n  _mass: number;\r\n  _tension: number;\r\n  _friction: number;\r\n  _lastTime: number;\r\n  _onFrame: (value: number) => void;\r\n  _animationFrame: any;\r\n  _timeout: any;\r\n\r\n  // Modifiers\r\n  _delay: number;\r\n  _onRest?: (value: ResultType) => void;\r\n  _onChange?: (value: number) => void;\r\n\r\n  constructor({\r\n    initialPosition,\r\n    config,\r\n  }: {\r\n    initialPosition: number;\r\n    config?: Omit<TransitionValueConfig, 'duration' | 'easing'>;\r\n  }) {\r\n    super();\r\n\r\n    this._overshootClamping = false;\r\n    this._initialVelocity = 0;\r\n    this._lastVelocity = 0;\r\n    this._startPosition = initialPosition;\r\n    this._position = this._startPosition;\r\n\r\n    this._restDisplacementThreshold = config?.restDistance ?? 0.001;\r\n    this._restSpeedThreshold = config?.restDistance ?? 0.001;\r\n    this._mass = config?.mass ?? 1;\r\n    this._tension = config?.tension ?? 170;\r\n    this._friction = config?.friction ?? 26;\r\n    this._delay = config?.delay ?? 0;\r\n\r\n    this._onRest = config?.onRest;\r\n    this._onChange = config?.onChange;\r\n  }\r\n\r\n  onChange(value: number) {\r\n    this._onFrame(value);\r\n\r\n    if (this._lastPosition !== value) {\r\n      if (this._onChange) {\r\n        this._onChange(value);\r\n      }\r\n    }\r\n\r\n    this._lastPosition = value;\r\n  }\r\n\r\n  onUpdate() {\r\n    var now = Date.now();\r\n\r\n    const deltaTime = Math.min(now - this._lastTime, 64);\r\n    this._lastTime = now;\r\n\r\n    const c = this._friction;\r\n    const m = this._mass;\r\n    const k = this._tension;\r\n\r\n    const v0 = -this._lastVelocity;\r\n    const x0 = this._toValue - this._position;\r\n\r\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\r\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\r\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\r\n\r\n    const t = deltaTime / 1000;\r\n\r\n    const sin1 = Math.sin(omega1 * t);\r\n    const cos1 = Math.cos(omega1 * t);\r\n\r\n    // under damped\r\n    const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\r\n    const underDampedFrag1 =\r\n      underDampedEnvelope *\r\n      (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\r\n\r\n    const underDampedPosition = this._toValue - underDampedFrag1;\r\n    // This looks crazy -- it's actually just the derivative of the oscillation function\r\n    const underDampedVelocity =\r\n      zeta * omega0 * underDampedFrag1 -\r\n      underDampedEnvelope *\r\n        (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\r\n\r\n    // critically damped\r\n    const criticallyDampedEnvelope = Math.exp(-omega0 * t);\r\n    const criticallyDampedPosition =\r\n      this._toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\r\n\r\n    const criticallyDampedVelocity =\r\n      criticallyDampedEnvelope *\r\n      (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\r\n\r\n    this.onChange(this._position);\r\n\r\n    const isOvershooting = () => {\r\n      if (this._overshootClamping && this._tension !== 0) {\r\n        return this._position < this._toValue\r\n          ? this._position > this._toValue\r\n          : this._position < this._toValue;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const isVelocity = Math.abs(this._lastVelocity) < this._restSpeedThreshold;\r\n    const isDisplacement =\r\n      this._tension === 0 ||\r\n      Math.abs(this._toValue - this._position) <\r\n        this._restDisplacementThreshold;\r\n\r\n    if (zeta < 1) {\r\n      this._position = underDampedPosition;\r\n      this._lastVelocity = underDampedVelocity;\r\n    } else {\r\n      this._position = criticallyDampedPosition;\r\n      this._lastVelocity = criticallyDampedVelocity;\r\n    }\r\n\r\n    if (isOvershooting() || (isVelocity && isDisplacement)) {\r\n      if (this._tension !== 0) {\r\n        this._lastVelocity = 0;\r\n        this._position = this._toValue;\r\n\r\n        this.onChange(this._position);\r\n      }\r\n      // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\r\n      this._lastTime = 0;\r\n\r\n      this._debounceOnEnd({ finished: true, value: this._toValue });\r\n\r\n      return;\r\n    }\r\n\r\n    this._animationFrame = RequestAnimationFrame.current(\r\n      this.onUpdate.bind(this)\r\n    );\r\n  }\r\n\r\n  stop() {\r\n    this._active = false;\r\n    clearTimeout(this._timeout);\r\n    CancelAnimationFrame.current(this._animationFrame);\r\n    this._debounceOnEnd({ finished: false, value: this._position });\r\n  }\r\n\r\n  // Set value\r\n  set(toValue: number) {\r\n    this.stop();\r\n    this._position = toValue;\r\n    this._lastTime = 0;\r\n    this._lastVelocity = 0;\r\n    this.onChange(toValue);\r\n  }\r\n\r\n  start({\r\n    toValue,\r\n    onFrame,\r\n    previousAnimation,\r\n    onEnd,\r\n  }: {\r\n    toValue: number;\r\n    onFrame: (value: number) => void;\r\n    previousAnimation?: SpringAnimation;\r\n    onEnd?: (result: ResultType) => void;\r\n  }) {\r\n    const onStart: any = () => {\r\n      this._onFrame = onFrame;\r\n      this._active = true;\r\n      this._toValue = toValue;\r\n      this._onEnd = onEnd;\r\n\r\n      const now = Date.now();\r\n\r\n      if (previousAnimation instanceof SpringAnimation) {\r\n        this._lastVelocity =\r\n          previousAnimation._lastVelocity || this._lastVelocity || 0;\r\n        this._lastTime = previousAnimation._lastTime || now;\r\n      } else {\r\n        this._lastTime = now;\r\n      }\r\n\r\n      this._animationFrame = RequestAnimationFrame.current(\r\n        this.onUpdate.bind(this)\r\n      );\r\n    };\r\n\r\n    if (this._delay !== 0) {\r\n      this._timeout = setTimeout(() => onStart(), this._delay);\r\n    } else {\r\n      onStart();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * https://github.com/gre/bezier-easing\r\n * BezierEasing - use bezier curve for transition easing function\r\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n */\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\nvar NEWTON_ITERATIONS = 4;\r\nvar NEWTON_MIN_SLOPE = 0.001;\r\nvar SUBDIVISION_PRECISION = 0.0000001;\r\nvar SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\nvar kSplineTableSize = 11;\r\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\nvar float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\nfunction A(aA1: number, aA2: number) {\r\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\r\n}\r\nfunction B(aA1: number, aA2: number) {\r\n  return 3.0 * aA2 - 6.0 * aA1;\r\n}\r\nfunction C(aA1: number) {\r\n  return 3.0 * aA1;\r\n}\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nfunction calcBezier(aT: number, aA1: number, aA2: number) {\r\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n}\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\nfunction getSlope(aT: number, aA1: number, aA2: number) {\r\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n}\r\n\r\nfunction binarySubdivide(\r\n  aX: number,\r\n  aA: number,\r\n  aB: number,\r\n  mX1: number,\r\n  mX2: number\r\n) {\r\n  var currentX,\r\n    currentT,\r\n    i = 0;\r\n  do {\r\n    currentT = aA + (aB - aA) / 2.0;\r\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n    if (currentX > 0.0) {\r\n      aB = currentT;\r\n    } else {\r\n      aA = currentT;\r\n    }\r\n  } while (\r\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\r\n    ++i < SUBDIVISION_MAX_ITERATIONS\r\n  );\r\n  return currentT;\r\n}\r\n\r\nfunction newtonRaphsonIterate(\r\n  aX: number,\r\n  aGuessT: number,\r\n  mX1: number,\r\n  mX2: number\r\n) {\r\n  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n    if (currentSlope === 0.0) {\r\n      return aGuessT;\r\n    }\r\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n    aGuessT -= currentX / currentSlope;\r\n  }\r\n  return aGuessT;\r\n}\r\n\r\nfunction LinearEasing(x: number) {\r\n  return x;\r\n}\r\n\r\nfunction bezier(mX1: number, mY1: number, mX2: number, mY2: number) {\r\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\r\n    throw new Error(\"bezier x values must be in [0, 1] range\");\r\n  }\r\n\r\n  if (mX1 === mY1 && mX2 === mY2) {\r\n    return LinearEasing;\r\n  }\r\n\r\n  // Precompute samples table\r\n  var sampleValues = float32ArraySupported\r\n    ? new Float32Array(kSplineTableSize)\r\n    : new Array(kSplineTableSize);\r\n  for (var i = 0; i < kSplineTableSize; ++i) {\r\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n  }\r\n\r\n  function getTForX(aX: number) {\r\n    var intervalStart = 0.0;\r\n    var currentSample = 1;\r\n    var lastSample = kSplineTableSize - 1;\r\n\r\n    for (\r\n      ;\r\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\r\n      ++currentSample\r\n    ) {\r\n      intervalStart += kSampleStepSize;\r\n    }\r\n    --currentSample;\r\n\r\n    // Interpolate to provide an initial guess for t\r\n    var dist =\r\n      (aX - sampleValues[currentSample]) /\r\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\r\n    var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n    var initialSlope = getSlope(guessForT, mX1, mX2);\r\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n    } else if (initialSlope === 0.0) {\r\n      return guessForT;\r\n    } else {\r\n      return binarySubdivide(\r\n        aX,\r\n        intervalStart,\r\n        intervalStart + kSampleStepSize,\r\n        mX1,\r\n        mX2\r\n      );\r\n    }\r\n  }\r\n\r\n  return function BezierEasing(x: number) {\r\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n    if (x === 0 || x === 1) {\r\n      return x;\r\n    }\r\n    return calcBezier(getTForX(x), mY1, mY2);\r\n  };\r\n}\r\n\r\nexport { bezier };\r\n","/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nimport { bezier as _bezier } from \"./Bezier\";\r\n\r\n/**\r\n * This class implements common easing functions. The math is pretty obscure,\r\n * but this cool website has nice visual illustrations of what they represent:\r\n * http://xaedes.de/dev/transitions/\r\n */\r\nexport class Easing {\r\n  static step0(n: number) {\r\n    return n > 0 ? 1 : 0;\r\n  }\r\n\r\n  static step1(n: number) {\r\n    return n >= 1 ? 1 : 0;\r\n  }\r\n\r\n  static linear(t: number) {\r\n    return t;\r\n  }\r\n\r\n  static ease(t: number): number {\r\n    return ease(t);\r\n  }\r\n\r\n  static quad(t: number) {\r\n    return t * t;\r\n  }\r\n\r\n  static cubic(t: number) {\r\n    return t * t * t;\r\n  }\r\n\r\n  static poly(n: number) {\r\n    return (t: number) => Math.pow(t, n);\r\n  }\r\n\r\n  static sin(t: number) {\r\n    return 1 - Math.cos((t * Math.PI) / 2);\r\n  }\r\n\r\n  static circle(t: number) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n  }\r\n\r\n  static exp(t: number) {\r\n    return Math.pow(2, 10 * (t - 1));\r\n  }\r\n\r\n  /**\r\n   * A simple elastic interaction, similar to a spring.  Default bounciness\r\n   * is 1, which overshoots a little bit once.  0 bounciness doesn't overshoot\r\n   * at all, and bounciness of N > 1 will overshoot about N times.\r\n   *\r\n   * Wolfram Plots:\r\n   *\r\n   *   http://tiny.cc/elastic_b_1 (default bounciness = 1)\r\n   *   http://tiny.cc/elastic_b_3 (bounciness = 3)\r\n   */\r\n  static elastic(bounciness: number = 1): (t: number) => number {\r\n    var p = bounciness * Math.PI;\r\n    return (t) =>\r\n      1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\r\n  }\r\n\r\n  static back(s: number): (t: number) => number {\r\n    if (s === undefined) {\r\n      s = 1.70158;\r\n    }\r\n    return (t) => t * t * ((s + 1) * t - s);\r\n  }\r\n\r\n  static bounce(t: number): number {\r\n    if (t < 1 / 2.75) {\r\n      return 7.5625 * t * t;\r\n    }\r\n\r\n    if (t < 2 / 2.75) {\r\n      t -= 1.5 / 2.75;\r\n      return 7.5625 * t * t + 0.75;\r\n    }\r\n\r\n    if (t < 2.5 / 2.75) {\r\n      t -= 2.25 / 2.75;\r\n      return 7.5625 * t * t + 0.9375;\r\n    }\r\n\r\n    t -= 2.625 / 2.75;\r\n    return 7.5625 * t * t + 0.984375;\r\n  }\r\n\r\n  static bezier(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number\r\n  ): (t: number) => number {\r\n    return _bezier(x1, y1, x2, y2);\r\n  }\r\n\r\n  static in(easing: (t: number) => number): (t: number) => number {\r\n    return easing;\r\n  }\r\n\r\n  /**\r\n   * Runs an easing function backwards.\r\n   */\r\n  static out(easing: (t: number) => number): (t: number) => number {\r\n    return (t) => 1 - easing(1 - t);\r\n  }\r\n\r\n  /**\r\n   * Makes any easing function symmetrical.\r\n   */\r\n  static inOut(easing: (t: number) => number): (t: number) => number {\r\n    return (t) => {\r\n      if (t < 0.5) {\r\n        return easing(t * 2) / 2;\r\n      }\r\n      return 1 - easing((1 - t) * 2) / 2;\r\n    };\r\n  }\r\n}\r\n\r\nvar ease = Easing.bezier(0.42, 0, 1, 1);\r\n","import { Animation } from './Animation';\r\nimport {\r\n  RequestAnimationFrame,\r\n  CancelAnimationFrame,\r\n} from './RequestAnimationFrame';\r\nimport { Easing } from '../easing/Easing';\r\nimport type { TransitionValueConfig, ResultType } from '../types';\r\n\r\n/**\r\n * Class implementing timing based animation\r\n */\r\nexport class TimingAnimation extends Animation {\r\n  _startTime: number;\r\n  _fromValue: number;\r\n  _toValue: any;\r\n  _duration: number;\r\n  _easing: (value: number) => number;\r\n  _onFrame: (value: number) => void;\r\n  _animationFrame: any;\r\n  _timeout: any;\r\n  _lastPosition: number;\r\n  _position: number;\r\n\r\n  // Modifiers\r\n  _delay: number;\r\n  _tempDuration: number;\r\n  _onRest?: (value: ResultType) => void;\r\n  _onChange?: (value: number) => void;\r\n\r\n  constructor({\r\n    initialPosition,\r\n    config,\r\n  }: {\r\n    initialPosition: number;\r\n    config?: Omit<TransitionValueConfig, 'mass' | 'friction' | 'tension'>;\r\n  }) {\r\n    super();\r\n\r\n    this._fromValue = initialPosition;\r\n    this._position = this._fromValue;\r\n    this._easing = config?.easing ?? Easing.linear;\r\n    this._duration = config?.duration ?? 500;\r\n    this._tempDuration = this._duration;\r\n\r\n    // Modifiers\r\n    // here immediate acts like duration: 0\r\n    if (config?.immediate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._delay = config?.delay ?? 0;\r\n    this._onRest = config?.onRest;\r\n    this._onChange = config?.onChange;\r\n  }\r\n\r\n  onChange(value: number) {\r\n    this._onFrame(value);\r\n\r\n    if (this._lastPosition !== value) {\r\n      if (this._onChange) {\r\n        this._onChange(value);\r\n      }\r\n    }\r\n\r\n    this._lastPosition = value;\r\n  }\r\n\r\n  onUpdate() {\r\n    const now = Date.now();\r\n\r\n    const runTime = now - this._startTime;\r\n\r\n    if (runTime >= this._duration) {\r\n      this._startTime = 0;\r\n      this._position = this._toValue;\r\n\r\n      this.onChange(this._position);\r\n\r\n      this._debounceOnEnd({ finished: true, value: this._position });\r\n      return;\r\n    }\r\n\r\n    const progress = this._easing(runTime / this._duration);\r\n\r\n    this._position =\r\n      this._fromValue + (this._toValue - this._fromValue) * progress;\r\n\r\n    this.onChange(this._position);\r\n\r\n    this._animationFrame = RequestAnimationFrame.current(\r\n      this.onUpdate.bind(this)\r\n    );\r\n  }\r\n\r\n  stop() {\r\n    this._active = false;\r\n    clearTimeout(this._timeout);\r\n    CancelAnimationFrame.current(this._animationFrame);\r\n    this._debounceOnEnd({ finished: false, value: this._position });\r\n  }\r\n\r\n  // Set value\r\n  set(toValue: number) {\r\n    this.stop();\r\n    this._position = toValue;\r\n    this.onChange(toValue);\r\n  }\r\n\r\n  start({\r\n    toValue,\r\n    onFrame,\r\n    previousAnimation,\r\n    onEnd,\r\n  }: {\r\n    toValue: number;\r\n    onFrame: (value: number) => void;\r\n    previousAnimation?: TimingAnimation;\r\n    onEnd?: (result: ResultType) => void;\r\n  }) {\r\n    const onStart: any = () => {\r\n      this._onFrame = onFrame;\r\n      this._active = true;\r\n      this._onEnd = onEnd;\r\n      this._toValue = toValue;\r\n\r\n      if (\r\n        previousAnimation &&\r\n        previousAnimation instanceof TimingAnimation &&\r\n        previousAnimation._toValue === toValue &&\r\n        previousAnimation._startTime\r\n      ) {\r\n        this._startTime = previousAnimation._startTime;\r\n        this._fromValue = previousAnimation._fromValue;\r\n      } else {\r\n        const now = Date.now();\r\n        this._startTime = now;\r\n        this._fromValue = this._position;\r\n      }\r\n\r\n      this._animationFrame = RequestAnimationFrame.current(\r\n        this.onUpdate.bind(this)\r\n      );\r\n    };\r\n\r\n    if (this._delay !== 0) {\r\n      this._timeout = setTimeout(() => onStart(), this._delay);\r\n    } else {\r\n      onStart();\r\n    }\r\n  }\r\n}\r\n","export const COLOR_NUMBER_REGEX =\r\n  /[+-]?\\d+(\\.\\d+)?|[\\s]?\\.\\d+|#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})/gi;\r\nexport const HEX_NAME_COLOR =\r\n  /#[a-f\\d]{3,}|transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|burntsienna|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen/gi;\r\n\r\ninterface classNameType {\r\n  [name: string]: string;\r\n}\r\n\r\n// Named colors\r\nexport const colorNames: classNameType = {\r\n  transparent: \"#00000000\",\r\n  aliceblue: \"#f0f8ffff\",\r\n  antiquewhite: \"#faebd7ff\",\r\n  aqua: \"#00ffffff\",\r\n  aquamarine: \"#7fffd4ff\",\r\n  azure: \"#f0ffffff\",\r\n  beige: \"#f5f5dcff\",\r\n  bisque: \"#ffe4c4ff\",\r\n  black: \"#000000ff\",\r\n  blanchedalmond: \"#ffebcdff\",\r\n  blue: \"#0000ffff\",\r\n  blueviolet: \"#8a2be2ff\",\r\n  brown: \"#a52a2aff\",\r\n  burlywood: \"#deb887ff\",\r\n  burntsienna: \"#ea7e5dff\",\r\n  cadetblue: \"#5f9ea0ff\",\r\n  chartreuse: \"#7fff00ff\",\r\n  chocolate: \"#d2691eff\",\r\n  coral: \"#ff7f50ff\",\r\n  cornflowerblue: \"#6495edff\",\r\n  cornsilk: \"#fff8dcff\",\r\n  crimson: \"#dc143cff\",\r\n  cyan: \"#00ffffff\",\r\n  darkblue: \"#00008bff\",\r\n  darkcyan: \"#008b8bff\",\r\n  darkgoldenrod: \"#b8860bff\",\r\n  darkgray: \"#a9a9a9ff\",\r\n  darkgreen: \"#006400ff\",\r\n  darkgrey: \"#a9a9a9ff\",\r\n  darkkhaki: \"#bdb76bff\",\r\n  darkmagenta: \"#8b008bff\",\r\n  darkolivegreen: \"#556b2fff\",\r\n  darkorange: \"#ff8c00ff\",\r\n  darkorchid: \"#9932ccff\",\r\n  darkred: \"#8b0000ff\",\r\n  darksalmon: \"#e9967aff\",\r\n  darkseagreen: \"#8fbc8fff\",\r\n  darkslateblue: \"#483d8bff\",\r\n  darkslategray: \"#2f4f4fff\",\r\n  darkslategrey: \"#2f4f4fff\",\r\n  darkturquoise: \"#00ced1ff\",\r\n  darkviolet: \"#9400d3ff\",\r\n  deeppink: \"#ff1493ff\",\r\n  deepskyblue: \"#00bfffff\",\r\n  dimgray: \"#696969ff\",\r\n  dimgrey: \"#696969ff\",\r\n  dodgerblue: \"#1e90ffff\",\r\n  firebrick: \"#b22222ff\",\r\n  floralwhite: \"#fffaf0ff\",\r\n  forestgreen: \"#228b22ff\",\r\n  fuchsia: \"#ff00ffff\",\r\n  gainsboro: \"#dcdcdcff\",\r\n  ghostwhite: \"#f8f8ffff\",\r\n  gold: \"#ffd700ff\",\r\n  goldenrod: \"#daa520ff\",\r\n  gray: \"#808080ff\",\r\n  green: \"#008000ff\",\r\n  greenyellow: \"#adff2fff\",\r\n  grey: \"#808080ff\",\r\n  honeydew: \"#f0fff0ff\",\r\n  hotpink: \"#ff69b4ff\",\r\n  indianred: \"#cd5c5cff\",\r\n  indigo: \"#4b0082ff\",\r\n  ivory: \"#fffff0ff\",\r\n  khaki: \"#f0e68cff\",\r\n  lavender: \"#e6e6faff\",\r\n  lavenderblush: \"#fff0f5ff\",\r\n  lawngreen: \"#7cfc00ff\",\r\n  lemonchiffon: \"#fffacdff\",\r\n  lightblue: \"#add8e6ff\",\r\n  lightcoral: \"#f08080ff\",\r\n  lightcyan: \"#e0ffffff\",\r\n  lightgoldenrodyellow: \"#fafad2ff\",\r\n  lightgray: \"#d3d3d3ff\",\r\n  lightgreen: \"#90ee90ff\",\r\n  lightgrey: \"#d3d3d3ff\",\r\n  lightpink: \"#ffb6c1ff\",\r\n  lightsalmon: \"#ffa07aff\",\r\n  lightseagreen: \"#20b2aaff\",\r\n  lightskyblue: \"#87cefaff\",\r\n  lightslategray: \"#778899ff\",\r\n  lightslategrey: \"#778899ff\",\r\n  lightsteelblue: \"#b0c4deff\",\r\n  lightyellow: \"#ffffe0ff\",\r\n  lime: \"#00ff00ff\",\r\n  limegreen: \"#32cd32ff\",\r\n  linen: \"#faf0e6ff\",\r\n  magenta: \"#ff00ffff\",\r\n  maroon: \"#800000ff\",\r\n  mediumaquamarine: \"#66cdaaff\",\r\n  mediumblue: \"#0000cdff\",\r\n  mediumorchid: \"#ba55d3ff\",\r\n  mediumpurple: \"#9370dbff\",\r\n  mediumseagreen: \"#3cb371ff\",\r\n  mediumslateblue: \"#7b68eeff\",\r\n  mediumspringgreen: \"#00fa9aff\",\r\n  mediumturquoise: \"#48d1ccff\",\r\n  mediumvioletred: \"#c71585ff\",\r\n  midnightblue: \"#191970ff\",\r\n  mintcream: \"#f5fffaff\",\r\n  mistyrose: \"#ffe4e1ff\",\r\n  moccasin: \"#ffe4b5ff\",\r\n  navajowhite: \"#ffdeadff\",\r\n  navy: \"#000080ff\",\r\n  oldlace: \"#fdf5e6ff\",\r\n  olive: \"#808000ff\",\r\n  olivedrab: \"#6b8e23ff\",\r\n  orange: \"#ffa500ff\",\r\n  orangered: \"#ff4500ff\",\r\n  orchid: \"#da70d6ff\",\r\n  palegoldenrod: \"#eee8aaff\",\r\n  palegreen: \"#98fb98ff\",\r\n  paleturquoise: \"#afeeeeff\",\r\n  palevioletred: \"#db7093ff\",\r\n  papayawhip: \"#ffefd5ff\",\r\n  peachpuff: \"#ffdab9ff\",\r\n  peru: \"#cd853fff\",\r\n  pink: \"#ffc0cbff\",\r\n  plum: \"#dda0ddff\",\r\n  powderblue: \"#b0e0e6ff\",\r\n  purple: \"#800080ff\",\r\n  rebeccapurple: \"#663399ff\",\r\n  red: \"#ff0000ff\",\r\n  rosybrown: \"#bc8f8fff\",\r\n  royalblue: \"#4169e1ff\",\r\n  saddlebrown: \"#8b4513ff\",\r\n  salmon: \"#fa8072ff\",\r\n  sandybrown: \"#f4a460ff\",\r\n  seagreen: \"#2e8b57ff\",\r\n  seashell: \"#fff5eeff\",\r\n  sienna: \"#a0522dff\",\r\n  silver: \"#c0c0c0ff\",\r\n  skyblue: \"#87ceebff\",\r\n  slateblue: \"#6a5acdff\",\r\n  slategray: \"#708090ff\",\r\n  slategrey: \"#708090ff\",\r\n  snow: \"#fffafaff\",\r\n  springgreen: \"#00ff7fff\",\r\n  steelblue: \"#4682b4ff\",\r\n  tan: \"#d2b48cff\",\r\n  teal: \"#008080ff\",\r\n  thistle: \"#d8bfd8ff\",\r\n  tomato: \"#ff6347ff\",\r\n  turquoise: \"#40e0d0ff\",\r\n  violet: \"#ee82eeff\",\r\n  wheat: \"#f5deb3ff\",\r\n  white: \"#ffffffff\",\r\n  whitesmoke: \"#f5f5f5ff\",\r\n  yellow: \"#ffff00ff\",\r\n  yellowgreen: \"#9acd32ff\",\r\n};\r\n\r\nfunction conv3to6(hex: string) {\r\n  const regex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\r\n  return hex.replace(regex, function (_, r, g, b) {\r\n    return \"#\" + r + r + g + g + b + b;\r\n  });\r\n}\r\n\r\nfunction conv6to8(hex: string) {\r\n  if (hex.length === 7) {\r\n    return hex + \"FF\";\r\n  }\r\n\r\n  return hex;\r\n}\r\n\r\nexport function hexToRgba(hex: string) {\r\n  const hex6: string = conv3to6(hex);\r\n  const hex8: string = conv6to8(hex6);\r\n  const hexRgba: any =\r\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex8);\r\n\r\n  return {\r\n    r: parseInt(hexRgba[1], 16),\r\n    g: parseInt(hexRgba[2], 16),\r\n    b: parseInt(hexRgba[3], 16),\r\n    a: parseInt(hexRgba[4], 16) / 255,\r\n  };\r\n}\r\n\r\nexport function rgbaToHex(rgba: {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a: number;\r\n}) {\r\n  const { r, g, b, a } = rgba;\r\n\r\n  const hexR = (r | (1 << 8)).toString(16).slice(1);\r\n  const hexG = (g | (1 << 8)).toString(16).slice(1);\r\n  const hexB = (b | (1 << 8)).toString(16).slice(1);\r\n  const hexA = ((a * 255) | (1 << 8)).toString(16).slice(1);\r\n\r\n  return \"#\" + hexR + hexG + hexB + hexA;\r\n}\r\n\r\nexport function processColor(color: number | string) {\r\n  if (typeof color === \"number\") {\r\n    const alpha = ((color >> 24) & 255) / 255;\r\n    const red = (color >> 16) & 255;\r\n    const green = (color >> 8) & 255;\r\n    const blue = color & 255;\r\n\r\n    return { r: red, g: green, b: blue, a: alpha };\r\n  } else {\r\n    // If string then check whether it has # in 0 index\r\n    if (color[0] === \"#\") {\r\n      return hexToRgba(color);\r\n    } else {\r\n      // It is string color\r\n      const hexColorName: string = colorNames[color];\r\n      if (hexColorName) {\r\n        return hexToRgba(hexColorName);\r\n      } else {\r\n        throw new Error(\"String cannot be parsed!\");\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * isTransitionValue to check the value is TransitionValue or not\r\n * @param value - any\r\n * @returns - boolean\r\n */\r\nexport const isTransitionValue = (value: any) => {\r\n  return (\r\n    typeof value === 'object' &&\r\n    Object.prototype.hasOwnProperty.call(value, '_subscribe')\r\n  );\r\n};\r\n","import { isTransitionValue } from './isTransitionValue';\r\nimport type { ExtrapolateConfig } from '../../interpolation/Interpolation';\r\nimport type { FluidValue } from '../../types';\r\n\r\ntype PropertyType = 'style' | 'props';\r\n\r\nexport type AnimationObject = {\r\n  propertyType: PropertyType;\r\n  property: string;\r\n  animatable: boolean;\r\n\r\n  // from interpolateTransitionValue\r\n  isInterpolation: boolean;\r\n  interpolationConfig: {\r\n    inputRange: Array<number>;\r\n    outputRange: Array<number | string>;\r\n    extrapolateConfig?: ExtrapolateConfig;\r\n  };\r\n} & FluidValue;\r\n\r\n/**\r\n * Function to get the array of animatable objects\r\n * @param propertyType - which property type \"props\" or \"style\"\r\n */\r\nexport function getAnimatableObject(\r\n  propertyType: PropertyType,\r\n  propertiesObject: object\r\n) {\r\n  return Object.keys(propertiesObject).reduce(function (acc, styleProp) {\r\n    const value = propertiesObject[styleProp] as FluidValue;\r\n\r\n    if (isTransitionValue(value)) {\r\n      const { _value } = value;\r\n\r\n      return [\r\n        ...acc,\r\n        {\r\n          propertyType,\r\n          property: styleProp,\r\n          animatable: !(typeof _value === 'string'), // strings are non animatable\r\n          ...value,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return acc;\r\n  }, []) as Array<AnimationObject>;\r\n}\r\n","/**\r\n * style keys which can be accepted by animated component\r\n */\r\nexport const styleTrasformKeys = [\r\n  'perspective',\r\n  'translate',\r\n  'translateX',\r\n  'translateY',\r\n  'translateZ',\r\n  'scale',\r\n  'scaleX',\r\n  'scaleY',\r\n  'scaleZ',\r\n  'rotate',\r\n  'rotateX',\r\n  'rotateY',\r\n  'rotateZ',\r\n  'skew',\r\n  'skewX',\r\n  'skewY',\r\n] as const;\r\n\r\nfunction splitCSSValueAndUnit(value: string) {\r\n  const valueMatch = value.match(/(-)?(\\d+.)?\\d+/g);\r\n  const unitMatch = value.match(\r\n    /px|rem|em|ex|%|cm|mm|in|pt|pc|ch|vh|vw|vmin|vmax/\r\n  );\r\n\r\n  return {\r\n    value: Number(valueMatch),\r\n    unit: unitMatch && unitMatch[0],\r\n  };\r\n}\r\n\r\n// get unit of transform style property\r\nfunction getValueUnit(property: string, value: string) {\r\n  let unit;\r\n\r\n  const splitValue = splitCSSValueAndUnit(String(value)).value;\r\n  const splitUnit = splitCSSValueAndUnit(String(value)).unit;\r\n\r\n  // if string value is passed with unit then split it\r\n  if (splitUnit) {\r\n    return { value: splitValue, unit: splitUnit };\r\n  }\r\n\r\n  if (\r\n    property.indexOf('translate') !== -1 ||\r\n    property.indexOf('perspective') !== -1\r\n  ) {\r\n    unit = 'px';\r\n  } else if (property.indexOf('scale') !== -1) {\r\n    unit = '';\r\n  } else if (\r\n    property.indexOf('rotate') !== -1 ||\r\n    property.indexOf('skew') !== -1\r\n  ) {\r\n    unit = 'deg';\r\n  }\r\n\r\n  return { value, unit };\r\n}\r\n\r\nfunction getTransformValueWithUnits(property: string, value: string) {\r\n  const valueUnit = getValueUnit(property, value);\r\n\r\n  if (\r\n    property.indexOf('X') !== -1 ||\r\n    property.indexOf('Y') !== -1 ||\r\n    property.indexOf('Z') !== -1 ||\r\n    property.indexOf('perspective') !== -1 ||\r\n    property.indexOf('rotate') !== -1 ||\r\n    property.indexOf('skew') !== -1\r\n  ) {\r\n    // axis value\r\n    return `${property}(${valueUnit.value}${valueUnit.unit})`;\r\n  } else if (\r\n    property.indexOf('translate') !== -1 ||\r\n    property.indexOf('scale') !== -1\r\n  ) {\r\n    // two parameter value\r\n    return `${property}(${valueUnit.value}${valueUnit.unit}, ${valueUnit.value}${valueUnit.unit})`;\r\n  } else {\r\n    throw new Error(`Error! Property '${property}' cannot be transformed`);\r\n  }\r\n}\r\n\r\n/**\r\n * getTransform function returns transform string from style object\r\n */\r\nexport function getTransform(style: any) {\r\n  const styleKeys: any = Object.keys(style);\r\n\r\n  return styleKeys\r\n    .map(function (styleProp: string) {\r\n      const value = style[styleProp];\r\n\r\n      return getTransformValueWithUnits(styleProp, value);\r\n    })\r\n    .reduce(function (transform: string, value: number) {\r\n      return (transform += ` ${value}`);\r\n    }, '')\r\n    .trim();\r\n}\r\n","import { styleTrasformKeys, getTransform } from '../TransformStyles';\r\nimport { isTransitionValue } from './isTransitionValue';\r\n\r\n/**\r\n * getNonAnimatableStyle function returns the non-animatable style object\r\n * @param style - CSSProperties\r\n * @returns - non-animatable CSSProperties\r\n */\r\nexport function getNonAnimatableStyle(\r\n  style: React.CSSProperties,\r\n  transformObjectRef: React.MutableRefObject<any>\r\n) {\r\n  const stylesWithoutTransforms = Object.keys(style).reduce(\r\n    (resultObject, styleProp) => {\r\n      const value = style[styleProp as keyof React.CSSProperties];\r\n\r\n      // skips all the subscribers here\r\n      // only get non-animatable styles\r\n      if (isTransitionValue(value)) {\r\n        return resultObject;\r\n      } else if (styleTrasformKeys.indexOf(styleProp as any) !== -1) {\r\n        // if not subscriber, then check styleTransformKeys\r\n        // add it to transformPropertiesObjectRef\r\n        transformObjectRef.current[styleProp] = value;\r\n        return resultObject;\r\n      }\r\n\r\n      return { ...resultObject, [styleProp]: value };\r\n    },\r\n    {}\r\n  );\r\n\r\n  const transformStyle: any = {};\r\n  if (Object.keys(transformObjectRef.current).length > 0) {\r\n    transformStyle.transform = getTransform(transformObjectRef.current);\r\n  }\r\n\r\n  // combined transform and non-transform styles\r\n  const combinedStyle = {\r\n    ...transformStyle,\r\n    ...stylesWithoutTransforms,\r\n  };\r\n\r\n  return combinedStyle;\r\n}\r\n","import { isTransitionValue } from './isTransitionValue';\r\n\r\n/**\r\n * Function to get clean props object without any subscribers\r\n */\r\nexport const getCleanProps = (props: any) => {\r\n  const cleanProps = { ...props };\r\n  if (cleanProps.style) {\r\n    delete cleanProps.style;\r\n  }\r\n\r\n  Object.keys(cleanProps).forEach((prop: string) => {\r\n    if (isTransitionValue(cleanProps[prop])) {\r\n      delete cleanProps[prop];\r\n    }\r\n  });\r\n\r\n  return cleanProps;\r\n};\r\n","export const tags = [\r\n  'a',\r\n  'abbr',\r\n  'acronym',\r\n  'address',\r\n  'applet',\r\n  'area',\r\n  'article',\r\n  'aside',\r\n  'audio',\r\n  'b',\r\n  'base',\r\n  'basefont',\r\n  'bdi',\r\n  'bdo',\r\n  'bgsound',\r\n  'big',\r\n  'blink',\r\n  'blockquote',\r\n  'body',\r\n  'br',\r\n  'button',\r\n  'canvas',\r\n  'caption',\r\n  'center',\r\n  'circle',\r\n  'cite',\r\n  'clipPath',\r\n  'code',\r\n  'col',\r\n  'colgroup',\r\n  'command',\r\n  'content',\r\n  'data',\r\n  'datalist',\r\n  'dd',\r\n  'defs',\r\n  'del',\r\n  'details',\r\n  'dfn',\r\n  'dialog',\r\n  'dir',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'element',\r\n  'ellipse',\r\n  'em',\r\n  'embed',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'font',\r\n  'footer',\r\n  'foreignObject',\r\n  'form',\r\n  'frame',\r\n  'frameset',\r\n  'g',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'head',\r\n  'header',\r\n  'hgroup',\r\n  'hr',\r\n  'html',\r\n  'i',\r\n  'iframe',\r\n  'image',\r\n  'img',\r\n  'input',\r\n  'ins',\r\n  'isindex',\r\n  'kbd',\r\n  'keygen',\r\n  'label',\r\n  'legend',\r\n  'li',\r\n  'line',\r\n  'linearGradient',\r\n  'link',\r\n  'listing',\r\n  'main',\r\n  'map',\r\n  'mark',\r\n  'marquee',\r\n  'mask',\r\n  'math',\r\n  'menu',\r\n  'menuitem',\r\n  'meta',\r\n  'meter',\r\n  'multicol',\r\n  'nav',\r\n  'nextid',\r\n  'nobr',\r\n  'noembed',\r\n  'noframes',\r\n  'noscript',\r\n  'object',\r\n  'ol',\r\n  'optgroup',\r\n  'option',\r\n  'output',\r\n  'p',\r\n  'param',\r\n  'path',\r\n  'pattern',\r\n  'picture',\r\n  'plaintext',\r\n  'polygon',\r\n  'polyline',\r\n  'pre',\r\n  'progress',\r\n  'q',\r\n  'radialGradient',\r\n  'rb',\r\n  'rbc',\r\n  'rect',\r\n  'rp',\r\n  'rt',\r\n  'rtc',\r\n  'ruby',\r\n  's',\r\n  'samp',\r\n  'script',\r\n  'section',\r\n  'select',\r\n  'shadow',\r\n  'slot',\r\n  'small',\r\n  'source',\r\n  'spacer',\r\n  'span',\r\n  'stop',\r\n  'strike',\r\n  'strong',\r\n  'style',\r\n  'sub',\r\n  'summary',\r\n  'sup',\r\n  'svg',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'template',\r\n  'text',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'time',\r\n  'title',\r\n  'tr',\r\n  'track',\r\n  'tspan',\r\n  'tt',\r\n  'u',\r\n  'ul',\r\n  'var',\r\n  'video',\r\n  'wbr',\r\n  'xmp',\r\n] as const;\r\n\r\nexport const unitlessStyleProps = [\r\n  'borderImageOutset',\r\n  'borderImageSlice',\r\n  'borderImageWidth',\r\n  'fontWeight',\r\n  'lineHeight',\r\n  'opacity',\r\n  'orphans',\r\n  'tabSize',\r\n  'widows',\r\n  'zIndex',\r\n  'zoom',\r\n  // SVG-related properties\r\n  'fillOpacity',\r\n  'floodOpacity',\r\n  'stopOpacity',\r\n  'strokeDasharray',\r\n  'strokeDashoffset',\r\n  'strokeMiterlimit',\r\n  'strokeOpacity',\r\n  'strokeWidth',\r\n  // prefixed\r\n  'animationIterationCount',\r\n  'boxFlex',\r\n  'boxFlexGroup',\r\n  'boxOrdinalGroup',\r\n  'columnCount',\r\n  'flex',\r\n  'flexGrow',\r\n  'flexPositive',\r\n  'flexShrink',\r\n  'flexNegative',\r\n  'flexOrder',\r\n  'gridRow',\r\n  'gridColumn',\r\n  'order',\r\n  'lineClamp',\r\n];\r\n","import { unitlessStyleProps } from \"../Tags\";\r\n\r\n/**\r\n * getCssValue() function to get css value with unit or without unit\r\n * it is only for style property - it cannot be used with transform keys\r\n * @param property - style property\r\n * @param value - style value\r\n * @returns - value with unit or without unit\r\n */\r\nexport function getCssValue(property: string, value: number | string) {\r\n  let cssValue;\r\n  if (typeof value === \"number\") {\r\n    if (unitlessStyleProps.indexOf(property) !== -1) {\r\n      cssValue = value;\r\n    } else {\r\n      cssValue = value + \"px\";\r\n    }\r\n  } else {\r\n    cssValue = value;\r\n  }\r\n\r\n  return cssValue;\r\n}\r\n","/**\r\n * isDefined to check the value is defined or not\r\n * @param value - any\r\n * @returns - boolean\r\n */\r\nexport const isDefined = (value: any) => {\r\n  return value !== null && value !== undefined;\r\n};\r\n","/**\r\n * Function to convert camel case to dashed case\r\n * eg: backgroundColor -> background-color\r\n *\r\n * @param str\r\n */\r\nexport function camelToDash(str: string) {\r\n  if (str != str.toLowerCase()) {\r\n    str = str.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\r\n  }\r\n  return str;\r\n}\r\n","import {\r\n  rgbaToHex,\r\n  hexToRgba,\r\n  COLOR_NUMBER_REGEX,\r\n  HEX_NAME_COLOR,\r\n  colorNames,\r\n} from './Colors';\r\nimport { FluidValue } from '../types';\r\nimport { isTransitionValue } from '../react/functions';\r\n\r\ntype ExtrapolateType = 'identity' | 'extend' | 'clamp';\r\n\r\nconst _internalInterpolate = (\r\n  val: number,\r\n  arr: any,\r\n  extrapolateLeft: ExtrapolateType,\r\n  extrapolateRight: ExtrapolateType\r\n) => {\r\n  const [inputMin, inputMax, outputMin, outputMax] = arr;\r\n  let result: number = val;\r\n\r\n  // EXTRAPOLATE\r\n  if (result < inputMin) {\r\n    if (extrapolateLeft === 'identity') {\r\n      return result;\r\n    } else if (extrapolateLeft === 'clamp') {\r\n      result = inputMin;\r\n    } else if (extrapolateLeft === 'extend') {\r\n      // noop\r\n    }\r\n  }\r\n\r\n  if (result > inputMax) {\r\n    if (extrapolateRight === 'identity') {\r\n      return result;\r\n    } else if (extrapolateRight === 'clamp') {\r\n      result = inputMax;\r\n    } else if (extrapolateRight === 'extend') {\r\n      // noop\r\n    }\r\n  }\r\n\r\n  if (outputMin === outputMax) {\r\n    return outputMin;\r\n  }\r\n\r\n  if (inputMin === inputMax) {\r\n    if (val <= inputMin) {\r\n      return outputMin;\r\n    }\r\n    return outputMax;\r\n  }\r\n\r\n  // Input Range\r\n  if (inputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (inputMax === Infinity) {\r\n    result = result - inputMin;\r\n  } else {\r\n    result = (result - inputMin) / (inputMax - inputMin);\r\n  }\r\n\r\n  // Output Range\r\n  if (outputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (outputMax === Infinity) {\r\n    result = result + outputMin;\r\n  } else {\r\n    result = result * (outputMax - outputMin) + outputMin;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst _getNarrowedInputArray = function (\r\n  x: number,\r\n  input: number[],\r\n  output: Array<number | string>\r\n): Array<number | string> {\r\n  const length = input.length;\r\n  let narrowedInput: Array<number | string> = [];\r\n\r\n  // Boundaries\r\n  if (x < input[0]) {\r\n    narrowedInput = [input[0], input[1], output[0], output[1]];\r\n  } else if (x > input[length - 1]) {\r\n    narrowedInput = [\r\n      input[length - 2],\r\n      input[length - 1],\r\n      output[length - 2],\r\n      output[length - 1],\r\n    ];\r\n  }\r\n\r\n  // Narrow the input and output ranges\r\n  for (let i = 1; i < length; ++i) {\r\n    if (x <= input[i]) {\r\n      narrowedInput = [input[i - 1], input[i], output[i - 1], output[i]];\r\n      break;\r\n    }\r\n  }\r\n\r\n  return narrowedInput;\r\n};\r\n\r\nconst _getColorInterpolate = (value: number, narrowedInput: Array<string>) => {\r\n  const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\r\n\r\n  const outputMinProcessed = hexToRgba(outputMin);\r\n  const outputMaxProcessed = hexToRgba(outputMax);\r\n\r\n  const red = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.r, outputMaxProcessed.r],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  const green = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.g, outputMaxProcessed.g],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  const blue = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.b, outputMaxProcessed.b],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  const alpha = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.a, outputMaxProcessed.a],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  return rgbaToHex({ r: red, g: green, b: blue, a: alpha });\r\n};\r\n\r\nconst _getArrayInterpolate = (\r\n  value: number,\r\n  narrowedInput: Array<any>,\r\n  _extrapolateLeft: ExtrapolateType,\r\n  _extrapolateRight: ExtrapolateType\r\n) => {\r\n  const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\r\n\r\n  if (outputMin.length === outputMax.length) {\r\n    return outputMin.map((val: any, index: number) => {\r\n      if (typeof val === 'string') {\r\n        // IF IT IS STRING THEN IT MUST BE HEX COLOR\r\n        return _getColorInterpolate(value, [\r\n          inputMin,\r\n          inputMax,\r\n          val,\r\n          outputMax[index],\r\n        ]);\r\n      } else {\r\n        return _internalInterpolate(\r\n          value,\r\n          [inputMin, inputMax, val, outputMax[index]],\r\n          _extrapolateLeft,\r\n          _extrapolateRight\r\n        );\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error(\"Array length doesn't match\");\r\n  }\r\n};\r\n\r\nconst _getTemplateString = (str: string) => {\r\n  return str.replace(COLOR_NUMBER_REGEX, function (match) {\r\n    if (match.indexOf(' ') === 0) {\r\n      return ' $';\r\n    }\r\n\r\n    return '$';\r\n  });\r\n};\r\n\r\nconst _getParsedStringArray = (str: any) => {\r\n  return str.match(COLOR_NUMBER_REGEX).map((v: string) => {\r\n    if (v.indexOf('#') !== -1) {\r\n      return v;\r\n    } else {\r\n      return Number(v);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Function returns if the template of two strings are matched\r\n * i.e. they can be interpolated\r\n * @param str1 - first string\r\n * @param str2 - second string\r\n * @returns boolean indicating two strings matched or not\r\n */\r\nconst stringMatched = (str1: string, str2: string) => {\r\n  return (\r\n    _getTemplateString(str1).trim().replace(/\\s/g, '').length ===\r\n    _getTemplateString(str2).trim().replace(/\\s/g, '').length\r\n  );\r\n};\r\n\r\n/**\r\n * Function which proccess the\r\n * hexadecimal colors to its proper formats\r\n * @param str - string\r\n * @returns hex color string\r\n */\r\nconst getProcessedColor = (str: any) => {\r\n  return str.replace(HEX_NAME_COLOR, function (match: any) {\r\n    if (match.indexOf('#') !== -1) {\r\n      return rgbaToHex(hexToRgba(match));\r\n    } else if (Object.prototype.hasOwnProperty.call(colorNames, match)) {\r\n      return colorNames[match];\r\n    } else {\r\n      throw new Error('String cannot be parsed!');\r\n    }\r\n  });\r\n};\r\n\r\nexport interface ExtrapolateConfig {\r\n  extrapolate?: ExtrapolateType;\r\n  extrapolateRight?: ExtrapolateType;\r\n  extrapolateLeft?: ExtrapolateType;\r\n}\r\n\r\n/**\r\n * interpolateNumbers to interpolate the numeric value\r\n * @param value - number\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n * @returns - number | string\r\n */\r\nexport function interpolateNumbers(\r\n  value: number,\r\n  inputRange: Array<number>,\r\n  outputRange: Array<number | string>,\r\n  extrapolateConfig?: ExtrapolateConfig\r\n) {\r\n  const extrapolate = extrapolateConfig?.extrapolate;\r\n  const extrapolateLeft = extrapolateConfig?.extrapolateLeft;\r\n  const extrapolateRight = extrapolateConfig?.extrapolateRight;\r\n\r\n  const narrowedInput = _getNarrowedInputArray(value, inputRange, outputRange);\r\n\r\n  let _extrapolateLeft: ExtrapolateType = 'extend';\r\n  if (extrapolateLeft !== undefined) {\r\n    _extrapolateLeft = extrapolateLeft;\r\n  } else if (extrapolate !== undefined) {\r\n    _extrapolateLeft = extrapolate;\r\n  }\r\n\r\n  let _extrapolateRight: ExtrapolateType = 'extend';\r\n  if (extrapolateRight !== undefined) {\r\n    _extrapolateRight = extrapolateRight;\r\n  } else if (extrapolate !== undefined) {\r\n    _extrapolateRight = extrapolate;\r\n  }\r\n\r\n  if (outputRange.length) {\r\n    if (typeof outputRange[0] === 'number') {\r\n      return _internalInterpolate(\r\n        value,\r\n        narrowedInput,\r\n        _extrapolateLeft,\r\n        _extrapolateRight\r\n      );\r\n    } else if (Array.isArray(outputRange[0])) {\r\n      return _getArrayInterpolate(\r\n        value,\r\n        narrowedInput,\r\n        _extrapolateLeft,\r\n        _extrapolateRight\r\n      );\r\n    } else {\r\n      const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\r\n\r\n      const processedOutputMin = getProcessedColor(outputMin);\r\n      const processedOutputMax = getProcessedColor(outputMax);\r\n\r\n      let templateString = _getTemplateString(processedOutputMin);\r\n\r\n      if (stringMatched(processedOutputMin, processedOutputMax)) {\r\n        const outputMinParsed = _getParsedStringArray(processedOutputMin);\r\n        const outputMaxParsed = _getParsedStringArray(processedOutputMax);\r\n\r\n        const result = _getArrayInterpolate(\r\n          value,\r\n          [inputMin, inputMax, outputMinParsed, outputMaxParsed],\r\n          _extrapolateLeft,\r\n          _extrapolateRight\r\n        );\r\n\r\n        for (const v of result) templateString = templateString.replace('$', v);\r\n        return templateString;\r\n      } else {\r\n        throw new Error(\"Output range doesn't match string format!\");\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Output range cannot be Empty');\r\n  }\r\n}\r\n\r\n/**\r\n * interpolateTransitionValue to interpolating TransitionValue type value\r\n * @param value\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n * @returns TransitionValue\r\n */\r\nexport const interpolateTransitionValue = (\r\n  value: FluidValue,\r\n  inputRange: Array<number>,\r\n  outputRange: Array<number | string>,\r\n  extrapolateConfig?: ExtrapolateConfig\r\n) => {\r\n  return {\r\n    ...value,\r\n    isInterpolation: true,\r\n    interpolationConfig: {\r\n      inputRange,\r\n      outputRange,\r\n      extrapolateConfig,\r\n    },\r\n  };\r\n};\r\n\r\n/**\r\n * interpolate function to interpolate both transition\r\n * as well as numerical value\r\n * @param value\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n */\r\nexport const interpolate = (\r\n  value: number | FluidValue,\r\n  inputRange: Array<number>,\r\n  outputRange: Array<number | string>,\r\n  extrapolateConfig?: ExtrapolateConfig\r\n) => {\r\n  if (isTransitionValue(value)) {\r\n    return interpolateTransitionValue(\r\n      value as FluidValue,\r\n      inputRange,\r\n      outputRange,\r\n      extrapolateConfig\r\n    );\r\n  } else if (typeof value === 'number') {\r\n    return interpolateNumbers(\r\n      value,\r\n      inputRange,\r\n      outputRange,\r\n      extrapolateConfig\r\n    );\r\n  } else {\r\n    throw new Error(`'${typeof value}' cannot be interpolated!`);\r\n  }\r\n};\r\n","// Combine multiple refs\r\nexport function combineRefs(\r\n  ...refs: Array<React.RefObject<any> | ((element: HTMLElement) => void)>\r\n) {\r\n  return function applyRef(element: HTMLElement) {\r\n    refs.forEach((ref) => {\r\n      if (!ref) {\r\n        return;\r\n      }\r\n\r\n      if (typeof ref === \"function\") {\r\n        ref(element);\r\n        return;\r\n      }\r\n\r\n      if (\"current\" in ref) {\r\n        // @ts-ignore\r\n        ref.current = element;\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport { SpringAnimation } from '../animation/SpringAnimation';\r\nimport { TimingAnimation } from '../animation/TimingAnimation';\r\nimport { interpolateNumbers } from '../interpolation/Interpolation';\r\nimport { tags } from './Tags';\r\nimport {\r\n  ResultType,\r\n  TransitionValueConfig,\r\n  UpdateValue,\r\n  FluidValue,\r\n} from '../types';\r\nimport { styleTrasformKeys, getTransform } from './TransformStyles';\r\nimport { combineRefs } from './combineRefs';\r\nimport {\r\n  isDefined,\r\n  getCleanProps,\r\n  getAnimatableObject,\r\n  AnimationObject,\r\n  getNonAnimatableStyle,\r\n  getCssValue,\r\n  camelToDash,\r\n} from './functions';\r\n\r\n/**\r\n * Animation Types : For now spring and timing based animations\r\n */\r\ntype AnimationTypes = 'spring' | 'timing';\r\n\r\nexport type AnimatedCSSProperties = {\r\n  [key in keyof React.CSSProperties]: React.CSSProperties[key] | any;\r\n} & {\r\n  [key in typeof styleTrasformKeys[number]]?:\r\n    | number\r\n    | string\r\n    | FluidValue\r\n    | any;\r\n};\r\n\r\nexport type AnimatedHTMLAttributes<T> = {\r\n  [property in keyof React.HTMLAttributes<T>]:\r\n    | React.HTMLAttributes<T>[property]\r\n    | FluidValue\r\n    | any;\r\n};\r\n\r\nexport type AnimatedSVGAttributes<T> = {\r\n  [property in keyof React.SVGAttributes<T>]:\r\n    | React.SVGAttributes<T>[property]\r\n    | FluidValue\r\n    | any;\r\n};\r\n\r\nexport type AnimatedProps<T> = Omit<\r\n  AnimatedHTMLAttributes<T> & AnimatedSVGAttributes<T>,\r\n  'style'\r\n> & {\r\n  style?: AnimatedCSSProperties;\r\n};\r\n\r\ntype WrappedComponentOrTag =\r\n  | React.ComponentType<any>\r\n  | keyof JSX.IntrinsicElements;\r\n\r\n/**\r\n * Higher order component to make any component animatable\r\n * @param WrapperComponent\r\n */\r\nexport function makeAnimatedComponent<C extends WrappedComponentOrTag>(\r\n  WrapperComponent: C\r\n) {\r\n  function Wrapper(props: AnimatedProps<C>, forwardRef: any) {\r\n    const ref = React.useRef<any>(null);\r\n\r\n    // for transforms, we add all the transform keys in transformPropertiesObjectRef and\r\n    // use getTransform() function to get transform string.\r\n    // we make sure that the non-animatable transforms to be present in\r\n    // transformPropertiesObjectRef , non-animatable transform from first paint\r\n    // are overridden if it is not added.\r\n    const transformPropertiesObjectRef = React.useRef<{\r\n      [property: string]: any;\r\n    }>({});\r\n\r\n    // generates the array of animation object\r\n    const animations = React.useMemo<Array<AnimationObject>>(() => {\r\n      const animatableStyles = getAnimatableObject(\r\n        'style',\r\n        props.style ?? Object.create({})\r\n      );\r\n      const animatableProps = getAnimatableObject(\r\n        'props',\r\n        props ?? Object.create({})\r\n      );\r\n\r\n      return [...animatableStyles, ...animatableProps];\r\n    }, [props]);\r\n\r\n    /**\r\n     * Update non-animated style if style changes...\r\n     * here useLayoutEffect is used so that the changes is reflected\r\n     * as soon as possible\r\n     */\r\n    React.useLayoutEffect(() => {\r\n      if (!props.style) {\r\n        return;\r\n      }\r\n\r\n      const nonAnimatableStyle = getNonAnimatableStyle(\r\n        props.style as React.CSSProperties,\r\n        transformPropertiesObjectRef\r\n      );\r\n\r\n      Object.keys(nonAnimatableStyle).forEach((styleProp) => {\r\n        const value =\r\n          nonAnimatableStyle[styleProp as keyof React.CSSProperties];\r\n\r\n        if (ref.current) {\r\n          ref.current.style[styleProp] = getCssValue(styleProp, value);\r\n        }\r\n      });\r\n    }, [props.style]);\r\n\r\n    React.useLayoutEffect(() => {\r\n      const subscribers: any = [];\r\n\r\n      animations.forEach((props: AnimationObject) => {\r\n        const {\r\n          _subscribe,\r\n          _value,\r\n          _config,\r\n          _currentValue,\r\n          propertyType,\r\n          property,\r\n          animatable,\r\n        } = props;\r\n\r\n        // store animations here\r\n        let animation: any = null;\r\n\r\n        if (!ref.current) {\r\n          return;\r\n        }\r\n\r\n        // whether or not the property is one of transform keys\r\n        const isTransform = styleTrasformKeys.indexOf(property as any) !== -1;\r\n\r\n        // called every frame to update new transform values\r\n        // getTransform function returns the valid transform string\r\n        const getTransformValue = (value: any) => {\r\n          transformPropertiesObjectRef.current[property] = value;\r\n          return getTransform(transformPropertiesObjectRef.current);\r\n        };\r\n\r\n        // to apply animation values to a ref node\r\n        const applyAnimationValues = (value: any) => {\r\n          if (ref.current) {\r\n            if (propertyType === 'style') {\r\n              // set animation to style\r\n              if (isTransform) {\r\n                ref.current.style.transform = getTransformValue(value);\r\n              } else {\r\n                ref.current.style[property] = getCssValue(property, value);\r\n              }\r\n            } else if (propertyType === 'props') {\r\n              // set animation to property\r\n              ref.current.setAttribute(camelToDash(property), value);\r\n            }\r\n          }\r\n        };\r\n\r\n        const onFrame = (value: number) => {\r\n          _currentValue.current = value;\r\n\r\n          // for interpolation we check isInterpolation boolean\r\n          // which is injected from interpolate function\r\n          if (props.isInterpolation) {\r\n            const { interpolationConfig } = props;\r\n\r\n            const interpolatedValue = interpolateNumbers(\r\n              value,\r\n              interpolationConfig.inputRange,\r\n              interpolationConfig.outputRange,\r\n              interpolationConfig.extrapolateConfig\r\n            );\r\n\r\n            // interpolate it first and\r\n            // apply animation to ref node\r\n            applyAnimationValues(interpolatedValue);\r\n          } else {\r\n            // if it is FluidValue, we dont have to interpolate it\r\n            // just apply animation value\r\n            applyAnimationValues(value);\r\n          }\r\n        };\r\n\r\n        /**\r\n         * Function to initialize dynamic animations according to config\r\n         * \"spring\" or \"timing\" based animations are\r\n         * determined by the config duration\r\n         */\r\n        const defineAnimation = (\r\n          value: number,\r\n          config?: TransitionValueConfig\r\n        ) => {\r\n          const animationConfig: TransitionValueConfig | undefined = {\r\n            ..._config,\r\n            ...config,\r\n          };\r\n\r\n          let type: AnimationTypes;\r\n          /**\r\n           * Here duration key determines the type of animation\r\n           * spring config are overridden by duration\r\n           */\r\n          if (\r\n            isDefined(animationConfig?.duration) ||\r\n            animationConfig?.immediate\r\n          ) {\r\n            type = 'timing';\r\n          } else {\r\n            type = 'spring';\r\n          }\r\n\r\n          if (type === 'spring') {\r\n            animation = new SpringAnimation({\r\n              initialPosition: value,\r\n              config: animationConfig,\r\n            });\r\n          } else if (type === 'timing') {\r\n            animation = new TimingAnimation({\r\n              initialPosition: value,\r\n              config: animationConfig,\r\n            });\r\n          }\r\n        };\r\n\r\n        const onUpdate = (\r\n          value: UpdateValue,\r\n          callback?: (value: ResultType) => void\r\n        ) => {\r\n          const { toValue, config } = value;\r\n\r\n          if (animatable) {\r\n            const previousAnimation = animation;\r\n\r\n            // animatable\r\n            if (previousAnimation._toValue !== toValue) {\r\n              /**\r\n               * stopping animation here would affect in whole\r\n               * animation pattern, requestAnimationFrame instance\r\n               * is created on frequent calls like mousemove\r\n               * it flushes current running requestAnimationFrame\r\n               */\r\n              animation.stop();\r\n\r\n              // re-define animation here with different configuration\r\n              // used for dynamic animation\r\n              defineAnimation(previousAnimation._position, config);\r\n\r\n              // invoke onStart function\r\n              config?.onStart && config.onStart(previousAnimation._position);\r\n\r\n              // start animations here by start api\r\n              animation.start({\r\n                toValue,\r\n                onFrame,\r\n                previousAnimation,\r\n                onEnd: callback,\r\n              });\r\n            }\r\n          } else {\r\n            // non-animatable\r\n            if (typeof toValue === typeof _value) {\r\n              if (ref.current) {\r\n                ref.current.style[property] = getCssValue(property, toValue);\r\n              }\r\n            } else {\r\n              throw new Error('Cannot set different types of animation values');\r\n            }\r\n          }\r\n        };\r\n\r\n        // called initially to paint the frame with initial value '_value'\r\n        onFrame(_value as number);\r\n\r\n        if (animatable) {\r\n          // define type of animation to paint the first frame with initial value '_value'\r\n          defineAnimation(_value as number);\r\n        }\r\n\r\n        const subscribe = _subscribe(onUpdate, property, Date.now());\r\n        subscribers.push(subscribe);\r\n      });\r\n\r\n      return () => {\r\n        // cleanup\r\n        subscribers.forEach((subscriber: any) => subscriber);\r\n      };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return React.createElement(WrapperComponent, {\r\n      ...getCleanProps(props),\r\n      ref: combineRefs(ref, forwardRef),\r\n    });\r\n  }\r\n\r\n  return React.forwardRef(Wrapper);\r\n}\r\n\r\ntype WithAnimated = {\r\n  [element in keyof JSX.IntrinsicElements]: React.ComponentType<\r\n    AnimatedProps<element>\r\n  >;\r\n};\r\n\r\nexport const animated: WithAnimated = {} as any;\r\ntags.forEach((element) => {\r\n  animated[element] = makeAnimatedComponent(\r\n    element as keyof JSX.IntrinsicElements\r\n  );\r\n});\r\n","import type {\r\n  Fn,\r\n  Length,\r\n  ResultType,\r\n  SubscribeFn,\r\n  TransitionValueConfig,\r\n  OnUpdateFn,\r\n  AssignValue,\r\n} from '../types';\r\n\r\nexport class TransitionValue {\r\n  public _subscribe: SubscribeFn;\r\n  public _value: Length;\r\n  public _config?: TransitionValueConfig;\r\n  public _currentValue: { current: Length };\r\n  public _subscriptions: Map<{ uuid: number; property: string }, OnUpdateFn>;\r\n\r\n  public get: () => Length;\r\n\r\n  constructor(initialValue: Length, config?: TransitionValueConfig) {\r\n    this._subscriptions = new Map();\r\n    this._subscribe = (\r\n      onUpdate: OnUpdateFn,\r\n      property: string,\r\n      uuid: number\r\n    ) => {\r\n      this._subscriptions.set({ uuid, property }, onUpdate);\r\n\r\n      return () => {\r\n        this._subscriptions.delete({ uuid, property });\r\n      };\r\n    };\r\n    this._value = initialValue;\r\n    this._currentValue = { current: initialValue };\r\n    this._config = config;\r\n    this.get = () => this._currentValue.current;\r\n  }\r\n\r\n  /**\r\n   * Animates from initial value to updated value, determines the transition type `multistage`\r\n   * or `singlestage` according to updatedValue\r\n   */\r\n  setValue(updatedValue: AssignValue, callback?: Fn<ResultType, void>) {\r\n    /** Multistage transition */\r\n    if (typeof updatedValue === 'function') {\r\n      updatedValue((nextValue) => {\r\n        const multiStagePromise = new Promise((resolve) => {\r\n          for (const subscriptionKey of this._subscriptions.keys()) {\r\n            const updater = this._subscriptions.get(subscriptionKey);\r\n\r\n            if (updater) {\r\n              updater(nextValue, function (result) {\r\n                if (result.finished) {\r\n                  resolve(nextValue);\r\n                }\r\n\r\n                if (callback) {\r\n                  callback(result);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        return multiStagePromise;\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    /** Singlestage transition */\r\n    for (const subscriptionKey of this._subscriptions.keys()) {\r\n      const updater = this._subscriptions.get(subscriptionKey);\r\n\r\n      updater && updater(updatedValue, callback);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { TransitionValue } from '../animation/TransitionValue';\r\nimport type { TransitionValueConfig, OnUpdateFn, Length } from '../types';\r\n\r\n/**\r\n * Transition hook\r\n *\r\n * @param initialValue - initial value\r\n * @param config - the config object for `TransitionValue`\r\n */\r\nexport function useTransition(\r\n  initialValue: Length,\r\n  config?: TransitionValueConfig\r\n): [TransitionValue, OnUpdateFn] {\r\n  const isInitial = React.useRef<boolean>(true);\r\n  const transition = React.useRef(\r\n    new TransitionValue(initialValue, config)\r\n  ).current;\r\n\r\n  /**\r\n   * trigger animation on argument change\r\n   * doesn't fire the setValue method on initial render\r\n   */\r\n  React.useEffect(() => {\r\n    if (!isInitial.current) {\r\n      transition.setValue({ toValue: initialValue, config });\r\n    }\r\n\r\n    isInitial.current = false;\r\n  }, [initialValue]);\r\n\r\n  return [transition, transition.setValue.bind(transition)];\r\n}\r\n","import React from 'react';\r\nimport { useTransition } from './useTransition';\r\nimport type { FluidValue, TransitionValueConfig, AssignValue } from '../types';\r\n\r\nexport interface UseMountConfig {\r\n  from: number;\r\n  enter: number | AssignValue;\r\n  exit: number | AssignValue;\r\n  enterConfig?: TransitionValueConfig;\r\n  exitConfig?: TransitionValueConfig;\r\n  config?: TransitionValueConfig;\r\n}\r\n\r\n/**\r\n * Mount hook\r\n * applies mounting and unmounting of a component according to state change\r\n * applying transitions\r\n *\r\n * @param state - boolean indicating mount state of a component\r\n * @param config - the config object `UseMountConfig`\r\n */\r\nexport function useMount(state: boolean, config: UseMountConfig) {\r\n  const initial = React.useRef(true);\r\n  const [mounted, setMounted] = React.useState(state);\r\n  const {\r\n    from,\r\n    enter,\r\n    exit,\r\n    config: innerConfig,\r\n    enterConfig,\r\n    exitConfig,\r\n  } = React.useRef(config).current;\r\n  const [animation, setAnimation] = useTransition(from, innerConfig);\r\n\r\n  React.useEffect(() => {\r\n    if (state) {\r\n      initial.current = true;\r\n      setMounted(true);\r\n    } else {\r\n      initial.current = false;\r\n      setAnimation(\r\n        typeof exit === 'number'\r\n          ? {\r\n              toValue: exit,\r\n              config: exitConfig,\r\n            }\r\n          : exit,\r\n        function ({ finished }) {\r\n          if (finished) {\r\n            setMounted(false);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n    if (mounted && initial.current) {\r\n      setAnimation(\r\n        typeof enter === 'number'\r\n          ? {\r\n              toValue: enter,\r\n              config: enterConfig,\r\n            }\r\n          : enter\r\n      );\r\n    }\r\n  }, [mounted, initial.current]);\r\n\r\n  return function (\r\n    callback: (animation: FluidValue, mounted: boolean) => React.ReactNode\r\n  ) {\r\n    return callback(animation, mounted);\r\n  };\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}