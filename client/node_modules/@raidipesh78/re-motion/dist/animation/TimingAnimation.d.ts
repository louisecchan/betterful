import { Animation } from './Animation';
import type { TransitionValueConfig, ResultType } from '../types';
/**
 * Class implementing timing based animation
 */
export declare class TimingAnimation extends Animation {
    _startTime: number;
    _fromValue: number;
    _toValue: any;
    _duration: number;
    _easing: (value: number) => number;
    _onFrame: (value: number) => void;
    _animationFrame: any;
    _timeout: any;
    _lastPosition: number;
    _position: number;
    _delay: number;
    _tempDuration: number;
    _onRest?: (value: ResultType) => void;
    _onChange?: (value: number) => void;
    constructor({ initialPosition, config, }: {
        initialPosition: number;
        config?: Omit<TransitionValueConfig, 'mass' | 'friction' | 'tension'>;
    });
    onChange(value: number): void;
    onUpdate(): void;
    stop(): void;
    set(toValue: number): void;
    start({ toValue, onFrame, previousAnimation, onEnd, }: {
        toValue: number;
        onFrame: (value: number) => void;
        previousAnimation?: TimingAnimation;
        onEnd?: (result: ResultType) => void;
    }): void;
}
