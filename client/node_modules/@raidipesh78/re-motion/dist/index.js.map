{"version":3,"file":"index.js","sources":["../src/animation/Animation.ts","../src/animation/RequestAnimationFrame.ts","../src/animation/SpringAnimation.ts","../src/easing/Bezier.ts","../src/easing/Easing.ts","../src/animation/TimingAnimation.ts","../src/interpolation/Colors.ts","../src/react/functions/isTransitionValue.ts","../src/react/functions/getAnimatableObject.ts","../src/react/TransformStyles.ts","../src/react/functions/getNonAnimatableStyle.ts","../src/react/functions/getCleanProps.ts","../src/react/Tags.ts","../src/react/functions/getCssValue.ts","../src/react/functions/isDefined.ts","../src/react/functions/camelToDash.ts","../src/interpolation/Interpolation.ts","../src/react/combineRefs.ts","../src/react/animated.tsx","../src/animation/TransitionValue.ts","../src/react/useTransition.ts","../src/react/useMount.ts"],"sourcesContent":["import { ResultType } from '../types';\r\n\r\n/**\r\n * Base Animation class\r\n */\r\nexport class Animation {\r\n  _active: boolean;\r\n  _onEnd: any;\r\n  /**\r\n   * it is necessary to add _onRest function as well\r\n   * because _onEnd is always re-assigned with onUpdate callback\r\n   * so that _onRest function is not fired, so we have to duplicate it\r\n   */\r\n  _onRest?: any;\r\n\r\n  _debounceOnEnd(result: ResultType) {\r\n    const onEnd = this._onEnd;\r\n    const onRest = this._onRest;\r\n    this._onEnd = null;\r\n    this._onRest = null;\r\n\r\n    onRest && onRest(result);\r\n    onEnd && onEnd(result);\r\n  }\r\n\r\n  stop() {}\r\n}\r\n","export const RequestAnimationFrame = {\r\n  current: (cb: any) => global.requestAnimationFrame(cb),\r\n  inject(injected: any) {\r\n    RequestAnimationFrame.current = injected;\r\n  },\r\n};\r\n\r\nexport const CancelAnimationFrame = {\r\n  current: (id: any) => global.cancelAnimationFrame(id),\r\n  inject(injected: any) {\r\n    CancelAnimationFrame.current = injected;\r\n  },\r\n};\r\n","import { Animation } from './Animation';\r\nimport {\r\n  RequestAnimationFrame,\r\n  CancelAnimationFrame,\r\n} from './RequestAnimationFrame';\r\nimport type { TransitionValueConfig, ResultType } from '../types';\r\n\r\n/**\r\n * Class implementing spring based animation\r\n */\r\nexport class SpringAnimation extends Animation {\r\n  _overshootClamping: boolean;\r\n  _restDisplacementThreshold: number;\r\n  _restSpeedThreshold: number;\r\n  _initialVelocity?: number;\r\n  _lastVelocity: number;\r\n  _startPosition: number;\r\n  _lastPosition: number;\r\n  _position: number;\r\n  _fromValue: number;\r\n  _toValue: any;\r\n  _mass: number;\r\n  _tension: number;\r\n  _friction: number;\r\n  _lastTime: number;\r\n  _onFrame: (value: number) => void;\r\n  _animationFrame: any;\r\n  _timeout: any;\r\n\r\n  // Modifiers\r\n  _delay: number;\r\n  _onRest?: (value: ResultType) => void;\r\n  _onChange?: (value: number) => void;\r\n\r\n  constructor({\r\n    initialPosition,\r\n    config,\r\n  }: {\r\n    initialPosition: number;\r\n    config?: Omit<TransitionValueConfig, 'duration' | 'easing'>;\r\n  }) {\r\n    super();\r\n\r\n    this._overshootClamping = false;\r\n    this._initialVelocity = 0;\r\n    this._lastVelocity = 0;\r\n    this._startPosition = initialPosition;\r\n    this._position = this._startPosition;\r\n\r\n    this._restDisplacementThreshold = config?.restDistance ?? 0.001;\r\n    this._restSpeedThreshold = config?.restDistance ?? 0.001;\r\n    this._mass = config?.mass ?? 1;\r\n    this._tension = config?.tension ?? 170;\r\n    this._friction = config?.friction ?? 26;\r\n    this._delay = config?.delay ?? 0;\r\n\r\n    this._onRest = config?.onRest;\r\n    this._onChange = config?.onChange;\r\n  }\r\n\r\n  onChange(value: number) {\r\n    this._onFrame(value);\r\n\r\n    if (this._lastPosition !== value) {\r\n      if (this._onChange) {\r\n        this._onChange(value);\r\n      }\r\n    }\r\n\r\n    this._lastPosition = value;\r\n  }\r\n\r\n  onUpdate() {\r\n    var now = Date.now();\r\n\r\n    const deltaTime = Math.min(now - this._lastTime, 64);\r\n    this._lastTime = now;\r\n\r\n    const c = this._friction;\r\n    const m = this._mass;\r\n    const k = this._tension;\r\n\r\n    const v0 = -this._lastVelocity;\r\n    const x0 = this._toValue - this._position;\r\n\r\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\r\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\r\n    const omega1 = omega0 * Math.sqrt(1 - zeta ** 2); // exponential decay\r\n\r\n    const t = deltaTime / 1000;\r\n\r\n    const sin1 = Math.sin(omega1 * t);\r\n    const cos1 = Math.cos(omega1 * t);\r\n\r\n    // under damped\r\n    const underDampedEnvelope = Math.exp(-zeta * omega0 * t);\r\n    const underDampedFrag1 =\r\n      underDampedEnvelope *\r\n      (sin1 * ((v0 + zeta * omega0 * x0) / omega1) + x0 * cos1);\r\n\r\n    const underDampedPosition = this._toValue - underDampedFrag1;\r\n    // This looks crazy -- it's actually just the derivative of the oscillation function\r\n    const underDampedVelocity =\r\n      zeta * omega0 * underDampedFrag1 -\r\n      underDampedEnvelope *\r\n        (cos1 * (v0 + zeta * omega0 * x0) - omega1 * x0 * sin1);\r\n\r\n    // critically damped\r\n    const criticallyDampedEnvelope = Math.exp(-omega0 * t);\r\n    const criticallyDampedPosition =\r\n      this._toValue - criticallyDampedEnvelope * (x0 + (v0 + omega0 * x0) * t);\r\n\r\n    const criticallyDampedVelocity =\r\n      criticallyDampedEnvelope *\r\n      (v0 * (t * omega0 - 1) + t * x0 * omega0 * omega0);\r\n\r\n    this.onChange(this._position);\r\n\r\n    const isOvershooting = () => {\r\n      if (this._overshootClamping && this._tension !== 0) {\r\n        return this._position < this._toValue\r\n          ? this._position > this._toValue\r\n          : this._position < this._toValue;\r\n      } else {\r\n        return false;\r\n      }\r\n    };\r\n\r\n    const isVelocity = Math.abs(this._lastVelocity) < this._restSpeedThreshold;\r\n    const isDisplacement =\r\n      this._tension === 0 ||\r\n      Math.abs(this._toValue - this._position) <\r\n        this._restDisplacementThreshold;\r\n\r\n    if (zeta < 1) {\r\n      this._position = underDampedPosition;\r\n      this._lastVelocity = underDampedVelocity;\r\n    } else {\r\n      this._position = criticallyDampedPosition;\r\n      this._lastVelocity = criticallyDampedVelocity;\r\n    }\r\n\r\n    if (isOvershooting() || (isVelocity && isDisplacement)) {\r\n      if (this._tension !== 0) {\r\n        this._lastVelocity = 0;\r\n        this._position = this._toValue;\r\n\r\n        this.onChange(this._position);\r\n      }\r\n      // clear lastTimestamp to avoid using stale value by the next spring animation that starts after this one\r\n      this._lastTime = 0;\r\n\r\n      this._debounceOnEnd({ finished: true, value: this._toValue });\r\n\r\n      return;\r\n    }\r\n\r\n    this._animationFrame = RequestAnimationFrame.current(\r\n      this.onUpdate.bind(this)\r\n    );\r\n  }\r\n\r\n  stop() {\r\n    this._active = false;\r\n    clearTimeout(this._timeout);\r\n    CancelAnimationFrame.current(this._animationFrame);\r\n    this._debounceOnEnd({ finished: false, value: this._position });\r\n  }\r\n\r\n  // Set value\r\n  set(toValue: number) {\r\n    this.stop();\r\n    this._position = toValue;\r\n    this._lastTime = 0;\r\n    this._lastVelocity = 0;\r\n    this.onChange(toValue);\r\n  }\r\n\r\n  start({\r\n    toValue,\r\n    onFrame,\r\n    previousAnimation,\r\n    onEnd,\r\n  }: {\r\n    toValue: number;\r\n    onFrame: (value: number) => void;\r\n    previousAnimation?: SpringAnimation;\r\n    onEnd?: (result: ResultType) => void;\r\n  }) {\r\n    const onStart: any = () => {\r\n      this._onFrame = onFrame;\r\n      this._active = true;\r\n      this._toValue = toValue;\r\n      this._onEnd = onEnd;\r\n\r\n      const now = Date.now();\r\n\r\n      if (previousAnimation instanceof SpringAnimation) {\r\n        this._lastVelocity =\r\n          previousAnimation._lastVelocity || this._lastVelocity || 0;\r\n        this._lastTime = previousAnimation._lastTime || now;\r\n      } else {\r\n        this._lastTime = now;\r\n      }\r\n\r\n      this._animationFrame = RequestAnimationFrame.current(\r\n        this.onUpdate.bind(this)\r\n      );\r\n    };\r\n\r\n    if (this._delay !== 0) {\r\n      this._timeout = setTimeout(() => onStart(), this._delay);\r\n    } else {\r\n      onStart();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * https://github.com/gre/bezier-easing\r\n * BezierEasing - use bezier curve for transition easing function\r\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n */\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\nvar NEWTON_ITERATIONS = 4;\r\nvar NEWTON_MIN_SLOPE = 0.001;\r\nvar SUBDIVISION_PRECISION = 0.0000001;\r\nvar SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\nvar kSplineTableSize = 11;\r\nvar kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\nvar float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\nfunction A(aA1: number, aA2: number) {\r\n  return 1.0 - 3.0 * aA2 + 3.0 * aA1;\r\n}\r\nfunction B(aA1: number, aA2: number) {\r\n  return 3.0 * aA2 - 6.0 * aA1;\r\n}\r\nfunction C(aA1: number) {\r\n  return 3.0 * aA1;\r\n}\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\nfunction calcBezier(aT: number, aA1: number, aA2: number) {\r\n  return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n}\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\nfunction getSlope(aT: number, aA1: number, aA2: number) {\r\n  return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n}\r\n\r\nfunction binarySubdivide(\r\n  aX: number,\r\n  aA: number,\r\n  aB: number,\r\n  mX1: number,\r\n  mX2: number\r\n) {\r\n  var currentX,\r\n    currentT,\r\n    i = 0;\r\n  do {\r\n    currentT = aA + (aB - aA) / 2.0;\r\n    currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n    if (currentX > 0.0) {\r\n      aB = currentT;\r\n    } else {\r\n      aA = currentT;\r\n    }\r\n  } while (\r\n    Math.abs(currentX) > SUBDIVISION_PRECISION &&\r\n    ++i < SUBDIVISION_MAX_ITERATIONS\r\n  );\r\n  return currentT;\r\n}\r\n\r\nfunction newtonRaphsonIterate(\r\n  aX: number,\r\n  aGuessT: number,\r\n  mX1: number,\r\n  mX2: number\r\n) {\r\n  for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n    var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n    if (currentSlope === 0.0) {\r\n      return aGuessT;\r\n    }\r\n    var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n    aGuessT -= currentX / currentSlope;\r\n  }\r\n  return aGuessT;\r\n}\r\n\r\nfunction LinearEasing(x: number) {\r\n  return x;\r\n}\r\n\r\nfunction bezier(mX1: number, mY1: number, mX2: number, mY2: number) {\r\n  if (!(0 <= mX1 && mX1 <= 1 && 0 <= mX2 && mX2 <= 1)) {\r\n    throw new Error(\"bezier x values must be in [0, 1] range\");\r\n  }\r\n\r\n  if (mX1 === mY1 && mX2 === mY2) {\r\n    return LinearEasing;\r\n  }\r\n\r\n  // Precompute samples table\r\n  var sampleValues = float32ArraySupported\r\n    ? new Float32Array(kSplineTableSize)\r\n    : new Array(kSplineTableSize);\r\n  for (var i = 0; i < kSplineTableSize; ++i) {\r\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n  }\r\n\r\n  function getTForX(aX: number) {\r\n    var intervalStart = 0.0;\r\n    var currentSample = 1;\r\n    var lastSample = kSplineTableSize - 1;\r\n\r\n    for (\r\n      ;\r\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\r\n      ++currentSample\r\n    ) {\r\n      intervalStart += kSampleStepSize;\r\n    }\r\n    --currentSample;\r\n\r\n    // Interpolate to provide an initial guess for t\r\n    var dist =\r\n      (aX - sampleValues[currentSample]) /\r\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\r\n    var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n    var initialSlope = getSlope(guessForT, mX1, mX2);\r\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n    } else if (initialSlope === 0.0) {\r\n      return guessForT;\r\n    } else {\r\n      return binarySubdivide(\r\n        aX,\r\n        intervalStart,\r\n        intervalStart + kSampleStepSize,\r\n        mX1,\r\n        mX2\r\n      );\r\n    }\r\n  }\r\n\r\n  return function BezierEasing(x: number) {\r\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n    if (x === 0 || x === 1) {\r\n      return x;\r\n    }\r\n    return calcBezier(getTForX(x), mY1, mY2);\r\n  };\r\n}\r\n\r\nexport { bezier };\r\n","/**\r\n * Copyright (c) 2015-present, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n */\r\nimport { bezier as _bezier } from \"./Bezier\";\r\n\r\n/**\r\n * This class implements common easing functions. The math is pretty obscure,\r\n * but this cool website has nice visual illustrations of what they represent:\r\n * http://xaedes.de/dev/transitions/\r\n */\r\nexport class Easing {\r\n  static step0(n: number) {\r\n    return n > 0 ? 1 : 0;\r\n  }\r\n\r\n  static step1(n: number) {\r\n    return n >= 1 ? 1 : 0;\r\n  }\r\n\r\n  static linear(t: number) {\r\n    return t;\r\n  }\r\n\r\n  static ease(t: number): number {\r\n    return ease(t);\r\n  }\r\n\r\n  static quad(t: number) {\r\n    return t * t;\r\n  }\r\n\r\n  static cubic(t: number) {\r\n    return t * t * t;\r\n  }\r\n\r\n  static poly(n: number) {\r\n    return (t: number) => Math.pow(t, n);\r\n  }\r\n\r\n  static sin(t: number) {\r\n    return 1 - Math.cos((t * Math.PI) / 2);\r\n  }\r\n\r\n  static circle(t: number) {\r\n    return 1 - Math.sqrt(1 - t * t);\r\n  }\r\n\r\n  static exp(t: number) {\r\n    return Math.pow(2, 10 * (t - 1));\r\n  }\r\n\r\n  /**\r\n   * A simple elastic interaction, similar to a spring.  Default bounciness\r\n   * is 1, which overshoots a little bit once.  0 bounciness doesn't overshoot\r\n   * at all, and bounciness of N > 1 will overshoot about N times.\r\n   *\r\n   * Wolfram Plots:\r\n   *\r\n   *   http://tiny.cc/elastic_b_1 (default bounciness = 1)\r\n   *   http://tiny.cc/elastic_b_3 (bounciness = 3)\r\n   */\r\n  static elastic(bounciness: number = 1): (t: number) => number {\r\n    var p = bounciness * Math.PI;\r\n    return (t) =>\r\n      1 - Math.pow(Math.cos((t * Math.PI) / 2), 3) * Math.cos(t * p);\r\n  }\r\n\r\n  static back(s: number): (t: number) => number {\r\n    if (s === undefined) {\r\n      s = 1.70158;\r\n    }\r\n    return (t) => t * t * ((s + 1) * t - s);\r\n  }\r\n\r\n  static bounce(t: number): number {\r\n    if (t < 1 / 2.75) {\r\n      return 7.5625 * t * t;\r\n    }\r\n\r\n    if (t < 2 / 2.75) {\r\n      t -= 1.5 / 2.75;\r\n      return 7.5625 * t * t + 0.75;\r\n    }\r\n\r\n    if (t < 2.5 / 2.75) {\r\n      t -= 2.25 / 2.75;\r\n      return 7.5625 * t * t + 0.9375;\r\n    }\r\n\r\n    t -= 2.625 / 2.75;\r\n    return 7.5625 * t * t + 0.984375;\r\n  }\r\n\r\n  static bezier(\r\n    x1: number,\r\n    y1: number,\r\n    x2: number,\r\n    y2: number\r\n  ): (t: number) => number {\r\n    return _bezier(x1, y1, x2, y2);\r\n  }\r\n\r\n  static in(easing: (t: number) => number): (t: number) => number {\r\n    return easing;\r\n  }\r\n\r\n  /**\r\n   * Runs an easing function backwards.\r\n   */\r\n  static out(easing: (t: number) => number): (t: number) => number {\r\n    return (t) => 1 - easing(1 - t);\r\n  }\r\n\r\n  /**\r\n   * Makes any easing function symmetrical.\r\n   */\r\n  static inOut(easing: (t: number) => number): (t: number) => number {\r\n    return (t) => {\r\n      if (t < 0.5) {\r\n        return easing(t * 2) / 2;\r\n      }\r\n      return 1 - easing((1 - t) * 2) / 2;\r\n    };\r\n  }\r\n}\r\n\r\nvar ease = Easing.bezier(0.42, 0, 1, 1);\r\n","import { Animation } from './Animation';\r\nimport {\r\n  RequestAnimationFrame,\r\n  CancelAnimationFrame,\r\n} from './RequestAnimationFrame';\r\nimport { Easing } from '../easing/Easing';\r\nimport type { TransitionValueConfig, ResultType } from '../types';\r\n\r\n/**\r\n * Class implementing timing based animation\r\n */\r\nexport class TimingAnimation extends Animation {\r\n  _startTime: number;\r\n  _fromValue: number;\r\n  _toValue: any;\r\n  _duration: number;\r\n  _easing: (value: number) => number;\r\n  _onFrame: (value: number) => void;\r\n  _animationFrame: any;\r\n  _timeout: any;\r\n  _lastPosition: number;\r\n  _position: number;\r\n\r\n  // Modifiers\r\n  _delay: number;\r\n  _tempDuration: number;\r\n  _onRest?: (value: ResultType) => void;\r\n  _onChange?: (value: number) => void;\r\n\r\n  constructor({\r\n    initialPosition,\r\n    config,\r\n  }: {\r\n    initialPosition: number;\r\n    config?: Omit<TransitionValueConfig, 'mass' | 'friction' | 'tension'>;\r\n  }) {\r\n    super();\r\n\r\n    this._fromValue = initialPosition;\r\n    this._position = this._fromValue;\r\n    this._easing = config?.easing ?? Easing.linear;\r\n    this._duration = config?.duration ?? 500;\r\n    this._tempDuration = this._duration;\r\n\r\n    // Modifiers\r\n    // here immediate acts like duration: 0\r\n    if (config?.immediate) {\r\n      this._duration = 0;\r\n    }\r\n\r\n    this._delay = config?.delay ?? 0;\r\n    this._onRest = config?.onRest;\r\n    this._onChange = config?.onChange;\r\n  }\r\n\r\n  onChange(value: number) {\r\n    this._onFrame(value);\r\n\r\n    if (this._lastPosition !== value) {\r\n      if (this._onChange) {\r\n        this._onChange(value);\r\n      }\r\n    }\r\n\r\n    this._lastPosition = value;\r\n  }\r\n\r\n  onUpdate() {\r\n    const now = Date.now();\r\n\r\n    const runTime = now - this._startTime;\r\n\r\n    if (runTime >= this._duration) {\r\n      this._startTime = 0;\r\n      this._position = this._toValue;\r\n\r\n      this.onChange(this._position);\r\n\r\n      this._debounceOnEnd({ finished: true, value: this._position });\r\n      return;\r\n    }\r\n\r\n    const progress = this._easing(runTime / this._duration);\r\n\r\n    this._position =\r\n      this._fromValue + (this._toValue - this._fromValue) * progress;\r\n\r\n    this.onChange(this._position);\r\n\r\n    this._animationFrame = RequestAnimationFrame.current(\r\n      this.onUpdate.bind(this)\r\n    );\r\n  }\r\n\r\n  stop() {\r\n    this._active = false;\r\n    clearTimeout(this._timeout);\r\n    CancelAnimationFrame.current(this._animationFrame);\r\n    this._debounceOnEnd({ finished: false, value: this._position });\r\n  }\r\n\r\n  // Set value\r\n  set(toValue: number) {\r\n    this.stop();\r\n    this._position = toValue;\r\n    this.onChange(toValue);\r\n  }\r\n\r\n  start({\r\n    toValue,\r\n    onFrame,\r\n    previousAnimation,\r\n    onEnd,\r\n  }: {\r\n    toValue: number;\r\n    onFrame: (value: number) => void;\r\n    previousAnimation?: TimingAnimation;\r\n    onEnd?: (result: ResultType) => void;\r\n  }) {\r\n    const onStart: any = () => {\r\n      this._onFrame = onFrame;\r\n      this._active = true;\r\n      this._onEnd = onEnd;\r\n      this._toValue = toValue;\r\n\r\n      if (\r\n        previousAnimation &&\r\n        previousAnimation instanceof TimingAnimation &&\r\n        previousAnimation._toValue === toValue &&\r\n        previousAnimation._startTime\r\n      ) {\r\n        this._startTime = previousAnimation._startTime;\r\n        this._fromValue = previousAnimation._fromValue;\r\n      } else {\r\n        const now = Date.now();\r\n        this._startTime = now;\r\n        this._fromValue = this._position;\r\n      }\r\n\r\n      this._animationFrame = RequestAnimationFrame.current(\r\n        this.onUpdate.bind(this)\r\n      );\r\n    };\r\n\r\n    if (this._delay !== 0) {\r\n      this._timeout = setTimeout(() => onStart(), this._delay);\r\n    } else {\r\n      onStart();\r\n    }\r\n  }\r\n}\r\n","export const COLOR_NUMBER_REGEX =\r\n  /[+-]?\\d+(\\.\\d+)?|[\\s]?\\.\\d+|#([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})/gi;\r\nexport const HEX_NAME_COLOR =\r\n  /#[a-f\\d]{3,}|transparent|aliceblue|antiquewhite|aqua|aquamarine|azure|beige|bisque|black|blanchedalmond|blue|blueviolet|brown|burlywood|burntsienna|cadetblue|chartreuse|chocolate|coral|cornflowerblue|cornsilk|crimson|cyan|darkblue|darkcyan|darkgoldenrod|darkgray|darkgreen|darkgrey|darkkhaki|darkmagenta|darkolivegreen|darkorange|darkorchid|darkred|darksalmon|darkseagreen|darkslateblue|darkslategray|darkslategrey|darkturquoise|darkviolet|deeppink|deepskyblue|dimgray|dimgrey|dodgerblue|firebrick|floralwhite|forestgreen|fuchsia|gainsboro|ghostwhite|gold|goldenrod|gray|green|greenyellow|grey|honeydew|hotpink|indianred|indigo|ivory|khaki|lavender|lavenderblush|lawngreen|lemonchiffon|lightblue|lightcoral|lightcyan|lightgoldenrodyellow|lightgray|lightgreen|lightgrey|lightpink|lightsalmon|lightseagreen|lightskyblue|lightslategray|lightslategrey|lightsteelblue|lightyellow|lime|limegreen|linen|magenta|maroon|mediumaquamarine|mediumblue|mediumorchid|mediumpurple|mediumseagreen|mediumslateblue|mediumspringgreen|mediumturquoise|mediumvioletred|midnightblue|mintcream|mistyrose|moccasin|navajowhite|navy|oldlace|olive|olivedrab|orange|orangered|orchid|palegoldenrod|palegreen|paleturquoise|palevioletred|papayawhip|peachpuff|peru|pink|plum|powderblue|purple|rebeccapurple|red|rosybrown|royalblue|saddlebrown|salmon|sandybrown|seagreen|seashell|sienna|silver|skyblue|slateblue|slategray|slategrey|snow|springgreen|steelblue|tan|teal|thistle|tomato|turquoise|violet|wheat|white|whitesmoke|yellow|yellowgreen/gi;\r\n\r\ninterface classNameType {\r\n  [name: string]: string;\r\n}\r\n\r\n// Named colors\r\nexport const colorNames: classNameType = {\r\n  transparent: \"#00000000\",\r\n  aliceblue: \"#f0f8ffff\",\r\n  antiquewhite: \"#faebd7ff\",\r\n  aqua: \"#00ffffff\",\r\n  aquamarine: \"#7fffd4ff\",\r\n  azure: \"#f0ffffff\",\r\n  beige: \"#f5f5dcff\",\r\n  bisque: \"#ffe4c4ff\",\r\n  black: \"#000000ff\",\r\n  blanchedalmond: \"#ffebcdff\",\r\n  blue: \"#0000ffff\",\r\n  blueviolet: \"#8a2be2ff\",\r\n  brown: \"#a52a2aff\",\r\n  burlywood: \"#deb887ff\",\r\n  burntsienna: \"#ea7e5dff\",\r\n  cadetblue: \"#5f9ea0ff\",\r\n  chartreuse: \"#7fff00ff\",\r\n  chocolate: \"#d2691eff\",\r\n  coral: \"#ff7f50ff\",\r\n  cornflowerblue: \"#6495edff\",\r\n  cornsilk: \"#fff8dcff\",\r\n  crimson: \"#dc143cff\",\r\n  cyan: \"#00ffffff\",\r\n  darkblue: \"#00008bff\",\r\n  darkcyan: \"#008b8bff\",\r\n  darkgoldenrod: \"#b8860bff\",\r\n  darkgray: \"#a9a9a9ff\",\r\n  darkgreen: \"#006400ff\",\r\n  darkgrey: \"#a9a9a9ff\",\r\n  darkkhaki: \"#bdb76bff\",\r\n  darkmagenta: \"#8b008bff\",\r\n  darkolivegreen: \"#556b2fff\",\r\n  darkorange: \"#ff8c00ff\",\r\n  darkorchid: \"#9932ccff\",\r\n  darkred: \"#8b0000ff\",\r\n  darksalmon: \"#e9967aff\",\r\n  darkseagreen: \"#8fbc8fff\",\r\n  darkslateblue: \"#483d8bff\",\r\n  darkslategray: \"#2f4f4fff\",\r\n  darkslategrey: \"#2f4f4fff\",\r\n  darkturquoise: \"#00ced1ff\",\r\n  darkviolet: \"#9400d3ff\",\r\n  deeppink: \"#ff1493ff\",\r\n  deepskyblue: \"#00bfffff\",\r\n  dimgray: \"#696969ff\",\r\n  dimgrey: \"#696969ff\",\r\n  dodgerblue: \"#1e90ffff\",\r\n  firebrick: \"#b22222ff\",\r\n  floralwhite: \"#fffaf0ff\",\r\n  forestgreen: \"#228b22ff\",\r\n  fuchsia: \"#ff00ffff\",\r\n  gainsboro: \"#dcdcdcff\",\r\n  ghostwhite: \"#f8f8ffff\",\r\n  gold: \"#ffd700ff\",\r\n  goldenrod: \"#daa520ff\",\r\n  gray: \"#808080ff\",\r\n  green: \"#008000ff\",\r\n  greenyellow: \"#adff2fff\",\r\n  grey: \"#808080ff\",\r\n  honeydew: \"#f0fff0ff\",\r\n  hotpink: \"#ff69b4ff\",\r\n  indianred: \"#cd5c5cff\",\r\n  indigo: \"#4b0082ff\",\r\n  ivory: \"#fffff0ff\",\r\n  khaki: \"#f0e68cff\",\r\n  lavender: \"#e6e6faff\",\r\n  lavenderblush: \"#fff0f5ff\",\r\n  lawngreen: \"#7cfc00ff\",\r\n  lemonchiffon: \"#fffacdff\",\r\n  lightblue: \"#add8e6ff\",\r\n  lightcoral: \"#f08080ff\",\r\n  lightcyan: \"#e0ffffff\",\r\n  lightgoldenrodyellow: \"#fafad2ff\",\r\n  lightgray: \"#d3d3d3ff\",\r\n  lightgreen: \"#90ee90ff\",\r\n  lightgrey: \"#d3d3d3ff\",\r\n  lightpink: \"#ffb6c1ff\",\r\n  lightsalmon: \"#ffa07aff\",\r\n  lightseagreen: \"#20b2aaff\",\r\n  lightskyblue: \"#87cefaff\",\r\n  lightslategray: \"#778899ff\",\r\n  lightslategrey: \"#778899ff\",\r\n  lightsteelblue: \"#b0c4deff\",\r\n  lightyellow: \"#ffffe0ff\",\r\n  lime: \"#00ff00ff\",\r\n  limegreen: \"#32cd32ff\",\r\n  linen: \"#faf0e6ff\",\r\n  magenta: \"#ff00ffff\",\r\n  maroon: \"#800000ff\",\r\n  mediumaquamarine: \"#66cdaaff\",\r\n  mediumblue: \"#0000cdff\",\r\n  mediumorchid: \"#ba55d3ff\",\r\n  mediumpurple: \"#9370dbff\",\r\n  mediumseagreen: \"#3cb371ff\",\r\n  mediumslateblue: \"#7b68eeff\",\r\n  mediumspringgreen: \"#00fa9aff\",\r\n  mediumturquoise: \"#48d1ccff\",\r\n  mediumvioletred: \"#c71585ff\",\r\n  midnightblue: \"#191970ff\",\r\n  mintcream: \"#f5fffaff\",\r\n  mistyrose: \"#ffe4e1ff\",\r\n  moccasin: \"#ffe4b5ff\",\r\n  navajowhite: \"#ffdeadff\",\r\n  navy: \"#000080ff\",\r\n  oldlace: \"#fdf5e6ff\",\r\n  olive: \"#808000ff\",\r\n  olivedrab: \"#6b8e23ff\",\r\n  orange: \"#ffa500ff\",\r\n  orangered: \"#ff4500ff\",\r\n  orchid: \"#da70d6ff\",\r\n  palegoldenrod: \"#eee8aaff\",\r\n  palegreen: \"#98fb98ff\",\r\n  paleturquoise: \"#afeeeeff\",\r\n  palevioletred: \"#db7093ff\",\r\n  papayawhip: \"#ffefd5ff\",\r\n  peachpuff: \"#ffdab9ff\",\r\n  peru: \"#cd853fff\",\r\n  pink: \"#ffc0cbff\",\r\n  plum: \"#dda0ddff\",\r\n  powderblue: \"#b0e0e6ff\",\r\n  purple: \"#800080ff\",\r\n  rebeccapurple: \"#663399ff\",\r\n  red: \"#ff0000ff\",\r\n  rosybrown: \"#bc8f8fff\",\r\n  royalblue: \"#4169e1ff\",\r\n  saddlebrown: \"#8b4513ff\",\r\n  salmon: \"#fa8072ff\",\r\n  sandybrown: \"#f4a460ff\",\r\n  seagreen: \"#2e8b57ff\",\r\n  seashell: \"#fff5eeff\",\r\n  sienna: \"#a0522dff\",\r\n  silver: \"#c0c0c0ff\",\r\n  skyblue: \"#87ceebff\",\r\n  slateblue: \"#6a5acdff\",\r\n  slategray: \"#708090ff\",\r\n  slategrey: \"#708090ff\",\r\n  snow: \"#fffafaff\",\r\n  springgreen: \"#00ff7fff\",\r\n  steelblue: \"#4682b4ff\",\r\n  tan: \"#d2b48cff\",\r\n  teal: \"#008080ff\",\r\n  thistle: \"#d8bfd8ff\",\r\n  tomato: \"#ff6347ff\",\r\n  turquoise: \"#40e0d0ff\",\r\n  violet: \"#ee82eeff\",\r\n  wheat: \"#f5deb3ff\",\r\n  white: \"#ffffffff\",\r\n  whitesmoke: \"#f5f5f5ff\",\r\n  yellow: \"#ffff00ff\",\r\n  yellowgreen: \"#9acd32ff\",\r\n};\r\n\r\nfunction conv3to6(hex: string) {\r\n  const regex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n\r\n  return hex.replace(regex, function (_, r, g, b) {\r\n    return \"#\" + r + r + g + g + b + b;\r\n  });\r\n}\r\n\r\nfunction conv6to8(hex: string) {\r\n  if (hex.length === 7) {\r\n    return hex + \"FF\";\r\n  }\r\n\r\n  return hex;\r\n}\r\n\r\nexport function hexToRgba(hex: string) {\r\n  const hex6: string = conv3to6(hex);\r\n  const hex8: string = conv6to8(hex6);\r\n  const hexRgba: any =\r\n    /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex8);\r\n\r\n  return {\r\n    r: parseInt(hexRgba[1], 16),\r\n    g: parseInt(hexRgba[2], 16),\r\n    b: parseInt(hexRgba[3], 16),\r\n    a: parseInt(hexRgba[4], 16) / 255,\r\n  };\r\n}\r\n\r\nexport function rgbaToHex(rgba: {\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  a: number;\r\n}) {\r\n  const { r, g, b, a } = rgba;\r\n\r\n  const hexR = (r | (1 << 8)).toString(16).slice(1);\r\n  const hexG = (g | (1 << 8)).toString(16).slice(1);\r\n  const hexB = (b | (1 << 8)).toString(16).slice(1);\r\n  const hexA = ((a * 255) | (1 << 8)).toString(16).slice(1);\r\n\r\n  return \"#\" + hexR + hexG + hexB + hexA;\r\n}\r\n\r\nexport function processColor(color: number | string) {\r\n  if (typeof color === \"number\") {\r\n    const alpha = ((color >> 24) & 255) / 255;\r\n    const red = (color >> 16) & 255;\r\n    const green = (color >> 8) & 255;\r\n    const blue = color & 255;\r\n\r\n    return { r: red, g: green, b: blue, a: alpha };\r\n  } else {\r\n    // If string then check whether it has # in 0 index\r\n    if (color[0] === \"#\") {\r\n      return hexToRgba(color);\r\n    } else {\r\n      // It is string color\r\n      const hexColorName: string = colorNames[color];\r\n      if (hexColorName) {\r\n        return hexToRgba(hexColorName);\r\n      } else {\r\n        throw new Error(\"String cannot be parsed!\");\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * isTransitionValue to check the value is TransitionValue or not\r\n * @param value - any\r\n * @returns - boolean\r\n */\r\nexport const isTransitionValue = (value: any) => {\r\n  return (\r\n    typeof value === 'object' &&\r\n    Object.prototype.hasOwnProperty.call(value, '_subscribe')\r\n  );\r\n};\r\n","import { isTransitionValue } from './isTransitionValue';\r\nimport type { ExtrapolateConfig } from '../../interpolation/Interpolation';\r\nimport type { FluidValue } from '../../types';\r\n\r\ntype PropertyType = 'style' | 'props';\r\n\r\nexport type AnimationObject = {\r\n  propertyType: PropertyType;\r\n  property: string;\r\n  animatable: boolean;\r\n\r\n  // from interpolateTransitionValue\r\n  isInterpolation: boolean;\r\n  interpolationConfig: {\r\n    inputRange: Array<number>;\r\n    outputRange: Array<number | string>;\r\n    extrapolateConfig?: ExtrapolateConfig;\r\n  };\r\n} & FluidValue;\r\n\r\n/**\r\n * Function to get the array of animatable objects\r\n * @param propertyType - which property type \"props\" or \"style\"\r\n */\r\nexport function getAnimatableObject(\r\n  propertyType: PropertyType,\r\n  propertiesObject: object\r\n) {\r\n  return Object.keys(propertiesObject).reduce(function (acc, styleProp) {\r\n    const value = propertiesObject[styleProp] as FluidValue;\r\n\r\n    if (isTransitionValue(value)) {\r\n      const { _value } = value;\r\n\r\n      return [\r\n        ...acc,\r\n        {\r\n          propertyType,\r\n          property: styleProp,\r\n          animatable: !(typeof _value === 'string'), // strings are non animatable\r\n          ...value,\r\n        },\r\n      ];\r\n    }\r\n\r\n    return acc;\r\n  }, []) as Array<AnimationObject>;\r\n}\r\n","/**\r\n * style keys which can be accepted by animated component\r\n */\r\nexport const styleTrasformKeys = [\r\n  'perspective',\r\n  'translate',\r\n  'translateX',\r\n  'translateY',\r\n  'translateZ',\r\n  'scale',\r\n  'scaleX',\r\n  'scaleY',\r\n  'scaleZ',\r\n  'rotate',\r\n  'rotateX',\r\n  'rotateY',\r\n  'rotateZ',\r\n  'skew',\r\n  'skewX',\r\n  'skewY',\r\n] as const;\r\n\r\nfunction splitCSSValueAndUnit(value: string) {\r\n  const valueMatch = value.match(/(-)?(\\d+.)?\\d+/g);\r\n  const unitMatch = value.match(\r\n    /px|rem|em|ex|%|cm|mm|in|pt|pc|ch|vh|vw|vmin|vmax/\r\n  );\r\n\r\n  return {\r\n    value: Number(valueMatch),\r\n    unit: unitMatch && unitMatch[0],\r\n  };\r\n}\r\n\r\n// get unit of transform style property\r\nfunction getValueUnit(property: string, value: string) {\r\n  let unit;\r\n\r\n  const splitValue = splitCSSValueAndUnit(String(value)).value;\r\n  const splitUnit = splitCSSValueAndUnit(String(value)).unit;\r\n\r\n  // if string value is passed with unit then split it\r\n  if (splitUnit) {\r\n    return { value: splitValue, unit: splitUnit };\r\n  }\r\n\r\n  if (\r\n    property.indexOf('translate') !== -1 ||\r\n    property.indexOf('perspective') !== -1\r\n  ) {\r\n    unit = 'px';\r\n  } else if (property.indexOf('scale') !== -1) {\r\n    unit = '';\r\n  } else if (\r\n    property.indexOf('rotate') !== -1 ||\r\n    property.indexOf('skew') !== -1\r\n  ) {\r\n    unit = 'deg';\r\n  }\r\n\r\n  return { value, unit };\r\n}\r\n\r\nfunction getTransformValueWithUnits(property: string, value: string) {\r\n  const valueUnit = getValueUnit(property, value);\r\n\r\n  if (\r\n    property.indexOf('X') !== -1 ||\r\n    property.indexOf('Y') !== -1 ||\r\n    property.indexOf('Z') !== -1 ||\r\n    property.indexOf('perspective') !== -1 ||\r\n    property.indexOf('rotate') !== -1 ||\r\n    property.indexOf('skew') !== -1\r\n  ) {\r\n    // axis value\r\n    return `${property}(${valueUnit.value}${valueUnit.unit})`;\r\n  } else if (\r\n    property.indexOf('translate') !== -1 ||\r\n    property.indexOf('scale') !== -1\r\n  ) {\r\n    // two parameter value\r\n    return `${property}(${valueUnit.value}${valueUnit.unit}, ${valueUnit.value}${valueUnit.unit})`;\r\n  } else {\r\n    throw new Error(`Error! Property '${property}' cannot be transformed`);\r\n  }\r\n}\r\n\r\n/**\r\n * getTransform function returns transform string from style object\r\n */\r\nexport function getTransform(style: any) {\r\n  const styleKeys: any = Object.keys(style);\r\n\r\n  return styleKeys\r\n    .map(function (styleProp: string) {\r\n      const value = style[styleProp];\r\n\r\n      return getTransformValueWithUnits(styleProp, value);\r\n    })\r\n    .reduce(function (transform: string, value: number) {\r\n      return (transform += ` ${value}`);\r\n    }, '')\r\n    .trim();\r\n}\r\n","import { styleTrasformKeys, getTransform } from '../TransformStyles';\r\nimport { isTransitionValue } from './isTransitionValue';\r\n\r\n/**\r\n * getNonAnimatableStyle function returns the non-animatable style object\r\n * @param style - CSSProperties\r\n * @returns - non-animatable CSSProperties\r\n */\r\nexport function getNonAnimatableStyle(\r\n  style: React.CSSProperties,\r\n  transformObjectRef: React.MutableRefObject<any>\r\n) {\r\n  const stylesWithoutTransforms = Object.keys(style).reduce(\r\n    (resultObject, styleProp) => {\r\n      const value = style[styleProp as keyof React.CSSProperties];\r\n\r\n      // skips all the subscribers here\r\n      // only get non-animatable styles\r\n      if (isTransitionValue(value)) {\r\n        return resultObject;\r\n      } else if (styleTrasformKeys.indexOf(styleProp as any) !== -1) {\r\n        // if not subscriber, then check styleTransformKeys\r\n        // add it to transformPropertiesObjectRef\r\n        transformObjectRef.current[styleProp] = value;\r\n        return resultObject;\r\n      }\r\n\r\n      return { ...resultObject, [styleProp]: value };\r\n    },\r\n    {}\r\n  );\r\n\r\n  const transformStyle: any = {};\r\n  if (Object.keys(transformObjectRef.current).length > 0) {\r\n    transformStyle.transform = getTransform(transformObjectRef.current);\r\n  }\r\n\r\n  // combined transform and non-transform styles\r\n  const combinedStyle = {\r\n    ...transformStyle,\r\n    ...stylesWithoutTransforms,\r\n  };\r\n\r\n  return combinedStyle;\r\n}\r\n","import { isTransitionValue } from './isTransitionValue';\r\n\r\n/**\r\n * Function to get clean props object without any subscribers\r\n */\r\nexport const getCleanProps = (props: any) => {\r\n  const cleanProps = { ...props };\r\n  if (cleanProps.style) {\r\n    delete cleanProps.style;\r\n  }\r\n\r\n  Object.keys(cleanProps).forEach((prop: string) => {\r\n    if (isTransitionValue(cleanProps[prop])) {\r\n      delete cleanProps[prop];\r\n    }\r\n  });\r\n\r\n  return cleanProps;\r\n};\r\n","export const tags = [\r\n  'a',\r\n  'abbr',\r\n  'acronym',\r\n  'address',\r\n  'applet',\r\n  'area',\r\n  'article',\r\n  'aside',\r\n  'audio',\r\n  'b',\r\n  'base',\r\n  'basefont',\r\n  'bdi',\r\n  'bdo',\r\n  'bgsound',\r\n  'big',\r\n  'blink',\r\n  'blockquote',\r\n  'body',\r\n  'br',\r\n  'button',\r\n  'canvas',\r\n  'caption',\r\n  'center',\r\n  'circle',\r\n  'cite',\r\n  'clipPath',\r\n  'code',\r\n  'col',\r\n  'colgroup',\r\n  'command',\r\n  'content',\r\n  'data',\r\n  'datalist',\r\n  'dd',\r\n  'defs',\r\n  'del',\r\n  'details',\r\n  'dfn',\r\n  'dialog',\r\n  'dir',\r\n  'div',\r\n  'dl',\r\n  'dt',\r\n  'element',\r\n  'ellipse',\r\n  'em',\r\n  'embed',\r\n  'fieldset',\r\n  'figcaption',\r\n  'figure',\r\n  'font',\r\n  'footer',\r\n  'foreignObject',\r\n  'form',\r\n  'frame',\r\n  'frameset',\r\n  'g',\r\n  'h1',\r\n  'h2',\r\n  'h3',\r\n  'h4',\r\n  'h5',\r\n  'h6',\r\n  'head',\r\n  'header',\r\n  'hgroup',\r\n  'hr',\r\n  'html',\r\n  'i',\r\n  'iframe',\r\n  'image',\r\n  'img',\r\n  'input',\r\n  'ins',\r\n  'isindex',\r\n  'kbd',\r\n  'keygen',\r\n  'label',\r\n  'legend',\r\n  'li',\r\n  'line',\r\n  'linearGradient',\r\n  'link',\r\n  'listing',\r\n  'main',\r\n  'map',\r\n  'mark',\r\n  'marquee',\r\n  'mask',\r\n  'math',\r\n  'menu',\r\n  'menuitem',\r\n  'meta',\r\n  'meter',\r\n  'multicol',\r\n  'nav',\r\n  'nextid',\r\n  'nobr',\r\n  'noembed',\r\n  'noframes',\r\n  'noscript',\r\n  'object',\r\n  'ol',\r\n  'optgroup',\r\n  'option',\r\n  'output',\r\n  'p',\r\n  'param',\r\n  'path',\r\n  'pattern',\r\n  'picture',\r\n  'plaintext',\r\n  'polygon',\r\n  'polyline',\r\n  'pre',\r\n  'progress',\r\n  'q',\r\n  'radialGradient',\r\n  'rb',\r\n  'rbc',\r\n  'rect',\r\n  'rp',\r\n  'rt',\r\n  'rtc',\r\n  'ruby',\r\n  's',\r\n  'samp',\r\n  'script',\r\n  'section',\r\n  'select',\r\n  'shadow',\r\n  'slot',\r\n  'small',\r\n  'source',\r\n  'spacer',\r\n  'span',\r\n  'stop',\r\n  'strike',\r\n  'strong',\r\n  'style',\r\n  'sub',\r\n  'summary',\r\n  'sup',\r\n  'svg',\r\n  'table',\r\n  'tbody',\r\n  'td',\r\n  'template',\r\n  'text',\r\n  'textarea',\r\n  'tfoot',\r\n  'th',\r\n  'thead',\r\n  'time',\r\n  'title',\r\n  'tr',\r\n  'track',\r\n  'tspan',\r\n  'tt',\r\n  'u',\r\n  'ul',\r\n  'var',\r\n  'video',\r\n  'wbr',\r\n  'xmp',\r\n] as const;\r\n\r\nexport const unitlessStyleProps = [\r\n  'borderImageOutset',\r\n  'borderImageSlice',\r\n  'borderImageWidth',\r\n  'fontWeight',\r\n  'lineHeight',\r\n  'opacity',\r\n  'orphans',\r\n  'tabSize',\r\n  'widows',\r\n  'zIndex',\r\n  'zoom',\r\n  // SVG-related properties\r\n  'fillOpacity',\r\n  'floodOpacity',\r\n  'stopOpacity',\r\n  'strokeDasharray',\r\n  'strokeDashoffset',\r\n  'strokeMiterlimit',\r\n  'strokeOpacity',\r\n  'strokeWidth',\r\n  // prefixed\r\n  'animationIterationCount',\r\n  'boxFlex',\r\n  'boxFlexGroup',\r\n  'boxOrdinalGroup',\r\n  'columnCount',\r\n  'flex',\r\n  'flexGrow',\r\n  'flexPositive',\r\n  'flexShrink',\r\n  'flexNegative',\r\n  'flexOrder',\r\n  'gridRow',\r\n  'gridColumn',\r\n  'order',\r\n  'lineClamp',\r\n];\r\n","import { unitlessStyleProps } from \"../Tags\";\r\n\r\n/**\r\n * getCssValue() function to get css value with unit or without unit\r\n * it is only for style property - it cannot be used with transform keys\r\n * @param property - style property\r\n * @param value - style value\r\n * @returns - value with unit or without unit\r\n */\r\nexport function getCssValue(property: string, value: number | string) {\r\n  let cssValue;\r\n  if (typeof value === \"number\") {\r\n    if (unitlessStyleProps.indexOf(property) !== -1) {\r\n      cssValue = value;\r\n    } else {\r\n      cssValue = value + \"px\";\r\n    }\r\n  } else {\r\n    cssValue = value;\r\n  }\r\n\r\n  return cssValue;\r\n}\r\n","/**\r\n * isDefined to check the value is defined or not\r\n * @param value - any\r\n * @returns - boolean\r\n */\r\nexport const isDefined = (value: any) => {\r\n  return value !== null && value !== undefined;\r\n};\r\n","/**\r\n * Function to convert camel case to dashed case\r\n * eg: backgroundColor -> background-color\r\n *\r\n * @param str\r\n */\r\nexport function camelToDash(str: string) {\r\n  if (str != str.toLowerCase()) {\r\n    str = str.replace(/[A-Z]/g, (m) => '-' + m.toLowerCase());\r\n  }\r\n  return str;\r\n}\r\n","import {\r\n  rgbaToHex,\r\n  hexToRgba,\r\n  COLOR_NUMBER_REGEX,\r\n  HEX_NAME_COLOR,\r\n  colorNames,\r\n} from './Colors';\r\nimport { FluidValue } from '../types';\r\nimport { isTransitionValue } from '../react/functions';\r\n\r\ntype ExtrapolateType = 'identity' | 'extend' | 'clamp';\r\n\r\nconst _internalInterpolate = (\r\n  val: number,\r\n  arr: any,\r\n  extrapolateLeft: ExtrapolateType,\r\n  extrapolateRight: ExtrapolateType\r\n) => {\r\n  const [inputMin, inputMax, outputMin, outputMax] = arr;\r\n  let result: number = val;\r\n\r\n  // EXTRAPOLATE\r\n  if (result < inputMin) {\r\n    if (extrapolateLeft === 'identity') {\r\n      return result;\r\n    } else if (extrapolateLeft === 'clamp') {\r\n      result = inputMin;\r\n    } else if (extrapolateLeft === 'extend') {\r\n      // noop\r\n    }\r\n  }\r\n\r\n  if (result > inputMax) {\r\n    if (extrapolateRight === 'identity') {\r\n      return result;\r\n    } else if (extrapolateRight === 'clamp') {\r\n      result = inputMax;\r\n    } else if (extrapolateRight === 'extend') {\r\n      // noop\r\n    }\r\n  }\r\n\r\n  if (outputMin === outputMax) {\r\n    return outputMin;\r\n  }\r\n\r\n  if (inputMin === inputMax) {\r\n    if (val <= inputMin) {\r\n      return outputMin;\r\n    }\r\n    return outputMax;\r\n  }\r\n\r\n  // Input Range\r\n  if (inputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (inputMax === Infinity) {\r\n    result = result - inputMin;\r\n  } else {\r\n    result = (result - inputMin) / (inputMax - inputMin);\r\n  }\r\n\r\n  // Output Range\r\n  if (outputMin === -Infinity) {\r\n    result = -result;\r\n  } else if (outputMax === Infinity) {\r\n    result = result + outputMin;\r\n  } else {\r\n    result = result * (outputMax - outputMin) + outputMin;\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nconst _getNarrowedInputArray = function (\r\n  x: number,\r\n  input: number[],\r\n  output: Array<number | string>\r\n): Array<number | string> {\r\n  const length = input.length;\r\n  let narrowedInput: Array<number | string> = [];\r\n\r\n  // Boundaries\r\n  if (x < input[0]) {\r\n    narrowedInput = [input[0], input[1], output[0], output[1]];\r\n  } else if (x > input[length - 1]) {\r\n    narrowedInput = [\r\n      input[length - 2],\r\n      input[length - 1],\r\n      output[length - 2],\r\n      output[length - 1],\r\n    ];\r\n  }\r\n\r\n  // Narrow the input and output ranges\r\n  for (let i = 1; i < length; ++i) {\r\n    if (x <= input[i]) {\r\n      narrowedInput = [input[i - 1], input[i], output[i - 1], output[i]];\r\n      break;\r\n    }\r\n  }\r\n\r\n  return narrowedInput;\r\n};\r\n\r\nconst _getColorInterpolate = (value: number, narrowedInput: Array<string>) => {\r\n  const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\r\n\r\n  const outputMinProcessed = hexToRgba(outputMin);\r\n  const outputMaxProcessed = hexToRgba(outputMax);\r\n\r\n  const red = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.r, outputMaxProcessed.r],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  const green = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.g, outputMaxProcessed.g],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  const blue = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.b, outputMaxProcessed.b],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  const alpha = _internalInterpolate(\r\n    value,\r\n    [inputMin, inputMax, outputMinProcessed.a, outputMaxProcessed.a],\r\n    'clamp',\r\n    'clamp'\r\n  );\r\n\r\n  return rgbaToHex({ r: red, g: green, b: blue, a: alpha });\r\n};\r\n\r\nconst _getArrayInterpolate = (\r\n  value: number,\r\n  narrowedInput: Array<any>,\r\n  _extrapolateLeft: ExtrapolateType,\r\n  _extrapolateRight: ExtrapolateType\r\n) => {\r\n  const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\r\n\r\n  if (outputMin.length === outputMax.length) {\r\n    return outputMin.map((val: any, index: number) => {\r\n      if (typeof val === 'string') {\r\n        // IF IT IS STRING THEN IT MUST BE HEX COLOR\r\n        return _getColorInterpolate(value, [\r\n          inputMin,\r\n          inputMax,\r\n          val,\r\n          outputMax[index],\r\n        ]);\r\n      } else {\r\n        return _internalInterpolate(\r\n          value,\r\n          [inputMin, inputMax, val, outputMax[index]],\r\n          _extrapolateLeft,\r\n          _extrapolateRight\r\n        );\r\n      }\r\n    });\r\n  } else {\r\n    throw new Error(\"Array length doesn't match\");\r\n  }\r\n};\r\n\r\nconst _getTemplateString = (str: string) => {\r\n  return str.replace(COLOR_NUMBER_REGEX, function (match) {\r\n    if (match.indexOf(' ') === 0) {\r\n      return ' $';\r\n    }\r\n\r\n    return '$';\r\n  });\r\n};\r\n\r\nconst _getParsedStringArray = (str: any) => {\r\n  return str.match(COLOR_NUMBER_REGEX).map((v: string) => {\r\n    if (v.indexOf('#') !== -1) {\r\n      return v;\r\n    } else {\r\n      return Number(v);\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * Function returns if the template of two strings are matched\r\n * i.e. they can be interpolated\r\n * @param str1 - first string\r\n * @param str2 - second string\r\n * @returns boolean indicating two strings matched or not\r\n */\r\nconst stringMatched = (str1: string, str2: string) => {\r\n  return (\r\n    _getTemplateString(str1).trim().replace(/\\s/g, '').length ===\r\n    _getTemplateString(str2).trim().replace(/\\s/g, '').length\r\n  );\r\n};\r\n\r\n/**\r\n * Function which proccess the\r\n * hexadecimal colors to its proper formats\r\n * @param str - string\r\n * @returns hex color string\r\n */\r\nconst getProcessedColor = (str: any) => {\r\n  return str.replace(HEX_NAME_COLOR, function (match: any) {\r\n    if (match.indexOf('#') !== -1) {\r\n      return rgbaToHex(hexToRgba(match));\r\n    } else if (Object.prototype.hasOwnProperty.call(colorNames, match)) {\r\n      return colorNames[match];\r\n    } else {\r\n      throw new Error('String cannot be parsed!');\r\n    }\r\n  });\r\n};\r\n\r\nexport interface ExtrapolateConfig {\r\n  extrapolate?: ExtrapolateType;\r\n  extrapolateRight?: ExtrapolateType;\r\n  extrapolateLeft?: ExtrapolateType;\r\n}\r\n\r\n/**\r\n * interpolateNumbers to interpolate the numeric value\r\n * @param value - number\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n * @returns - number | string\r\n */\r\nexport function interpolateNumbers(\r\n  value: number,\r\n  inputRange: Array<number>,\r\n  outputRange: Array<number | string>,\r\n  extrapolateConfig?: ExtrapolateConfig\r\n) {\r\n  const extrapolate = extrapolateConfig?.extrapolate;\r\n  const extrapolateLeft = extrapolateConfig?.extrapolateLeft;\r\n  const extrapolateRight = extrapolateConfig?.extrapolateRight;\r\n\r\n  const narrowedInput = _getNarrowedInputArray(value, inputRange, outputRange);\r\n\r\n  let _extrapolateLeft: ExtrapolateType = 'extend';\r\n  if (extrapolateLeft !== undefined) {\r\n    _extrapolateLeft = extrapolateLeft;\r\n  } else if (extrapolate !== undefined) {\r\n    _extrapolateLeft = extrapolate;\r\n  }\r\n\r\n  let _extrapolateRight: ExtrapolateType = 'extend';\r\n  if (extrapolateRight !== undefined) {\r\n    _extrapolateRight = extrapolateRight;\r\n  } else if (extrapolate !== undefined) {\r\n    _extrapolateRight = extrapolate;\r\n  }\r\n\r\n  if (outputRange.length) {\r\n    if (typeof outputRange[0] === 'number') {\r\n      return _internalInterpolate(\r\n        value,\r\n        narrowedInput,\r\n        _extrapolateLeft,\r\n        _extrapolateRight\r\n      );\r\n    } else if (Array.isArray(outputRange[0])) {\r\n      return _getArrayInterpolate(\r\n        value,\r\n        narrowedInput,\r\n        _extrapolateLeft,\r\n        _extrapolateRight\r\n      );\r\n    } else {\r\n      const [inputMin, inputMax, outputMin, outputMax] = narrowedInput;\r\n\r\n      const processedOutputMin = getProcessedColor(outputMin);\r\n      const processedOutputMax = getProcessedColor(outputMax);\r\n\r\n      let templateString = _getTemplateString(processedOutputMin);\r\n\r\n      if (stringMatched(processedOutputMin, processedOutputMax)) {\r\n        const outputMinParsed = _getParsedStringArray(processedOutputMin);\r\n        const outputMaxParsed = _getParsedStringArray(processedOutputMax);\r\n\r\n        const result = _getArrayInterpolate(\r\n          value,\r\n          [inputMin, inputMax, outputMinParsed, outputMaxParsed],\r\n          _extrapolateLeft,\r\n          _extrapolateRight\r\n        );\r\n\r\n        for (const v of result) templateString = templateString.replace('$', v);\r\n        return templateString;\r\n      } else {\r\n        throw new Error(\"Output range doesn't match string format!\");\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Output range cannot be Empty');\r\n  }\r\n}\r\n\r\n/**\r\n * interpolateTransitionValue to interpolating TransitionValue type value\r\n * @param value\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n * @returns TransitionValue\r\n */\r\nexport const interpolateTransitionValue = (\r\n  value: FluidValue,\r\n  inputRange: Array<number>,\r\n  outputRange: Array<number | string>,\r\n  extrapolateConfig?: ExtrapolateConfig\r\n) => {\r\n  return {\r\n    ...value,\r\n    isInterpolation: true,\r\n    interpolationConfig: {\r\n      inputRange,\r\n      outputRange,\r\n      extrapolateConfig,\r\n    },\r\n  };\r\n};\r\n\r\n/**\r\n * interpolate function to interpolate both transition\r\n * as well as numerical value\r\n * @param value\r\n * @param inputRange\r\n * @param outputRange\r\n * @param extrapolateConfig\r\n */\r\nexport const interpolate = (\r\n  value: number | FluidValue,\r\n  inputRange: Array<number>,\r\n  outputRange: Array<number | string>,\r\n  extrapolateConfig?: ExtrapolateConfig\r\n) => {\r\n  if (isTransitionValue(value)) {\r\n    return interpolateTransitionValue(\r\n      value as FluidValue,\r\n      inputRange,\r\n      outputRange,\r\n      extrapolateConfig\r\n    );\r\n  } else if (typeof value === 'number') {\r\n    return interpolateNumbers(\r\n      value,\r\n      inputRange,\r\n      outputRange,\r\n      extrapolateConfig\r\n    );\r\n  } else {\r\n    throw new Error(`'${typeof value}' cannot be interpolated!`);\r\n  }\r\n};\r\n","// Combine multiple refs\r\nexport function combineRefs(\r\n  ...refs: Array<React.RefObject<any> | ((element: HTMLElement) => void)>\r\n) {\r\n  return function applyRef(element: HTMLElement) {\r\n    refs.forEach((ref) => {\r\n      if (!ref) {\r\n        return;\r\n      }\r\n\r\n      if (typeof ref === \"function\") {\r\n        ref(element);\r\n        return;\r\n      }\r\n\r\n      if (\"current\" in ref) {\r\n        // @ts-ignore\r\n        ref.current = element;\r\n      }\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nimport { SpringAnimation } from '../animation/SpringAnimation';\r\nimport { TimingAnimation } from '../animation/TimingAnimation';\r\nimport { interpolateNumbers } from '../interpolation/Interpolation';\r\nimport { tags } from './Tags';\r\nimport {\r\n  ResultType,\r\n  TransitionValueConfig,\r\n  UpdateValue,\r\n  FluidValue,\r\n} from '../types';\r\nimport { styleTrasformKeys, getTransform } from './TransformStyles';\r\nimport { combineRefs } from './combineRefs';\r\nimport {\r\n  isDefined,\r\n  getCleanProps,\r\n  getAnimatableObject,\r\n  AnimationObject,\r\n  getNonAnimatableStyle,\r\n  getCssValue,\r\n  camelToDash,\r\n} from './functions';\r\n\r\n/**\r\n * Animation Types : For now spring and timing based animations\r\n */\r\ntype AnimationTypes = 'spring' | 'timing';\r\n\r\nexport type AnimatedCSSProperties = {\r\n  [key in keyof React.CSSProperties]: React.CSSProperties[key] | any;\r\n} & {\r\n  [key in typeof styleTrasformKeys[number]]?:\r\n    | number\r\n    | string\r\n    | FluidValue\r\n    | any;\r\n};\r\n\r\nexport type AnimatedHTMLAttributes<T> = {\r\n  [property in keyof React.HTMLAttributes<T>]:\r\n    | React.HTMLAttributes<T>[property]\r\n    | FluidValue\r\n    | any;\r\n};\r\n\r\nexport type AnimatedSVGAttributes<T> = {\r\n  [property in keyof React.SVGAttributes<T>]:\r\n    | React.SVGAttributes<T>[property]\r\n    | FluidValue\r\n    | any;\r\n};\r\n\r\nexport type AnimatedProps<T> = Omit<\r\n  AnimatedHTMLAttributes<T> & AnimatedSVGAttributes<T>,\r\n  'style'\r\n> & {\r\n  style?: AnimatedCSSProperties;\r\n};\r\n\r\ntype WrappedComponentOrTag =\r\n  | React.ComponentType<any>\r\n  | keyof JSX.IntrinsicElements;\r\n\r\n/**\r\n * Higher order component to make any component animatable\r\n * @param WrapperComponent\r\n */\r\nexport function makeAnimatedComponent<C extends WrappedComponentOrTag>(\r\n  WrapperComponent: C\r\n) {\r\n  function Wrapper(props: AnimatedProps<C>, forwardRef: any) {\r\n    const ref = React.useRef<any>(null);\r\n\r\n    // for transforms, we add all the transform keys in transformPropertiesObjectRef and\r\n    // use getTransform() function to get transform string.\r\n    // we make sure that the non-animatable transforms to be present in\r\n    // transformPropertiesObjectRef , non-animatable transform from first paint\r\n    // are overridden if it is not added.\r\n    const transformPropertiesObjectRef = React.useRef<{\r\n      [property: string]: any;\r\n    }>({});\r\n\r\n    // generates the array of animation object\r\n    const animations = React.useMemo<Array<AnimationObject>>(() => {\r\n      const animatableStyles = getAnimatableObject(\r\n        'style',\r\n        props.style ?? Object.create({})\r\n      );\r\n      const animatableProps = getAnimatableObject(\r\n        'props',\r\n        props ?? Object.create({})\r\n      );\r\n\r\n      return [...animatableStyles, ...animatableProps];\r\n    }, [props]);\r\n\r\n    /**\r\n     * Update non-animated style if style changes...\r\n     * here useLayoutEffect is used so that the changes is reflected\r\n     * as soon as possible\r\n     */\r\n    React.useLayoutEffect(() => {\r\n      if (!props.style) {\r\n        return;\r\n      }\r\n\r\n      const nonAnimatableStyle = getNonAnimatableStyle(\r\n        props.style as React.CSSProperties,\r\n        transformPropertiesObjectRef\r\n      );\r\n\r\n      Object.keys(nonAnimatableStyle).forEach((styleProp) => {\r\n        const value =\r\n          nonAnimatableStyle[styleProp as keyof React.CSSProperties];\r\n\r\n        if (ref.current) {\r\n          ref.current.style[styleProp] = getCssValue(styleProp, value);\r\n        }\r\n      });\r\n    }, [props.style]);\r\n\r\n    React.useLayoutEffect(() => {\r\n      const subscribers: any = [];\r\n\r\n      animations.forEach((props: AnimationObject) => {\r\n        const {\r\n          _subscribe,\r\n          _value,\r\n          _config,\r\n          _currentValue,\r\n          propertyType,\r\n          property,\r\n          animatable,\r\n        } = props;\r\n\r\n        // store animations here\r\n        let animation: any = null;\r\n\r\n        if (!ref.current) {\r\n          return;\r\n        }\r\n\r\n        // whether or not the property is one of transform keys\r\n        const isTransform = styleTrasformKeys.indexOf(property as any) !== -1;\r\n\r\n        // called every frame to update new transform values\r\n        // getTransform function returns the valid transform string\r\n        const getTransformValue = (value: any) => {\r\n          transformPropertiesObjectRef.current[property] = value;\r\n          return getTransform(transformPropertiesObjectRef.current);\r\n        };\r\n\r\n        // to apply animation values to a ref node\r\n        const applyAnimationValues = (value: any) => {\r\n          if (ref.current) {\r\n            if (propertyType === 'style') {\r\n              // set animation to style\r\n              if (isTransform) {\r\n                ref.current.style.transform = getTransformValue(value);\r\n              } else {\r\n                ref.current.style[property] = getCssValue(property, value);\r\n              }\r\n            } else if (propertyType === 'props') {\r\n              // set animation to property\r\n              ref.current.setAttribute(camelToDash(property), value);\r\n            }\r\n          }\r\n        };\r\n\r\n        const onFrame = (value: number) => {\r\n          _currentValue.current = value;\r\n\r\n          // for interpolation we check isInterpolation boolean\r\n          // which is injected from interpolate function\r\n          if (props.isInterpolation) {\r\n            const { interpolationConfig } = props;\r\n\r\n            const interpolatedValue = interpolateNumbers(\r\n              value,\r\n              interpolationConfig.inputRange,\r\n              interpolationConfig.outputRange,\r\n              interpolationConfig.extrapolateConfig\r\n            );\r\n\r\n            // interpolate it first and\r\n            // apply animation to ref node\r\n            applyAnimationValues(interpolatedValue);\r\n          } else {\r\n            // if it is FluidValue, we dont have to interpolate it\r\n            // just apply animation value\r\n            applyAnimationValues(value);\r\n          }\r\n        };\r\n\r\n        /**\r\n         * Function to initialize dynamic animations according to config\r\n         * \"spring\" or \"timing\" based animations are\r\n         * determined by the config duration\r\n         */\r\n        const defineAnimation = (\r\n          value: number,\r\n          config?: TransitionValueConfig\r\n        ) => {\r\n          const animationConfig: TransitionValueConfig | undefined = {\r\n            ..._config,\r\n            ...config,\r\n          };\r\n\r\n          let type: AnimationTypes;\r\n          /**\r\n           * Here duration key determines the type of animation\r\n           * spring config are overridden by duration\r\n           */\r\n          if (\r\n            isDefined(animationConfig?.duration) ||\r\n            animationConfig?.immediate\r\n          ) {\r\n            type = 'timing';\r\n          } else {\r\n            type = 'spring';\r\n          }\r\n\r\n          if (type === 'spring') {\r\n            animation = new SpringAnimation({\r\n              initialPosition: value,\r\n              config: animationConfig,\r\n            });\r\n          } else if (type === 'timing') {\r\n            animation = new TimingAnimation({\r\n              initialPosition: value,\r\n              config: animationConfig,\r\n            });\r\n          }\r\n        };\r\n\r\n        const onUpdate = (\r\n          value: UpdateValue,\r\n          callback?: (value: ResultType) => void\r\n        ) => {\r\n          const { toValue, config } = value;\r\n\r\n          if (animatable) {\r\n            const previousAnimation = animation;\r\n\r\n            // animatable\r\n            if (previousAnimation._toValue !== toValue) {\r\n              /**\r\n               * stopping animation here would affect in whole\r\n               * animation pattern, requestAnimationFrame instance\r\n               * is created on frequent calls like mousemove\r\n               * it flushes current running requestAnimationFrame\r\n               */\r\n              animation.stop();\r\n\r\n              // re-define animation here with different configuration\r\n              // used for dynamic animation\r\n              defineAnimation(previousAnimation._position, config);\r\n\r\n              // invoke onStart function\r\n              config?.onStart && config.onStart(previousAnimation._position);\r\n\r\n              // start animations here by start api\r\n              animation.start({\r\n                toValue,\r\n                onFrame,\r\n                previousAnimation,\r\n                onEnd: callback,\r\n              });\r\n            }\r\n          } else {\r\n            // non-animatable\r\n            if (typeof toValue === typeof _value) {\r\n              if (ref.current) {\r\n                ref.current.style[property] = getCssValue(property, toValue);\r\n              }\r\n            } else {\r\n              throw new Error('Cannot set different types of animation values');\r\n            }\r\n          }\r\n        };\r\n\r\n        // called initially to paint the frame with initial value '_value'\r\n        onFrame(_value as number);\r\n\r\n        if (animatable) {\r\n          // define type of animation to paint the first frame with initial value '_value'\r\n          defineAnimation(_value as number);\r\n        }\r\n\r\n        const subscribe = _subscribe(onUpdate, property, Date.now());\r\n        subscribers.push(subscribe);\r\n      });\r\n\r\n      return () => {\r\n        // cleanup\r\n        subscribers.forEach((subscriber: any) => subscriber);\r\n      };\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    return React.createElement(WrapperComponent, {\r\n      ...getCleanProps(props),\r\n      ref: combineRefs(ref, forwardRef),\r\n    });\r\n  }\r\n\r\n  return React.forwardRef(Wrapper);\r\n}\r\n\r\ntype WithAnimated = {\r\n  [element in keyof JSX.IntrinsicElements]: React.ComponentType<\r\n    AnimatedProps<element>\r\n  >;\r\n};\r\n\r\nexport const animated: WithAnimated = {} as any;\r\ntags.forEach((element) => {\r\n  animated[element] = makeAnimatedComponent(\r\n    element as keyof JSX.IntrinsicElements\r\n  );\r\n});\r\n","import type {\r\n  Fn,\r\n  Length,\r\n  ResultType,\r\n  SubscribeFn,\r\n  TransitionValueConfig,\r\n  OnUpdateFn,\r\n  AssignValue,\r\n} from '../types';\r\n\r\nexport class TransitionValue {\r\n  public _subscribe: SubscribeFn;\r\n  public _value: Length;\r\n  public _config?: TransitionValueConfig;\r\n  public _currentValue: { current: Length };\r\n  public _subscriptions: Map<{ uuid: number; property: string }, OnUpdateFn>;\r\n\r\n  public get: () => Length;\r\n\r\n  constructor(initialValue: Length, config?: TransitionValueConfig) {\r\n    this._subscriptions = new Map();\r\n    this._subscribe = (\r\n      onUpdate: OnUpdateFn,\r\n      property: string,\r\n      uuid: number\r\n    ) => {\r\n      this._subscriptions.set({ uuid, property }, onUpdate);\r\n\r\n      return () => {\r\n        this._subscriptions.delete({ uuid, property });\r\n      };\r\n    };\r\n    this._value = initialValue;\r\n    this._currentValue = { current: initialValue };\r\n    this._config = config;\r\n    this.get = () => this._currentValue.current;\r\n  }\r\n\r\n  /**\r\n   * Animates from initial value to updated value, determines the transition type `multistage`\r\n   * or `singlestage` according to updatedValue\r\n   */\r\n  setValue(updatedValue: AssignValue, callback?: Fn<ResultType, void>) {\r\n    /** Multistage transition */\r\n    if (typeof updatedValue === 'function') {\r\n      updatedValue((nextValue) => {\r\n        const multiStagePromise = new Promise((resolve) => {\r\n          for (const subscriptionKey of this._subscriptions.keys()) {\r\n            const updater = this._subscriptions.get(subscriptionKey);\r\n\r\n            if (updater) {\r\n              updater(nextValue, function (result) {\r\n                if (result.finished) {\r\n                  resolve(nextValue);\r\n                }\r\n\r\n                if (callback) {\r\n                  callback(result);\r\n                }\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        return multiStagePromise;\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    /** Singlestage transition */\r\n    for (const subscriptionKey of this._subscriptions.keys()) {\r\n      const updater = this._subscriptions.get(subscriptionKey);\r\n\r\n      updater && updater(updatedValue, callback);\r\n    }\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { TransitionValue } from '../animation/TransitionValue';\r\nimport type { TransitionValueConfig, OnUpdateFn, Length } from '../types';\r\n\r\n/**\r\n * Transition hook\r\n *\r\n * @param initialValue - initial value\r\n * @param config - the config object for `TransitionValue`\r\n */\r\nexport function useTransition(\r\n  initialValue: Length,\r\n  config?: TransitionValueConfig\r\n): [TransitionValue, OnUpdateFn] {\r\n  const isInitial = React.useRef<boolean>(true);\r\n  const transition = React.useRef(\r\n    new TransitionValue(initialValue, config)\r\n  ).current;\r\n\r\n  /**\r\n   * trigger animation on argument change\r\n   * doesn't fire the setValue method on initial render\r\n   */\r\n  React.useEffect(() => {\r\n    if (!isInitial.current) {\r\n      transition.setValue({ toValue: initialValue, config });\r\n    }\r\n\r\n    isInitial.current = false;\r\n  }, [initialValue]);\r\n\r\n  return [transition, transition.setValue.bind(transition)];\r\n}\r\n","import React from 'react';\r\nimport { useTransition } from './useTransition';\r\nimport type { FluidValue, TransitionValueConfig, AssignValue } from '../types';\r\n\r\nexport interface UseMountConfig {\r\n  from: number;\r\n  enter: number | AssignValue;\r\n  exit: number | AssignValue;\r\n  enterConfig?: TransitionValueConfig;\r\n  exitConfig?: TransitionValueConfig;\r\n  config?: TransitionValueConfig;\r\n}\r\n\r\n/**\r\n * Mount hook\r\n * applies mounting and unmounting of a component according to state change\r\n * applying transitions\r\n *\r\n * @param state - boolean indicating mount state of a component\r\n * @param config - the config object `UseMountConfig`\r\n */\r\nexport function useMount(state: boolean, config: UseMountConfig) {\r\n  const initial = React.useRef(true);\r\n  const [mounted, setMounted] = React.useState(state);\r\n  const {\r\n    from,\r\n    enter,\r\n    exit,\r\n    config: innerConfig,\r\n    enterConfig,\r\n    exitConfig,\r\n  } = React.useRef(config).current;\r\n  const [animation, setAnimation] = useTransition(from, innerConfig);\r\n\r\n  React.useEffect(() => {\r\n    if (state) {\r\n      initial.current = true;\r\n      setMounted(true);\r\n    } else {\r\n      initial.current = false;\r\n      setAnimation(\r\n        typeof exit === 'number'\r\n          ? {\r\n              toValue: exit,\r\n              config: exitConfig,\r\n            }\r\n          : exit,\r\n        function ({ finished }) {\r\n          if (finished) {\r\n            setMounted(false);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }, [state]);\r\n\r\n  React.useEffect(() => {\r\n    if (mounted && initial.current) {\r\n      setAnimation(\r\n        typeof enter === 'number'\r\n          ? {\r\n              toValue: enter,\r\n              config: enterConfig,\r\n            }\r\n          : enter\r\n      );\r\n    }\r\n  }, [mounted, initial.current]);\r\n\r\n  return function (\r\n    callback: (animation: FluidValue, mounted: boolean) => React.ReactNode\r\n  ) {\r\n    return callback(animation, mounted);\r\n  };\r\n}\r\n"],"names":["_bezier","React"],"mappings":"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"}